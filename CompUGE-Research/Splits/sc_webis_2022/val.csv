sentence,label
"preheat a pan [SEP] start the cooking timer immediately [SEP] If you cook (or bake) using a timer, you should always use preheated equipment.  Your stove top may differ from my stove top in terms of the length of time it would take to get to high heat (hell, my stove top wouldn't even hit high heat in three minutes), and this would greatly effect the final quality.  Always preheat, the instructions expect it.  Otherwise, it would tell you to put a pan on the stove top, place in pan, and turn on to high heat.  Leave for three minutes and remove.  ",0
"Amdahl's law [SEP] gustafson's law [SEP] I finally found the solution and I want to share it with you,  The solution is that you have to use Amdahl's Law.  Iff 30% of time is sequential you should use Gustafson's Law.  ",0
"Windows 7 RTM 32Bit [SEP] 64Bit [SEP] Stick with the 64bit. 32bit is a dying breed. There is no doubt in my mind that Logitech supports 64bit. Make sure you have their latest official drivers installed.  That .5gb of ram may not seem like much now, but you will be kicking yourself later for reverting to 32bit.  ",0
"Ghost [SEP] Virtualization [SEP] Virtualization is definitely the answer here. If you want multiple OSes at once, you have to go the virtualization route.  It would be very time consuming to have to continually ghost, or even reboot a machine to boot into a new OS.  The only drawback I see is machine resources.  Get a big machine with lots of memory if you plan on using several virtual OSes.  VMWare Server is a nice product that will allow you to setup the VMs and allow users to access them remotely as well (and its free!).  ",0
"recursive algorithms [SEP] their for-loop counterpart [SEP] I don't think recursive OR for-loop are related to the abstract idea of an algorithm, rather both are a specific strategy to implement an algorithm on a computing system. So your question is basically about which implementation strategy is better for algorithm - recursive or loop based.  The answer (assuming you want to implement the algorithm on general purpose of the shelf CPU) would be for-loop perform better as the recursive call would include the overhead of call stack which will grow for each recursive call.  ",0
"'Format' [SEP] 'Format (Quick)' [SEP] It depends.  If it's a disk that has been working fine, just use the quick format, otherwise I'd do a full format, which also scans for bad sectors.  More info here: KB302686.  ",1
"graph datastores [SEP] other datastores [SEP] Highly connected graphs are not easy to model or query using relational databases.  Think about social graphs - Bob is a friend to Alice, Alice is a friend to Carol.   How many friends of friends does Bob have?  Modelling and querying this kind of data is what graph datastores are good at.  Another example - think about Dr Who episodes and a corpus of data about all the actors, characters and sets used in them. In a graph datastore you could query all the episodes an actor was in a specific set with a specific character - this is not easy to model or query in relational database.  ",0
"x58 [SEP] x86 architectures [SEP] You're mixing two things up... x58 is a chipset used on the motherboards for i7 processors, x86 is the family of Intel processors that i7 is still a part of.  To kind-of answer your question, i7 is still part of the natural progression of Intel processors, latest and greatest... and if you want to use it you will likely be using an x58-based motherboard to run it.  ",2
"to build HTML Code string on the server [SEP] on the client side [SEP] Server-side    Pros: More controllable, easier to debug, less dependent on client's browser   Cons: More server load, higher network traffic and latency    Client-side    Cons: Depends on decent JS/DOM implementation in the browser.  Pros: Performance, performance, performance. Less server load (thus faster server response), much less network traffic, and thanks to previous two much less latency.    For example LinkedIn's Engineering Team article   ""Blazing fast node.js: 10 performance tips from LinkedIn Mobile"" as one of the points talks about that issue.   ",1
"Eclipse [SEP] Netbeans [SEP] Eclipse will be better than NetBeans, but NetBeans is not bad though.     Both of the IDEs provide good assistance.  Both of them have auto completion feature. In Eclipse Ctrl+Space does it. NetBeans also has a key combination to do it, I forgot it.  Both support code generation (unimplemented methods are implemented automatically).  Scene Builder is a little better in Eclipse than NetBeans, in my opinion.    Both the IDEs are good and provide user support very well. We can find many tutorials using these 2 than any other IDE. Both have many things in common and operating them is almost same. Finally, I support Eclipse a bit more than NetBeans.  ",0
"Platform Independency [SEP] Architecture Neutrality [SEP] I rely on platform portability at the expense of power every day  I write my code on a Mac or Windows machine, and see it executed on a Linux machine. If I didn't have true platform portability this would be a nightmare.  Power is less of a compromise in my opinion because hardware is so cheap in comparison to developer time. If you need more throughput then throw more hardware at it. If you really need big throughput then start optimising your bottlenecks (most of which will likely be inter-process communication rather than operating system abstraction code).  ",0
"offload work to the RDBMS [SEP] do it in code [SEP] You want to do all set-based operations in the database for performance reasons. So aggregation functions, sorting functions, joins etc.   This age calculation, I'd do in code. The only reason I might ever do something like this in a database query is if it required lots of columns that I wouldn't otherwise select that could actually amount to enough data to meaningfully slow down my query. Selecting a few integer values will not make a meaningful performance difference. And even if it makes a moderate performance difference I will be biased towards keeping this logic in the application code.  ",0
"Windows 7 Enterprise [SEP] Ultimate [SEP] [REF]  Looks like it is just a difference in licensing between Enterprise and Ultimate.  Interesting to note that Vista Ultimate and Enterprise did have some actual differences in functionality (namely, no Windows Media Center or Ultimate Extras in the Enterprise edition):  [REF]    UPDATE:  And here is a thread with several MS MVPs confirming that the only difference between Windows 7 Ultimate and Enterprise is the licensing model.  ",1
"train [SEP] bus [SEP] It does not cover all the regular buses in the country but postbus.at is the main operator and does operate buses you could use. Unfortunately, it's not a part of the national train company (ÖBB) and the website therefore also includes trains, which is why buses do not show up in the search results for this particular journey…  rome2rio is another site that's very nice for intermodal comparisons, and it seems that in this case the price would be approximately the same. (You will notice that the buses suggested by rome2rio can also be found on the postbus website, but only if you look for them one-by-one.)   ",1
a dual-core CPU [SEP] a quad-core [SEP] Check out these posts from Coding Horror:   Choosing Dual Core or Quad Core    Quad Core Desktops and Diminishing Returns   ,2
"do frequent deployment in PROD or to test server [SEP] doing it less frequently [SEP] If you are talking about a hosted web application, the users don't get a say-so in when they get upgrades. That is, they are forced to upgrade each time you do a push to production.  If your changes dramatically change the system rules or UI, you should definitely consider bundling your releases and doing it less frequently. It is very frustrating to users to have to continually re-learn how to use the tools they rely on and violates the UI principle of making them feel they are in control of their computer/software.  ",0
"under [SEP] outside a roof [SEP] I don't think it'll make much difference - you live in an area where there's good rainfall, which is good for plants in the ground, but plants in containers still need watering, regardless. Marginally, a plant in a pot outside the roof will remain damper in winter than one under the roof, but during the growing season, you will need to water regularly whether the pots are in or outside. If they are under the roof, you will need to check them during winter to see whether they need water or not.  ",1
"to have just two good letters of recommendation [SEP] two good letters and one bad letter [SEP]   Is it better to have 2 good letters or recommendation or 2 good and 1 bad letter?    Definitely, it's better to have two good letters.  A bad letter is a very, very bad thing.  They're not counting -- they're reading for understanding.  ",0
"Rails 2.x and conventions [SEP] ""enterprise"" architecture [SEP] If you're just learning Rails, I'd go with the Rails way (""When in Rome, ..."").  If you're worried that your startup may falter due to scalability issues down the road, I'd suggest you revisit your decision to use RoR.  Solving scalability problems is hard enough in an environment you know well, you don't want to struggle with an unfamiliar one when you're under the gun.  (Note that this isn't particular to Ruby, it's just as applicable to Python, Scala, Perl, C++ or any other language you don't know...)  ",0
"cheaper on day [SEP] pre-booked from UK [SEP] Between Paris and Tours you can either take a TGV (highspeed train) or an ""Intercités"" (classical train). Both are cheaper when booked in advance. The full fare for a 2nd class TGV ticket is 65 EUR. Booked in advance it can be as cheap as 25 EUR. For Intercités the range goes from 15 EUR to 36.20 EUR.   You should also know that TGVs can sell out. If you are really unlucky and show up at a very busy day, there may be no more seats available.  ",0
"Java [SEP] C++ [SEP] I'd personally go with C++ as it will give you insights into how parts of Java work under the hood (Pointers for example).  Moving to Java from C++ is fairly trivial, whereas moving the other way around is arguably more difficult.  The truly difficult thing about the Java eco-system is it's vast number of frameworks, libraries etc - they're unlikely to cover all of that at University anyhow.  At the end of the day it's not going to matter that much what language you choose, as long as you learn the principles.  My JUG is going to kill me for endorsing C++ ;-)  ",0
"online (pre-trip) [SEP] at the station when I arrive [SEP] I have not used that web site, but always bought the tickets a day in advance at the station or even just when getting on the train in Thailand. For sleepers I would recommend to buy in advance, just to be sure.  Whether you should buy before your trip really depends on how sure you are about the dates. What if you really like a place and want to stay a few extra days. Booking them while you are there gives you much more flexibility.   Rather than going to the train station you can still book online while you are in Thailand, there is internet access everywhere.  ",1
"to be a first author on a workshop paper [SEP] a co-author on a conference paper [SEP] It is better to be the first author on the highest quality paper, regardless of workshop, conference, or journal publication.  ",0
64bit [SEP] 32bit Windows [SEP] Perhaps have a look at these questions:     Whats the difference between 64 and 32 Operating systems?  Other benefits of 64-bit OS apart from memory expansion?  Should I install 64-bit versions of operating systems?    ,2
"Clopyralid [SEP] Dicamba [SEP] It depends to some extent what you mean by 'clover'. White clover or Dutch clover (Trifolium repens) and red clover (Trifolium pratense) are very susceptible to treatments containing dicamba, dichlorprop-P and mecoprop-P, or 2,4-D and mecoprop-P. Other, clover like lawn weeds are more susceptible to formulations containing fluroxpyr, MCPA and clopyralid, although these will also have some impact on Trifolium varieties. You'll note that the most effective treatments contain more than one ingredient. Any and all chemical treatments aimed at killing or lessening clovers work better in early to mid summer, and are less effective from August (or late summer/early fall) onwards.  ",1
"coarse [SEP] fine coffee ground [SEP] Mainly the grind types have to do with how long the grounds are going to be in contact with the water during the brewing of the coffee. Finer grinds for espresso (quick brewing) and medium grinds for drip, etc. This chart will give you an idea of what grinds go with which preparations [REF]  ",1
"WAV [SEP] MP3 [SEP] The executive summary of Charles' very detailed answer is:    Use WAV for recording and editing.  Use your audio editor's native file format with references to the WAV files to keep disk space under control  use MP3 for distribution. 44.1 and 160kbps is lots, unless your audience has a home stereo that is worth more than their car and ears to match.    ",1
"VFAT [SEP] ext3 [SEP] Definitely ext3/4 over VFAT.      Ext3/4 are journaling file systems, which means no fragmentation issues.    Read/writes will be significantly faster with Ext.    VFAT has a 4 GB maximum file-size, which can come back to haunt you when you need to store a large file on it after you already have it loaded up with data.    ",0
"to dual-boot [SEP] run a VM [SEP] Dual boot is a waste of time. I describe it to people as ""the 5-minute alt-tab"". It's a pain to configure, and because you can't run both OSes at once, when you need the one you're not running, you have to kill off every app and reboot.  I avoid dual boot like the plague. VM all the way.  Or, just use a single OS that does what you want. Windows with Cygwin provides a lot of the Unixy stuff that most people need.  ",0
