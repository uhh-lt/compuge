ds,id,question,answer,answer_stance,answer_stance_object,object_count,object_1,mask_pos_1,object_2,mask_pos_2
cs.stackexchange,41841,Is a LBA with stack more powerful than a LBA without?,"Theorem The following are equivalent.    $L$ is accepted by a deterministic LBA with stack  $L$ is accepted by a nondeterministic LBA with stack  $L$ is in $\operatorname{DTIME}(c^n)$ for some constant $c$.    So the computational power of a LBA with stack for decision problems is well understood. The exponential runtime limits the usefulness of this knowledge in practice. But the notion of an LBA with stack can be generalized to an $S(n)$ auxiliary pushdown automaton ($S(n)$-AuxPDA). It consists of    a read-only input tape, surrounded by endmarkers,  a finite state control,  a read-write storage tape of length $S(n)$, where $n$ is the length of the input string, and  a stack    In ""Hopcroft/Ullman (1979) Introduction to Automata Theory, Languages, and Computation (1st ed.) we find:  Theorem 14.1 The following are equivalent for $S(n)\geq\log n$.    $L$ is accepted by a deterministic $S(n)$-AuxPDA  $L$ is accepted by a nondeterministic $S(n)$-AuxPDA  $L$ is in $\operatorname{DTIME}(c^{S(n)})$ for some constant $c$.    with the surprising:  Corollary $L$ is in $\mathsf P$ if and only if $L$ is accepted by a $\log n$-AuxPDA.  The proof consists of three parts: (1) If L is accepted by a nondeterministic $S(n)$-AuxPDA with $S(n)\geq \log n$, then $L$ is in $\operatorname{DTIME}(c^{S(n)})$ for some constant $c$. (2) If $L$ is in $\operatorname{DTIME}(T(n))$, then $L$ is accepted in time $T^4(n)$ by a deterministic one-tape TM with a very simple forward-backward head scan pattern (independent of the input). (3) If $L$ is accepted in time $T(n)$ by a deterministic one-tape TM with a very simple forward-backward head scan pattern (independent of the input), then $L$ is accepted by a deterministic $\log T(n)$-AuxPDA.  Part (1) is basically a rigorous proof that the ""halting problem is decidable"", where the number of operations was counted thoroughly. Part (2) is the creative idea that prepares the stage for part (3). Part (3) uses the auxiliary storage for tracking the time step, which allows to reconstruct the head position due to the very simple forward-backward head scan pattern, and the stack for recursive backtracking. (So this proof also contains the two observations which I wanted to make more rigorous. This answer is already long enough anyway, so I won't go into more detail here.)    This leads to the following answer for the initial question Is a LBA with stack more powerful than a LBA without?: The question is equivalent to a well know open problem, and the expectation is that it is indeed more powerful.  ",2,a LBA with stack,2,a LBA with stack,"[[76, 90], [130, 144], [240, 256], [394, 411], [2389, 2405]]",a LBA without,"[[2425, 2438]]"
cooking.stackexchange,28688,Ceramic vs Stainless Steel in coffee mugs,"Stainless Steel  Most stainless steel travel mugs are double walled, but are NOT vacuum flasks  They usually have a screw on stainless steel base, or just a plain plastic base. Both of these stop thermal air losses, but are in no way as efficient as a true vacuum flask. It can't be anyway, due to the lid having a drinking hole in it  Lids with sliding covers are impossible to clean, and should be avoided. Just a simple double wall stainless steel mug, with a ""reduced spill"" style plastic lid and silicone gasket will last many years, be cleanable, and provide reasonable heat retention  Double Walled Ceramic  Double walled ceramic mugs are heavy, and while reasonable strong, generally have two fundamental flaws:    They are very heavy due to having two ceramic layers, even though both layers are quite thin  Because the layers are thin, most mugs do not have a handle, as they cannot support one without breaking    Their insulation qualities are fine and they can be-reheated in situ. The typical silicone lids they ship with are easy to wash which is a bonus  If you don't mind not having a handle they are fine, but heavy  I don't like drinking from silicone, it feels weird, and the hole is usually too small. Cutting a bigger hole always ends in disaster (maybe a hole punch would do it?). They also break much more easily than a normal ceramic mug if used while travelling  ",3,Stainless Steel in coffee mugs,2,Ceramic,"[[606, 613], [629, 641], [761, 768], [1351, 1358]]",Stainless Steel in coffee mugs,"[[10, 15], [22, 49], [125, 140], [435, 454]]"
travel.stackexchange,4133,Is it cheaper to buy a tour to the Gal√°pagos Islands at home or when in Ecuador?,"First off, it's never going to be 'cheap', unfortunately.  There are a few reasons for this.  (*these prices correct as of November 2010)  The Base  If you fly, there's no way around the fixed fare of USD$420 to fly return from Quito or Guayaquil.  Then there's the $100 National Park entrance fee.  And another $10 for taxes.  So we'll ignore all that and just call that the 'base', and focus on the rest being cheaper...  A lot seem to focus on the cruise you'll ""need"" to do.  That's not always the case.  From this site:    The airport beside Santa Cruz is on a small nearby island in the north    side called Baltera, and from here you must get a 50 cent ferry    across, then a $3 bus down south to the town. Once in town, it's very    easy to set yourself up with a $20 private hotel room with A/C and TV,    and even Wifi! Even out here in the middle of the Pacific ocean you    remain connected to your Facebook Wall posts! (or GlobeNotes    obviously!)  The volcanic island of Isabella is about 2 hours by boat from Santa    Cruz, and boats leave daily for only $25-30. Bear in mind that boats    only leave Santa Cruz at 2pm, and then leave Isabella only at 6am, so    an overnight is required.  Many people have told me that, with these two islands (Isabella alone    being 52% of the total Galapagos landmass) you can actually see MOST    of the wildlife that you see on the far off islands that require    cruises, the main exception being red-footed boobies and a few other    bird species which are only found on the remote islands.    Giant-Tortoise, Sea lions, Penguins, and TONS of Iguana. You name it..    you can see them all within about 15 min boat ride from the coast of    either Isabella or Santa Cruz. Score!    It's worth noting that according to Wikitravel:    If you are planning to visit the Galapagos Islands, Guayaquil is the    cheapest place to take a flight from. There are three air carriers    that will take you across the Galapagos Islands as well as the    Ecuadorean mainland, LAN-ECUADOR 3, Aerogal 4 and TAME [5] have    non stop daily flights, departing from Guayaquil is cheaper than    leaving from Quito(Is closer and most of the Quito flights do make an    stop at Guayaquil's airport for Refueling and picking up passengers.  International departure airport tax was just recently increased in    Guayaquil and is exactly $29.75 (January 2010). About 15$ cheaper than    Quito airport.    Now, once you're in Quito or Guayaquil, there are two sides to consider with tours.  One - the travel agents will often claim the  best tours are gone months in advance.  Certainly some will be, but I've NEVER hard of a person disappointed with their tour, no matter when they booked it.  However, I have heard of some FANTASTIC deals bought on the ground in Quito.  When staying at the Secret Garden Hostel in Quito, the Carpedm tour company downstairs was very closely linked with the hostel, offering free city tours and salsa lessons and the like.  In addition, they were able to advise people about Galapagos options.  I heard of people getting final berths on 5-star boats for the equivalent of paying 2 days for 7, others getting discounted meals, and they were all booked in Quito or Guayaquil.  So in conclusion, it's hard to say for certain whether things are cheaper on the ground, but from anecdotal opinions, my experience, and the very reason tour companies exist in these cities, is that it is possible to beat prices when on the ground.  And of course, this will flex with seasonal trends - more likely to get bargains in low season.    ",3,when in Ecuador,2,at home,[],when in Ecuador,[]
yahoo,3905134,3905134,3905134,2,Opera,2,Opera,"[[95, 100], [396, 401], [597, 602], [666, 671]]",Firefox,"[[61, 68], [122, 129], [241, 248], [329, 336], [515, 522]]"
softwarerecs.stackexchange,10608,Good and free unit-testing alternatives to Telerik's JustMock,"Not ideal, and not completely free, but if you have Visual Studio Premium or Ultimate, there is Microsoft Fakes included in it, which is another profiler-based mocking framework, providing such features. It cannot be installed in the lower editions of VS, however it's frely avaiable in the upper ones. No idea if that's ""free enough"" for you.  Have a look to those questions and articles about it:  [REF]    [REF]    However, in my opinion, the very need of such ""elevated"" features shows a flawed design in the code under test, that precludes isolated unit testing. Code directly calling static methods will always have such problems, and the typical solution is to use dependency injection instead, decoupling static calls behind an interface and injecting and mocking it afterwards (but a discussion of that is not relevant to this site, StackOverflow is better suited for it). For those situations, I use both Moq and NSubstitute, both of them are much simpler proxy-based mock frameworks.  ",3,Microsoft Fakes,2,Telerik's JustMock,[],Microsoft Fakes,"[[96, 111]]"
yahoo,329858,329858,329858,1,Neutral,2,xbox 360,"[[243, 255], [605, 616]]",ps3,"[[44, 51], [433, 440], [710, 717]]"
yahoo,2334784,2334784,2334784,3,the Air Force,2,the Navy,"[[6, 12], [104, 108]]",the Air Force,"[[44, 57], [93, 102]]"
yahoo,3821763,3821763,3821763,3,Audi,2,BMW,"[[177, 181], [413, 416], [612, 614], [680, 682], [933, 936], [1060, 1064]]",Audi,"[[226, 231], [346, 352], [569, 594], [655, 666], [728, 734]]"
music.stackexchange,9369,what's the difference between light rosin and dark rosin?,"The answer may surprise you:      colour    Really, it gives you the option to avoid light coloured rosin dust on your instrument. Useful if you have a very dark instrument.   ",1,Neutral,2,light rosin,"[[85, 105]]",dark rosin,[]
yahoo,4240286,4240286,4240286,0,,2,buy a house in NYC,"[[30, 61]]",in New Haven CT.,"[[167, 176]]"
yahoo,1010735,1010735,1010735,2,Indian WS,2,Indian WS,"[[8, 44]]",Browns SB,"[[64, 74], [183, 204]]"
yahoo,2369366,2369366,2369366,3,PhD,2,MD,"[[72, 74], [259, 261], [852, 854]]",PhD,"[[115, 118], [651, 654], [1009, 1013], [1167, 1170], [1281, 1284]]"
cs.stackexchange,29854,Performance of microkernel vs monolithic kernel,"As is always the answer (or at least the preface) to performance-related questions: know your problem domain, run comparative benchmarks, and remember what premature optimization is.  First, no comprehensive benchmarking trials have compared monolithic kernels to current-generation microkernel systems that operate in an equivalent manner. So, while there may be trials that compare specific elements of those kernels, they're not going to be representative of the ""big picture"" that your question is looking to paint.  With that being said, there are wildly divergent observations of kernel performance across microkernels; for example, the L4 microkernel family can be said to have IPC performance an order of magnitude higher than the Mach kernel. But every Apple device from this decade is running Mach, and they seem to work plenty fast, right?  The moral of the story is that anybody who's deciding what kernel architecture to use needs to first decide what their ultimate goal is. Microkernel systems are (when properly implemented, of course) more secure, maintainable, and modular. However, they can be tough to architect properly, and may have performance overhead over a monolithic implementation. A monolithic kernel will be faster, but security will be harder to implement and it will be less modular and less easy to customize.  Your kernel architecture should be based on what your end goal is.  (And when all else fails, try it both ways and see what happens.)  ",1,Neutral,2,microkernel,"[[283, 294], [612, 624], [646, 657], [989, 1000]]",monolithic kernel,"[[242, 260], [1183, 1193], [1212, 1229]]"
yahoo,3729843,3729843,3729843,0,,2,a chineese girl friend,[],Italian GF,[]
yahoo,3466924,3466924,3466924,1,Neutral,2,hair,"[[50, 56]]",bald men,"[[60, 67]]"
yahoo,1379872,1379872,1379872,3,Regine,2,Mariah,"[[7, 13], [198, 204]]",Regine,"[[38, 54], [78, 94], [227, 233]]"
superuser.stackexchange,17947,Advantages of Ubuntu LTS versions over regular Ubuntu?,"From the Releases page on the wiki:    Ubuntu releases are supported for 18    months. Ubuntu LTS (Long Term Support)    releases are supported for 3 years on    the desktop, and 5 years on the    server.    This means that normal releases are will have bugfix and security updates for 18 months, while LTS releases are maintained for 3 or 5 years (depending on the version).  In other words: if you don't want to upgrade your system at least every 18 months, you'll want to use a LTS release so you'll be able to get security updates for a longer period.  As of the 12.04 LTS release, there is no distinction between server and desktop releases. LTS support is for 5 years despite release type. There is no longer any 3 year support. For a visualization of the support coverage see the Ubuntu wiki page about LTS: [REF]  ",2,Ubuntu LTS versions,2,Ubuntu LTS versions,"[[87, 129], [303, 315], [479, 492], [573, 584], [647, 658], [810, 813]]",regular Ubuntu,"[[224, 239]]"
gardening.stackexchange,22065,Organic or Traditional lawn fertilizer: which is safer for areas with young children?,"This is a difficult one if you have children. First, let's deal with the two fertilizers you've mentioned - the first one, non organic, has a much higher Nitrogen level, as you've noticed, nearly 3 times the level of the organic one, and is much more suitable for use in Fall. Because its an autumn formulation, it will take longer to break down than the organic one you have, which does not seem to be specifically for autumn use. It also means you need less of it so its usually spread more thinly, and its the one I would choose in these circumstances.  The usual advice where children will be playing on grass after treatment is to use a liquid which, once its dry, is no trouble to either pets or children, and this is particularly useful in summer. However, because its Fall, you do actually need a product in granular or dry formulation because the idea is it breaks down gradually, over a much longer period of time than a liquid would do, which is more or less instant. Regarding the difference between them, in theory, either product could burn skin if the person is in prolonged contact and is particularly sensitive, but I imagine your children won't be lying for hours on the grass with bare skin.   Although the idea of an organic product seems better, in practice, bonemeal can produce dust, attracts various animals who think its something interesting to eat, and isn't any safer from a skin point of view when compared with the non organic product. So, on balance, I'd recommend the non organic version, carefully spread at exactly the right rate and no more, following the instructions to the letter. You should exclude children and pets whilst the treatment is carried out, and it would be better to keep them off the area until its been well watered in over a couple of days or so. I know the instructions say no need to water in, but if your sense of smell is good, after such a treatment is spread, the first couple of times it gets wet you can actually smell the treatment in the air, so I'd water it in regardless.  I do have one caveat though - I would check with Scott's first before using anything, to make sure that any product you choose is suitable for a lawn which has only been down a couple of months. If its like Scotts products here in the UK, there should be a contact phone number on the packaging for queries/customer service. It would also be interesting to find out what product, and its NPK ratio, the installer would use himself...  ",3,Traditional lawn fertilizer,2,Organic,"[[217, 232], [351, 362], [1234, 1252]]",Traditional lawn fertilizer,"[[123, 134], [1441, 1464], [1496, 1519]]"
softwarerecs.stackexchange,1049,"Cheap modern image editor to stitch images, draw basic shapes, crop, resize","There is Paint.NET. It is a free image editing software. It is easy to handle as MS Paint, but contains a lot of advanced features. It supports many different formats. I use it very often to edit images. It is easy to handle and available with translations for different languages.   Paint.NET:    is free  has a modern interface  supports painting on the image  is able to change the size of the paper, the image and crop the image  has vector graphic support, made possible via a plugin  makes it possible to stitch images together How to stitch images in Paint.NET  has support for add-ons      ",2,Paint.NET,2,Paint.NET,"[[9, 18], [284, 293], [558, 567]]",MS Paint,"[[81, 89]]"
yahoo,3777375,3777375,3777375,3,Playstation 3,2,Xbox 360,"[[124, 139]]",Playstation 3,"[[4, 7], [270, 277]]"
yahoo,342263,342263,342263,3,C230 Coupe,2,C240 Sedan,"[[111, 116], [466, 476], [485, 489], [557, 562]]",C230 Coupe,"[[4, 14], [45, 54], [247, 252], [408, 418], [579, 590]]"
softwareengineering.stackexchange,29819,What is the difference between WCF service and a simple Web service in developing using .NET Framework?,"Here is the basic difference between the two -   1 File Format/Extension :  i) ASP.net service - '.asmx'  ii) WCF service - '.svc'  2 Hosting :  i) ASP.net service - Can be hosted in IIS also can be hosted in a Windows Service.  ii) WCF service - Very flexible, can be hosted in IIS, Windows Activation Services(WAS), Managed Windows Services and It also supports Self-Hosting.  3 Transport Protocols/Binding :  i) ASP.net service - It supports HTTP & TCP protocols along with custom binding.  ii) WCF service - supports HTTP, WS-HTTP, TCP, Custom, Named Pipes, MSMQ & P2P(Point to Point) etc.  4 Data Transformation :  i) ASP.net service - XML serializer for Data Transformation.  ii) WCF service - DataContractSerializer for Data Transformation.  5 Serialization NameSpace :  i) ASP.net service - System.XML.Serialization  ii) WCF service - System.RunTime.Serialization  6 Supported Operations :  i) ASP.net service - only One-Way and Request-Response type.  ii) WCF service - Includes One-Way, Request-Response and Duplex.  7 Encoding :  i) ASP.net service - It uses following encoding mechanisms -   XML1.0, MTOM (Message Transmission Optimization Mechanism), DIME (Direct Internet Message Encapsulation)  ii) WCF service - It uses following encoding mechanisms -   XML1.0, MTOM, Binary  Read more differences - [REF]  ",2,WCF service,2,WCF service,"[[110, 121], [233, 244], [502, 513], [694, 705], [837, 848], [973, 984], [1222, 1233]]",a simple Web service,"[[79, 94], [148, 163], [415, 430], [631, 646], [789, 804], [910, 925], [1052, 1067]]"
yahoo,3458582,3458582,3458582,3,the egg,2,the chicken,"[[719, 730], [799, 810], [844, 855], [865, 872], [1035, 1044], [1168, 1179], [1295, 1306], [2079, 2086], [2364, 2373], [2413, 2422], [2432, 2443], [2554, 2565]]",the egg,"[[57, 64], [1099, 1105], [1128, 1135], [1225, 1231], [1363, 1370], [1909, 1915], [2117, 2123], [2176, 2183], [2394, 2400], [2475, 2481], [2614, 2620]]"
academia.stackexchange,30640,Would graduate committee be more favorable to a barely passed grad course or no grad course at all while undergrad,"The big question that both your recommenders and the admissions committee will wonder about is what this experience predicts for you in graduate school.  If you do poorly when taking a grad class now, will you be able to do well in grad school?  One factor may be preparation.  Maybe you were enthusiastic but overly ambitious, and in another year you'll have the experience and preparation needed to do well.  This is the reassuring scenario.  Another possibility is that you're just not used to be challenged by courses, since the undergraduate program was not very demanding.  Now that you know what you face, you'll take it more seriously and do better.  It's entirely possible, but this scenario is more worrisome.  Lots of people say ""oh, next time I'll work harder,"" but this is easier said than done.  And there are even more worrisome possibilities.  For example, maybe you just didn't like the material and couldn't bring yourself to engage deeply with it.  This could be a symptom of lack of preparation, or it could be a sign that this field is not a good fit for you.  I'd recommend dropping the course.  In grad school there's no value in barely passing a course: if you need to learn something, then you need to really learn it well, not just avoid failing.  This means a bad grade on a transcript won't impress admissions committees, and it means you're going to have to go back and learn this material properly in the future anyway.  Probably you should take this course in grad school.  If you don't take it, then you'll need to put in some serious effort to master the material on your own.  Meanwhile, you should think about what went wrong and how to explain it to your recommenders, so that you reassure them regarding your future in grad school.  ",3,no grad course at all,2,a barely passed grad course,"[[1153, 1176]]",no grad course at all,"[[1096, 1115]]"
yahoo,4408283,4408283,4408283,3,Firefox,2,IE,"[[292, 309], [812, 814], [1443, 1445]]",Firefox,"[[12, 27], [329, 336], [389, 396], [765, 772], [845, 852], [1189, 1196], [1357, 1366], [1539, 1546]]"
yahoo,4368242,4368242,4368242,1,Neutral,2,Real news,"[[95, 103]]",Gossip,[]
cs.stackexchange,33632,Why is DPLL better than brute force?,"Local (stochastic) search is all about clever navigation of the search space.  DPLL's advantage is pruning the search space of large swaths of assignments that provably cannot satisfy the formula.  DPLL does this by incrementally building partial assignments (some variables assigned values, some left unassigned), applying the unit propagation and pure literal rules and then checking if the resulting formula is trivially unsatisfiable.  If the simplified formula implied by the partial assignment contains an empty clause, DPLL need not try assigning values to the remaining unassigned variables since the empty clause represents a clause that can never be satisfied under the partial assignment.  The time saved is exponential to the number of unassigned variables, and those skipped assignments are where DPLL improves on brute force sequential search.  ",2,DPLL,2,DPLL,"[[79, 85], [198, 202], [526, 530], [810, 814]]",brute force,"[[827, 856]]"
academia.stackexchange,2381,Popular proprietary program or obscure open source substitute for reproducible research?,"I think there are two kinds of reproducibility:    The ability of someone else to run your code and obtain the same output.  The ability of someone else to write their own code that does the same thing as yours based on your description and on examination of your code (reproduction from scratch).    The second kind of reproducibility is much more convincing, since the main point of scientific reproducibility is to verify correctness of the result.  For science that relies on code, it is usually impossible to include every detail of the code in the paper, so verification requires examination of the code.  If you use proprietary software, your code probably makes use of closed source code, and therefore it cannot be verified or reproduced from scratch.  If you use open source software, then all of the code that your code calls is probably open source, so it can all be verified or reproduced by someone else from scratch.  At present, it is probably true that the first kind of reproducibility is more achievable with proprietary, widely-used software.  I am optimistic that the current trend will lead to open-source software catching up in terms of wide use (consider SAGE, for example).    Addendum, in light of Epigrad's answer below, which I mainly agree with:  The problem with relying on closed-source code isn't that someone else won't know what that closed-source code is expected to do.  The problem is that if you have two closed-source implementations of the same algorithm and they give different results (trust me, they usually will), then you have no way of determining which (if either) is correct.  In other words, closed-source code would be fine for reproducibility if it were bug-free.  But it's not.  ",3,obscure open source substitute,2,Popular proprietary program,"[[623, 643], [1028, 1061], [1305, 1323], [1444, 1473], [1642, 1660]]",obscure open source substitute,"[[773, 793], [1116, 1136]]"
yahoo,2681631,2681631,2681631,2,find your true love,2,find your true love,"[[15, 29]]",be rich,"[[31, 44]]"
yahoo,3483132,3483132,3483132,1,Neutral,2,the basketball,[],the football,"[[29, 37]]"
academia.stackexchange,2709,"Graduate early with average GPA, or later with better GPA?","Your answer will depend partly on what you want to do in academia.  If you want to teach, but don't really want to emphasize research much, you might do fine to graduate now.  However, if your goal is to become a professor at a research intensive school, then you really should go to the strongest grad school you can get into.  (Based on your description, I strongly suspect that if you bust your butt for another year or two, in particular working to earn one or two strong letters of rec, you could get into a better grad school than you can currently.)    Yes, I know there are considerations about who you will work with, perhaps geography, potential two-body problems, etc.  So, why's it so important to go to the best school you can?  Again and again I see that in academia (as everywhere) networking is crucial.  Generalizing and stereotyping a bit: the best schools have the best researchers, who know the other best researchers, who have the biggest grants, which fund the nicest postdocs, etc. If you want to thrive as a researcher, you will do well to get into that network.  (To a large extent, it's a rich get richer system.)  As an undergrad or early grad student, one way you can get into that network is to work with a professor who is a central part of it, and is willing to weave you in.  And your chances of working with said professor typically go up with the reputation of the school.  Now a personal digression.  Through high school and undergrad I was in a hurry to get to the next level as soon as possible.  I skipped 7th grade, finished undergrad in 3 years, and started grad school at the age of 20.  I even turned down a year abroad in the Budapest Semester in Math, because I was worried I'd miss out if I waited too long to get to grad school.  The sad truth is that I wasn't ready.  Maybe you would be; I've never met you, so I can't say.  Eventually (after 8 years), I finished a PhD, and am fairly happy with where my career is headed.  However, I don't regret that time in grad school at all.  I learned a lot of useful stuff.  In fact, I think it's because I took my time in grad school that my career has gone as well as it has.  One interesting feature of academia is that you're typically judged by your productivity relative to the time since you earned your PhD (rather than your age).  As a result, I encourage you to take your time and learn as much as you can.  You'll never again have as much free time as you do now.  ",3,later with better GPA,2,Graduate early with average GPA,"[[161, 173]]",later with better GPA,"[[2360, 2374]]"
cooking.stackexchange,12288,"chef's knife for cutting chicken, or butcher's","As you can see here, you can do it with a chef's knife.  I think you must try to cut between bones or around them, not through them. Gristle shouldn't be a problem for your knife.  ",2,chef's knife,2,chef's knife,"[[40, 54]]",butcher's,[]
yahoo,1473799,1473799,1473799,0,,2,an angel,"[[37, 45]]",a human,"[[49, 57]]"
superuser.stackexchange,19406,What are the benefits of a dual-core CPU over a quad-core in a desktop PC?,Check out these posts from Coding Horror:   Choosing Dual Core or Quad Core    Quad Core Desktops and Diminishing Returns   ,0,,2,a dual-core CPU,"[[53, 62]]",a quad-core,"[[66, 88]]"
cs.stackexchange,50484,Which is faster operations on register operands or immediate operands?,"It depends.  Like AProgrammer said, it depends on the processor.  We are in an age where there are many limiting factors based on physics in CPU construction. This means that distance traveled for an instruction and heat generated by a gate cause latency. In theory, this means that for a pipeline where the bottleneck is the decoding stage, this matters. With immediate operands, you would not need to travel to the register to grab the values, which is additional clock cycles and distance traveled. This would decrease latency, and thus increase speed.  However, in real world applications, this is very likely NOT the bottleneck, and so there will be little to no increase (if mandatory register access stages exist) in speed.  ",1,Neutral,2,operations on register operands,[],immediate operands,"[[361, 379]]"
yahoo,595744,595744,595744,1,Neutral,2,a Honda,"[[83, 99]]",a Toyota,"[[136, 152]]"
music.stackexchange,21936,What's the difference between genre and style?,"These words are very dependent on the context, and in many cases, they can even be treated as synonyms. That's one reason why you see them being used interchangeably: in case there is no possible confusion, either word can be used.   One way to look at it  I am not completely sure if this is the correct way to look at it, but I've always seen it like this: genre is much more broad than a style. A style can be seen as a subdivision of a genre.  For instance, rock music is a genre. Alternative rock, progressive rock and orchestral rock are styles of rock music.  This is not completely set in stone though, so don't shoot somebody when they say progressive rock is a music genre. :-) You'll see the terms being used interchangeably quite often, simply because their meanings are so closely related.  Another way to look at it:  A ""genre"" is the word for a categorization, so rock music, progressive rock, etc are all genres. Think of a genre as a label.  A ""style"" is what you call a specific element of the music. For instance, David Gilmour's guitar playing style is melodic with lots of string bends.  ",0,,2,genre,"[[359, 364], [438, 445], [476, 483], [669, 682], [835, 840], [921, 927], [938, 945]]",style,"[[389, 396], [398, 405], [544, 550], [962, 967], [1064, 1069]]"
yahoo,354839,354839,354839,2,to use a hairdryer,2,to use a hairdryer,"[[79, 92], [253, 284]]",let it dry naturally,"[[426, 446]]"
academia.stackexchange,45586,What is the difference between a teaching assistant and an instructor?,"No, there really is no universal definition of the terms; I have been a ""teaching assistant"" and an ""instructor"" at the same school for basically the same position.  The only thing that I would say is that the term ""teaching assistant"" tends to imply a position that does not have significant lecturing responsibilities, although she may be responsible for nearly everything else in the course (creating and grading homework and exam problems, interacting with students, conducting recitations sections, and so on). Note that this does not mean that the TA might not carry out a ""spot lecture"" or two; but this is not an expectation of the position overall.   In general, I would avoid this problem by doing two things:    Listing on my CV the ""job title"" that the school assigns to the role you carried out.  Provide a short list of the duties your position entailed.    In this way, there is no ambiguity or misconception that can result, since you're providing all the information needed to understand the breadth of your teaching experience.  ",1,Neutral,2,a teaching assistant,"[[70, 91], [215, 235]]",an instructor,"[[97, 112]]"
superuser.stackexchange,12102,What filesystem to have on my USB-harddrive; FAT32 or NTFS?,"You need to make sure that any device that will access the hard drive can read the NTFS file system.  With Windows it's not an issue as all versions from XP onwards can.  The question then becomes can the PS3 access a NTFS drive? Judging from the first link (admittedly from 2007) that turned up from a search for ""PS3 NTFS"" I would say not.  ",2,FAT32,2,FAT32,[],NTFS,"[[83, 87], [216, 228]]"
yahoo,1274529,1274529,1274529,3,use a timer,2,to keep the house at a constant heat,[],use a timer,"[[199, 206]]"
yahoo,3370306,3370306,3370306,3,a Ninja,2,a Samurai,"[[22, 33]]",a Ninja,"[[126, 135], [319, 326]]"
superuser.stackexchange,46488,Intel CPU: Core 2 Duo vs. Xeon Dual Core. Which is faster?,"SPEC is always a good reference for this kind of thing.  Here are their data for those two CPUs.  SPEC's result numbers are a ratio of the performance of the system to that of a Sun Ultra Enterprise 2.  Roughly, the computer tested is ""result"" times faster than a UE2.  Since all computers are referenced from that one benchmark, you can divide the results from two different computers and find their relative performances.  The CINT benchmark is integer-math based and the CFP benchmark is floating-point based.  The ""Rate"" benchmarks test a fully loaded system and the non-""Rate"", ""Speed"", benchmarks test a single process.  That is, how fast can it do one thing versus how fast can it do a bunch of things at once.  You can find more data about SPEC's benchmarks on their web site, including information on the CPU2006 benchmark.  The Xeon is slightly faster, despite its slower clock speed.  This is probably due to the Xeon's on-die memory controller, and the fact that it has HyperThreading, as shown by the fact that its ""Rate"" benchmarks show a greater improvement over the Core2 than the ""Speed"" benchmarks.  ",3,Xeon Dual Core,2,Core 2 Duo,"[[1078, 1087]]",Xeon Dual Core,"[[834, 842], [920, 930]]"
softwareengineering.stackexchange,121081,Trial/Free & Full Version VS. Free App + In-app billing?,"  It's one code only in either case, you are just using either compile-time or run-time conditionals in it. Unfortunately Java lacks compile-time conditionals, so you have to be creative there (Java can optimize away if(static_final_variable), so you will just have two versions of one source defining that variable).  The chance that someone will crack your application is the same in either option and depends on the strength of the check that the user has valid license. Google provides interface to check license on the Market through the Market client, but it also depends on how tightly you integrate the checks in the application and therefore how hard you make it to disable them via disassembling.    The license can be obtained in two ways, either by purchasing the app on the market (separate APK) or by in-app billing (unlocking features). The later obviously involves some extra work, so that slightly favors the separate applications.  On the other hand you could do the billing in single package yourself and avoid giving 30% to Google, but that's a lot of work.    One package with unlocking features will be slightly more convenient for the user, because settings and content will be carried over. How much this favors single package depends on how much such content you expect average user to have.    ",1,Neutral,2,Trial/Free & Full Version,"[[761, 808], [922, 947]]",Free App + In-app billing,"[[815, 850], [981, 992], [1081, 1116]]"
softwareengineering.stackexchange,843,Why should we NOT do frequent deployment in PROD or to test server?,"If you are talking about a hosted web application, the users don't get a say-so in when they get upgrades. That is, they are forced to upgrade each time you do a push to production.  If your changes dramatically change the system rules or UI, you should definitely consider bundling your releases and doing it less frequently. It is very frustrating to users to have to continually re-learn how to use the tools they rely on and violates the UI principle of making them feel they are in control of their computer/software.  ",3,doing it less frequently,2,do frequent deployment in PROD or to test server,"[[157, 180]]",doing it less frequently,"[[301, 325]]"
yahoo,78441,78441,78441,3,Super Bowl,2,Rose Bowl,"[[120, 133], [145, 158]]",Super Bowl,"[[10, 20], [220, 234]]"
yahoo,572724,572724,572724,3,the ipod nano,2,the video ipod,"[[91, 105]]",the ipod nano,"[[12, 20]]"
music.stackexchange,4275,What are the advantages and disadvantages of Xponent and Torq vs a Traktor S4 and Traktor Pro 2?,"I'll consider you know the basics of DJing and how soft/hardware works in these cases so let's try to split this question:  Xponent VS Traktor S4   The main advantage of the XPONENT is that IT FREAKIN' BLINKS! It has an awesome club presence, just check any youtube video to get that.   The main disadvantage is that it is a piece of crap! Excuse my french but there was a MASSIVE set of Xponents that had cheap ass electric board with cold solders and it would break easily. It seems to be fixed, but I discovered that M-Audio/Avid support is TERRIBLE! So terible that I'm not buying anything from them ever.   Main advantage of the S4: 2 stereo outputs AND a headphone output, while the xponent only has a single stereo out and a headphone output. Oh yeah, it also has a MIC INPUT that Xponent doesn't have.   Mais disadvantage: The jog wheels are small. Really small. I mean, have you tried it? It makes me feel... I dunno, I fell like I'm using an old Behringer or something.   The number of buttons and knobs are almost the same !BUT! if you are into the whole custom scene, the Xponent has a little feature that makes it moar awesome. There's a 1-2 switch in the front that acts as a second controller.   So when you change the switch from 1 to 2 you can then REMAP everything on the controller.   Torq 2 vs Traktor Pro 2  I'm not even talking about Torq 1 since that's no longer supported. Let's talk about Torq 2 vs Traktor Pro 2, it has only a few differences:  Torq 2 has a special crossfade option that adds some effects, it's a cool concept: you can mix 2 songs using a filter, so as you move from one song to the other the filter opens/closes. Their website has a couple of videos on this.   The auto synch across 4 decks feels more right than Traktor, and it works better. This is relevant if you like to change drastically BPMs between songs.   AND torq2 has INCREDIBLE VST SUPPORT. EVEN if the VST crashes the whole software keeps running.   BUT  Traktor is 100% fully customizable. I mean, you can map buttons to change to the library function to select tracks without touching your laptop. If you're into DIY custom midi mapping, this is heaven.   Also, Traktor has multiple EQ choices, Torq2 only has one, so instead of having a Bass/Mid/Tremb eq you can use a Bass/MidBass/MidTremb/Tremb eq.   To be completely honest, I don't have a lot of experience with the S4, I own a Xponent with Torq 2 - (heck I even did some lectures on using Torq and exploring it's functions) - and I would NOT recommend using it. I had a whole lot of problems with support - Torq sometimes decides that it just won't work - the application does not open under any circumstance - and all the seven times this has happened, the only solution was to format my computer. I tried using a Windows XP SP3, Windows XP SP2, Windows 7 32 bits and windows 7 64 Bits. I had problems with all of them.   So, long story short: Avoid M-Audio/Avid for the moment, go for Native Instruments.   BTW: I had some experience with Traktor Pro (I used it for about 6 months), I personally don't like its controls and GUI interface, it fells wrong. But the audio quality, response and amount of customization is beyond awesome.   ",3,a Traktor S4 and Traktor Pro 2,2,Xponent and Torq,"[[124, 131], [174, 181], [388, 396], [685, 696], [788, 795], [1080, 1091], [1304, 1310], [1414, 1420], [1471, 1477], [1864, 1869], [2205, 2210], [2391, 2412], [2455, 2459], [2573, 2577]]",a Traktor S4 and Traktor Pro 2,"[[135, 145], [634, 636], [1314, 1327], [1424, 1437], [1757, 1764], [1963, 1970], [2172, 2179], [2377, 2383], [3007, 3018]]"
travel.stackexchange,17098,"Is it better to ship bicycle from Egypt to Leipzig, Germany or to buy/rent one?","  Rental prices are not designed for periods of more than a few days. It might be possible to negotiate a long-term price at a flexible rental business.  It's definitely possible to get a decent used bike for 50-100 EUR. There's a risk that it could be a stolen one, but almost none of running into problems, even if it is.  I'm pretty sure that shipping a bike from Germany to Egypt and back will cost more than 100 EUR.    ",3,to buy/rent one,2,"to ship bicycle from Egypt to Leipzig, Germany","[[346, 383]]",to buy/rent one,[]
softwareengineering.stackexchange,140403,Which one is a better practice a static factory method of the same class or a separate factory class with methods?,"The second one; the separate class.  That separate class should also have an interface. The reason is that this is the option that allows swapping the factory most easily, which is good for lowering coupling and for testability.  ",3,a separate factory class with methods,2,a static factory method of the same class,[],a separate factory class with methods,"[[16, 34], [42, 56]]"
academia.stackexchange,28385,"Which is preferable, to go to graduate school at same school as undergrad or to go to a lower-ranked school?","  I've heard from people that generally, it's a bad idea to go to the same school as your undergrad to get your graduate education.     The word ""generally"" is commonly used in two rather different senses.  The first sense is ""typically"", ""most often"".  The second sense -- perhaps more common in mathematical and scientific writing -- is ""always"", or ""in the largest possible scope which might be applied"".  The quoted advice is valid if ""generally"" is construed in the former sense, not the latter.  To briefly explain: on the one hand, there are advantages to acquiring a diversity of experience.  ""Great University X"" will do its business in a way which is slightly different from ""Great University Y"".  Experiencing this is very valuable, because if you stay in academia you will probably be affiliated with several more universities, different from each of these.  If all of your student experience is at a single place, you will have subconsciously internalized the universality of your experience, and you'll be in for a rude awakening when you learn that what is obviously best to you is not the practice in your new environment.  Then too, by going to different great universities, you meet different great people (many of whom will know each other and will be in transit to/from other great universities), both students and faculty.  This is also very valuable.  On the other hand, there are situations where it is most advantageous to stay where you are.  For instance there are sometimes personal, family or financial considerations.  Even neglecting these, there are times that the university you attended as an undergraduate is truly the uniquely best option for you to continue your studies, or the best option among those available to you.  If you are an undergraduate at UCLA, if you want to study analysis, and if you did not get admitted to Berkeley, MIT, Chicago, Princeton or Stanford, then staying where you are sounds like an excellent (perhaps optimal) choice academically.  If you've already done successful research with a top faculty member at your current program and you truly want to continue that research most of all: yes, think seriously about staying right where you are.    The other answer says that graduate school rankings is ""a little ridiculous"".  While I don't really disagree, let me try to put a finer point on that: grad school rankings are ridiculous if you take them too seriously, and especially if you regard them as a strict linear ranking.  It does not matter that US News and World Report currently thinks that MIT is the best mathematics department in the US whereas in past years it used to think it was some combination of Harvard / Princeton / Berkeley.  It would be more honest and more helpful if they simply recorded that these departments and several others (Chicago, Stanford,...) are in the uppermost echelon of graduate programs in mathematics.  Asking whether Harvard is better than Stanford is ridiculous: it depends upon what you're studying.  (If you want to study analysis, don't go to Harvard unless you know you want to work with the one faculty member there who does that.)    Students should be thinking of departments in terms of echelons.  Within a given echelon, ranking is not helpful.  However, barring some truly exceptional circumstances you want to go to a program in the top echelon that accepts you.  As a corollary to this: if your undergraduate institution is in the top 10, and every other program you've gotten into isn't in the top 30, then yes, I think you should stay where you are, unless you have a very good reason to go to a lower-ranked department (best reason: there is a superstar there that has agreed to work with you).    Finally though I have to say that I find it slightly odd that the OP has apparently gone to a top department, been admitted as a student to that top department, but not at any other department of comparable quality.  That suggests to me that her application is not as strong as it could be, as those who know her in real life apparently value her more highly.  ",2,to go to graduate school at same school as undergrad,2,to go to graduate school at same school as undergrad,"[[57, 99], [1444, 1465], [3552, 3570]]",to go to a lower-ranked school,"[[3607, 3641]]"
yahoo,562958,562958,562958,0,,2,asking questions,[],giving answers,[]
yahoo,4048107,4048107,4048107,3,the bright hot sun,2,the cool calm moon,"[[35, 43], [303, 311], [509, 517], [567, 575]]",the bright hot sun,"[[4, 18], [291, 299], [549, 556], [626, 629]]"
superuser.stackexchange,14357,What's the difference between Wifi and Bluetooth?,"Wikipedia has good articles on both 802.11 WiFi technologies and Bluetooth technologies.  Wikipedias quick summary of the differences:    Bluetooth and Wi-Fi have many    applications in today's offices,    homes, and on the move: setting up    networks, printing, or transferring    presentations and files from PDAs to    computers. Both are versions of    unlicensed wireless technology. Wi-Fi    is intended for resident equipment and    its applications. The category of    applications is outlined as WLAN, the    wireless local area networks. Wi-Fi is    intended as a replacement for cabling    for general local area network access    in work areas. Bluetooth is intended    for non resident equipment and its    applications. The category of    applications is outlined as the    wireless personal area network (WPAN).    Bluetooth is a replacement for cabling    in a variety of personally carried    applications in any ambience.    So basicly, 802.11 is an addition to the networking and connecting of computers & smartphones supporting high-bandwidth, and covers large areas.   Bluetooth is a ad-hoc wireless technology which works at low distances, making it perfect for file tansfersing and remote-control hardware.  ",1,Neutral,2,Wifi,"[[43, 60], [152, 157], [391, 396], [550, 558]]",Bluetooth,"[[65, 87], [138, 147], [659, 668], [832, 841], [1096, 1105]]"
softwareengineering.stackexchange,37677,"Programming skills, problem solving genius or language guru?","You see, people usually experience feelings, and sometimes those feelings are a barrier to do the most important thing: team work.  There are those who have excellent problem solving skills, and those who manage to remember all the tiny little deatails of every language. And over the years I've met people having one and lacking the other, and vice versa.   I once worked with someone having superior problem solving skills. He'd participate in programming contests acheiving excellent results. He was a star programmer.  But then, working with him on a team as a partner on daily basis was more than just complicated. His ""team work"" skills were something like ""the rest of the team cheering him to do all the work"".  Then I moved jobs and met the Architect. He knew all the Desing Patterns by memory, creating tons of layers of abstraction just because ""It makes sense to keep things separarted"", leading to an over engineered solution twice the size of a more simpler one.   And again, instead of communicating his ""solution"" to the rest, he'd open Eclipse and write all the code by himself, just because it was ""easier"".  Finally I met Q. He wasn't as smart as the first one, nor he knew all the desing patters like the Architect. But he'd code like a machine, creating elegant and simple solutions.   His most notorius skill was explaining things, a skill the other two completely lacked.  ",1,Neutral,2,problem solving genius,"[[157, 189], [386, 424], [1157, 1179]]",language guru,"[[205, 270], [1188, 1215]]"
gardening.stackexchange,9460,What are the pros and cons of rubber vs wood mulches?,"Rubber mulch is a better insulator which may be important in very hot or very cold climates. It also doesn't absorb or retain water which helps keep it weed free since weed seeds won't germinate in it like they can in some other types of mulches. It will last a long time. Different agencies and labs have tested the use of rubber mulch in playgrounds and found it to be safe to people and the environment. I have seen some sources state that rubber mulch used approved for playgrounds may be safer but I'm not sure.   It will eventually break down in 20, 30 maybe more years. When/as it breaks down the stuff the tires are made from I guess would wind up in the soil which I can't imagine is good. Also, some chemicals used by some tire manufacturers may leach into the soil.   I did find this one account of health issues from rubber mulch along with this linked report. This other well-referenced document discusses some issues with rubber mulch.  It's still fairly new and I wonder if people are pushing it because they don't know what to do with all these used tires.   Natural mulches feed the soil and increase biodiversity. That's one of the main reasons I use it. I didn't use mulch in the past and I notice a big difference in the soil now compared to years ago.  Some people have an issue with shotgun fungus (aka artillery fungus) with wood mulch. It appears to be more of a problem with wood instead of bark mulches and cedar, redwood and cypress do not appear to be affected because they decompose slower. I believe licorice root mulch is also less prone to shotgun fungus.  I like to use cedar mulch. It's a little more expensive but I like the look and smell plus it lasts longer Every spring I fluff it up and spread it out evenly. Every 2 or 3 years I may need to add a little more. After the first season it turns grey. I don't mind the color but I've been thinking about using mulch dyes.  I really want to switch to compost as mulch Looks like black dyed mulch (which I like) and is even better for the soil. I'm not quite making enough compost to use in the garden yet and have left over for mulch. I might have to buy the initial compost and then hopefully be able to replenish it with what I make.  ",1,Neutral,2,rubber,"[[7, 12], [324, 336], [443, 455], [829, 841], [936, 948]]",wood mulches,"[[1075, 1090], [1348, 1358], [1603, 1614]]"
cs.stackexchange,11299,What's harder: Shuffling a sorted deck or sorting a shuffled one?,"By Landauer's principle, if you want to take a uniform random permutation of $n$ keys to a sorted one, and not keep any bits in the computer which reveal what the uniform random permutation was, you need to erase $log n! \approx n \log_2 n$ bits. This will take $(n \ln n) k T$ energy. On the other hand, the computation taking the sorted array and $n \log_2 n$ random bits to the random array is reversible, and thus the energy expended can be made arbitrarily small.  Note that these are just theoretical lower bounds. The energy currently consumed by these processes on an actual digital computer bears no relation to the above analysis.   ",2,Shuffling a sorted deck,2,Shuffling a sorted deck,[],sorting a shuffled one,[]
yahoo,105553,105553,105553,2,blue,2,blue,"[[96, 100]]",red,"[[122, 125]]"
yahoo,1771580,1771580,1771580,2,freedom,2,freedom,"[[282, 289], [340, 347]]",security,"[[47, 55], [229, 237], [312, 320]]"
academia.stackexchange,6188,When writing a peer review is it better protocol to quote parts of the orginal work or paraphrase?,"It depends why you are quoting/paraphrasing.  Usually I structure my review in two parts. The first part summarizes the paper, the major contributions, and the high-level strengths and weaknesses of the submission. In this part I paraphrase. This shows the authors, and the editor, that I have read and understood the paper well enough to describe its ideas in my own words.  In the second part I get into the details, i.e. you forgot citation X, formula Y has an error, these sentences are confusing, etc. In this part I quote.  ",1,Neutral,2,to quote parts of the orginal work,"[[23, 30], [522, 527]]",paraphrase,"[[31, 43], [230, 240]]"
yahoo,3908664,3908664,3908664,1,Neutral,2,cloud cover,"[[183, 193], [284, 290]]",a clear sky,[]
yahoo,3894927,3894927,3894927,3,plasma,2,lcd,"[[171, 178]]",plasma,"[[9, 19]]"
yahoo,1850065,1850065,1850065,2,Nikon D50,2,Nikon D50,"[[7, 18], [50, 59], [110, 115], [296, 307], [470, 473], [557, 562], [1038, 1043], [1213, 1220], [1354, 1367], [1480, 1489], [1528, 1535], [1638, 1647], [1840, 1845]]",Canon Digital Rebel XT,"[[29, 41], [99, 108], [164, 169], [258, 267], [1078, 1083], [1254, 1261], [1509, 1520], [1560, 1565], [1710, 1719]]"
yahoo,1386537,1386537,1386537,0,,2,HotMail,"[[89, 96], [217, 224]]",Yahoo Mail,"[[26, 31], [136, 141], [229, 234]]"
softwareengineering.stackexchange,19541,What are the main advantages and disadvantages of LL and LR parsing?,"I'll contrast LL and LR parsing for a number of criteria:  Complexity  LL wins here, hands down. You can easily hand-write an LL parser. In fact, this is commonly done: the Microsoft C# compiler is a hand-written recursive descent parser (source here, look for a comment made by Patrick Kristiansen - the blog post is very interesting as well).  LR parsing uses a rather counter-intuitive method to parse a text. It works, but it took me some time to wrap my head around how it works exactly. Writing such a parser by hand is therefore hard: you'd be more or less implementing an LR parser-generator.  Generality  LR wins here: all LL languages are LR languages, but there are more LR languages than LL languages (a language is an LL language if it can be parsed with an LL parser, and a language is an LR language if it can be parsed with an LR parser).  LL has quite a few nuisances that will bother you when implementing just about any programming language. See here for an overview.  There are unambiguous languages that are not LR languages, but those are pretty rare. You almost never encounter such languages. However, LALR does have a few issues.  LALR is more or less a hack for LR parsers to make the tables smaller. The tables for an LR parser can typically grow enormous. LALR parsers give up the ability to parse all LR languages in exchange for smaller tables. Most LR parsers actually use LALR (not secretively though, you can usually find exactly what it implements).  LALR can complain about shift-reduce and reduce-reduce conflicts. This is caused by the table hack: it 'folds' similar entries together, which works because most entries are empty, but when they are not empty it generates a conflict. These kinds of errors are not natural, hard to understand and the fixes are usually fairly weird.  Compiler errors and error recovery  LL wins here. In an LL parse, it's usually pretty easy to emit useful compiler errors, in particular in hand-written parsers. You know what you're expecting next, so if it doesn't turn up, you usually know what went wrong and what the most sensible error would be.  Also, in LL parsing, error recovery is a lot easier. If an input doesn't parse correctly, you can try to skip ahead a bit and figure out if the rest of the input does parse correctly. If for instance some programming statement is malformed, you can skip ahead and parse the next statement, so you can catch more than one error.  Using an LR parser this is a lot more difficult. You can try to augment your grammar so that it accepts erroneous input and prints errors in the areas where things went wrong, but this is usually pretty hard to do. The chance you end up with a non-LR (or non-LALR) grammar also goes up.  Speed  Speed is not really an issue with the manner in which you parse your input (LL or LR), but rather the quality of the resulting code and the use of tables (you can use tables for both LL and LR). LL and LR are therefore comparable in this respect.  Links  Here is a link to a site also contrasting LL and LR. Look for the section near the bottom.  Here you can find a conversation regarding the differences. It's not a bad idea to critically look at the opinions voiced there though, there is a bit of a holy war going on there.  For more info, here and here are two of my own posts about parsers, though they are not strictly about the contrast between LL and LR.  ",1,Neutral,2,LL,"[[14, 16], [71, 73], [126, 128], [632, 634], [700, 702], [731, 733], [771, 773], [856, 858], [1854, 1856], [1874, 1876], [2129, 2131], [2820, 2822], [2927, 2929], [2939, 2941], [3041, 3043], [3397, 3399]]",LR,"[[21, 23], [346, 348], [580, 582], [614, 616], [649, 651], [682, 684], [803, 805], [843, 845], [1033, 1035], [1188, 1190], [1245, 1247], [1330, 1332], [1380, 1382], [2458, 2460], [2693, 2699], [2826, 2828], [2934, 2936], [2946, 2948], [3048, 3050], [3404, 3406]]"
yahoo,2518791,2518791,2518791,1,Neutral,2,a 64 bit processor,"[[50, 75], [213, 231]]",two 32 bit processors,"[[4, 21]]"
superuser.stackexchange,49562,What's the difference between /etc/bash.bashrc and ~/.bashrc? Which one should I use?,/etc/bash.bashrc applies to all users  ~/.bashrc only applies to the user in which home folder it is.  ,0,,2,/etc/bash.bashrc,"[[1, 16]]",~/.bashrc,"[[39, 48]]"
yahoo,1632782,1632782,1632782,2,murder,2,murder,[],a suicide,"[[79, 86]]"
yahoo,89754,89754,89754,2,the 360,2,the 360,"[[439, 447], [568, 571], [664, 671]]",PS3,"[[61, 68], [360, 363], [766, 769]]"
softwareengineering.stackexchange,37042,Windows Phone 7 dev: C# or silverlight for a simple app?,"Ok, you're confusing technologies.    C# is a programming language  Silverlight is a framework and a runtime - you write Silverlight applications using C# (or VB or, possibly, other things - though you have to get creative).    If you want to write applications (apps) to run on a Windows Phone 7 device you almost certainly will write in C#, your choice is between Silverlight or XNA for the framework and from your description I'd guess that Silverlight would be the sensible choice. There are no other options for apps, though you could write a web based application tailored to the screen size.  Silverlight's UI is created using XAML and is a subset of WPF.  To answer the question, if you've got C# devs familiar with the .NET framework then you're at least halfway there. Yes, Silverlight is the right solution. Silverlight developers are, for the most part, C# developers - but C# devs familiar with XAML and UI development - though you can put Expression Blend in the hands of a suitable designer and have them to the UI.  I'd suggest that you want to have your team understanding and taking advantage of MVVM as defined by Microsoft because that's how they feel that Silverlight dev should be doen and therefore they've put things in place to make that possible.  ",0,,2,C#,"[[38, 40], [152, 154], [339, 341], [702, 704], [866, 868], [886, 888]]",silverlight,"[[68, 79], [121, 132], [366, 377], [444, 455], [600, 613], [784, 795], [819, 830], [1177, 1188]]"
superuser.stackexchange,37910,What are the advantages of symlinks over hard links and viceversa?,"This has been discussed in some detail on ServerFault.  A hard link traditionally shares the same file system structures (inode in unixspeak), while a soft-link is a pathname redirect.     Hardlinks must be on the same filesystem, softlinks can cross filesystems.  Hardlinked files stay linked even if you move either of them (unless you move one to another file system triggering the copy-and-delete mechanism). Softlinked files break if you move the target (original), and sometimes when you move the link (Did you use an absolute or relative path? Is it still valid?).  Hardlinked files are co-equal, while the original is special in softlinks, and deleting the original deletes the data. The data does not go away until all hardlinks are deleted.  Softlinks can point at any target, but most OS/filesystems disallow hardlinking directories to prevent cycles in the filesystem graph (with the exception of the . and .. entries in unix directories which are hard links).  Softlinks can require special support from filesystem walking tools. Read up on readlink (2).    (Some details brought back to mind by mat1t. Thanks.)  ",1,Neutral,2,symlinks,"[[149, 160], [231, 240], [413, 423], [637, 646], [752, 761], [974, 983]]",hard links,"[[56, 67], [189, 198], [265, 275], [573, 583], [728, 737], [820, 831], [960, 970]]"
yahoo,128734,128734,128734,2,the egg,2,the egg,"[[206, 210], [241, 245]]",hen,"[[101, 109], [279, 290]]"
softwareengineering.stackexchange,124088,Is it better to target iOS 5 and ARC or an earlier version with MRC?,"Worrying about memory management  ARC is a godsend: it doesn't solve every problem, but it's much better than having to do it all yourself or the short detour into garbage collection with Mac OS X.   There are two things to keep in mind with it:    it's a compiler feature: Xcode provides ARC support for building to iOS 4 targets1.  It's optional, even targeting iOS 5. If you want to learn manual reference counting (MRC) just to make extra sure you know it, you can do it even targeting iOS 5.    But ARC doesn't take away the ability to understand how memory management works, it just removes the tedium of having to declare release and retain everywhere. Justin on Stack Overflow gave a good summary of the difference between ARC and manual reference counting (MRC):    If you don't want to learn MRC, then you may want to first try ARC. A lot of people struggle with, or try to ignore common practices of MRC (example: I've introduced a number of objc devs to the static analyzer). If you want to avoid those issues, ARC will allow you to postpone your understanding; you cannot write nontrivial objc programs without understanding reference counting and object lifetimes and relationships, whether MRC, ARC, or GC. ARC and GC simply remove the implementation from your sources and do the right thing in most cases. With ARC and GC, you will still need to give some guidance.    Beyond whether or not you should use ARC, you ought to consider support for the OS version: does it really make sense to focus on version-specific features (like zeroing weak references) when there aren't a whole lot of people using that version?   Or worse yet, if everyone's using iOS 3, how long do you have to wait until you can even start to use ARC?  This comes down to two things: device support and market share.  Device support  Thankfully, one of the benefits to developers with respect to iOS development is that the latest version of the software runs on older devices; generally going back at least 2 years.   So if you want to target iOS 5, you'll be able to target the following devices:    iPhone 4S (released October 2011)  iPad 2 (released March 2011)  iPod touch (4th generation, released September 2009)  iPhone 4 (released June 2010)  iPad (released April 2010)  iPod touch (3rd generation, released September 2009)  iPhone 3G S (released June 2009)    Which is a large set of options. If you target iOS 4.2, you can hit every device since iPhone 3G was released back in June 2008.  Market share  Which comes to the other question: should one spend time learning anything other than iOS 5 SDK: it depends on what you want to do.   If you want to just focus on the latest and greatest, use all the neat features available in the latest SDK, and damn market share (for now): by all means go for it.  If you want to maximize market share now, I'd hold off for a few more months.   Marco Arment, the creator of Instapaper (a really popular iOS app), publishes his usage stats from time to time and just released the latest report a few days ago. In it, he notes that iOS 5 has a 45.1/48% iPad/iPhone market share, while iOS 4.2 (needed for CDMA iPhone 4s that haven't upgraded to iOS 5 yet) has a 97/97.2% market share.  Generally, hitting 97% of the potential market is ""close enough"": I've seen it as a rule of thumb not just for iOS development, but for web development as well.  But one thing to consider is how long of a development cycle you're going to have. If you're not planning on launching for a few months, iOS 5 is not a bad choice, even if you're trying to hit a large portion of the potential market share.   iOS users tend to upgrade much quicker than on other platforms, for a variety of reasons, and there's no reason to believe the upgrade from iOS 4.x to iOS 5 will trend any differently. If you take iOS 4.2's market share as a baseline, it was only released a year ago. It's not unreasonable to assume that October of next year iOS 5 will be well into the 90% range.  Conclusion  Don't worry about memory management too much: ARC is a great convenience, but it's not a huge paradigm shift from earlier versions. Instead, worry about the other features and support issues. If you're launching today and need to hit the largest market share possible, target iOS 4 and consider using MRC. Otherwise, target iOS 5 and consider using ARC.  1caveat: you lose out on some features if you need to target < iOS 5, like zeroing weak references. If you want to go whole-hog into ARC, you're probably better off targeting iOS 5.  ",2,to target iOS 5 and ARC,2,to target iOS 5 and ARC,"[[34, 37], [289, 292], [504, 507], [731, 734], [838, 841], [1023, 1026], [1210, 1213], [1222, 1225], [1327, 1330], [1422, 1425], [1736, 1739], [4051, 4054], [4354, 4357], [4496, 4499]]",an earlier version with MRC,"[[392, 423], [739, 770], [802, 805], [911, 914], [1205, 1208], [4306, 4309]]"
superuser.stackexchange,971,Should I choose 32 or 64 bit for Linux?,You should install 64-bit linux. Even though there are ways for the 32-bit kernel to address more than 4 GB the applications will still have a 3 GB limit.   ,3,64 bit,2,32,"[[68, 74]]",64 bit,"[[19, 25]]"
superuser.stackexchange,12358,Is it better to use a laptop on battery or on AC power?,"It won't make all that much difference. What will shorten battery life is temperature: If it gets hot, it will shorten the battery life. Best thing to do, if you are able, is to remove the battery while you're at home and keep it somewhere cool.  If it's a Li-ion battery, then they don't like to be completely discharged, so make sure you charge them regularly. Wikipedia:  Lithium-ion batteries should not be frequently discharged fully and recharged (""deep-cycled""), but this may be necessary after about every 30th recharge to recalibrate any electronic charge monitor (e.g. a battery meter). This allows the monitoring electronics to more accurately estimate battery charge.[26] This has nothing to do with the memory effect.  More tips can be found here:    [REF]  [REF]  [REF]#Guidelines_for_prolonging_Li-ion_battery_life  [REF]    ",1,Neutral,2,a laptop on battery,[],on AC power,[]
cs.stackexchange,45346,Why does a color video compress better than a black and white video?,"Human eye is very sensitive to luminance change and order of magnitude less sensitive to chrominance change.  MPEG under the hood is based on JPEG transform, so you have 8x8 blocks of DCT.  It blurs a bit the whole block approximating it. Colour space changes to YUV or YCbCr, to encode two channels of colour and one of luminance.  Luminance (grayscale if it was colour) is not compressed as much as new created two colours. These colours are fitted more loosely than luminance.  The most heavy tricks are in colour space and luminance is preserved with lower compression (and less stages).   If you have BW frame it cannot be dealt with high compression as this faster degrades quality. MPEG was not created to deal with BW data. Origins of this codec are from times when grayscale tv was appended colour on top of existing frame.  Here I mean origins, not the same scheme as bandwidth was smaller at this time, I am referring to colour space and compression over chrominance.  MPEG popular scheme is 4:2:2 which encodes four parts of luminance (BW) and two times two colour parts. Colour is encoded as differences, because there are two channels and three colours.  So simply 50% of data is well preserved luminance and 50% are three colours with higher compression ratio. Compressed better means greater ratio of original vs processed channel.  Luminance takes (taking it simple as luminance is part of these colours) roughly equal space as colour info.  Different codecs are using different strategies, I referred to MPEG, not some new mixed schemes.  ",2,a color video,2,a color video,[],a black and white video,[]
academia.stackexchange,29352,Which is the better scheme for a poster: ‚Äútell a story‚Äù or ‚Äúimportant first‚Äù?,"Posters are hard to get right. They require design skills and knowing what the core message of your paper is. Presenting them requires people skills. Aside from this, different areas seem to have different criteria and norms when it comes to this so if you want to fit in you should try to follow those.    But in general, most scientific posters I've seen are really terrible in terms of tools for communication: they have far too much text and get into far too much technical detail. For example, on this site posted in the comments on the question, there's some nice visuals but all of the posters have, in my opinion, far too much text.   One excuse for a lot of text on a poster I often hear is that people will can read them on their own between sessions or whatever. In my own area and experience, I don't buy this argument: that's what the paper is for and I rarely see anyone reading these literal walls of text in their spare time.  The advice you've gotten from the internet seems to follow that thinking: the thinking of printing a full paper on a poster in bullet form. An A0/A1 wall of text is not the best way to sell your work, nor is a boring traditional narrative of introduction, methodology, results, related work, conclusion or whatever.  I say this from the perspective of someone who's gone to too many poster sessions and gotten trapped at a poster where someone for some reason decided I would be interested in spending 20 minutes silently listening to them recite the slightly abridged version of the paper that they had for some reason decided to printed on their poster. One guy even seemed to expect me to leave after he was done. After he had finished reading the conclusions at me he had a look on his face that said ""who's next?"".  Okay so that's one extreme.    For me, the secret to a good poster presentation is two-fold: the poster and the person in front of it.  In terms of a poster session, people will probably have some food with them, people might even have some drinks, you should not assume to take more than 5 minutes of their time, they're probably not going to get all the technical details and they're definitely not going to read a wall of text. At least one would hope that they wouldn't read it because that would imply that you'd be talking to yourself since they cannot read text and listen to you at the same time (unless you're reading aloud the text that is).  When I was working with students on posters, I would always advise them to dispose of the idea that they can or should communicate the full technical depth of a work on a poster to a passer-by in five minutes.  Their goal should be to motivate and communicate enough of the core ideas of the work to convince people passing by their poster that the paper would be worth taking the time to read and to teach them something cool.  In terms of that goal, I would bring the student to a white-board and tell them to pretend I was a conference-goer who knew nothing of the work but we met at a coffee break and I asked them to tell me about the work. They can use the board or ... if really needed ... they can point to something in the paper. While presenting, they should appear enthusiastic (without overselling) and emphasise why the work is important ... why I should care, and what the main results were.   They should also listen to what I say ... it should be a conversation. They should make sure that the person they're talking to is following them ... that they don't just launch into a 10 minute soliloquy at the first person that looks in their direction but that there's an element of interaction.  After that exercise whatever they were trying to represent on the board or whatever they needed to point at in the paper: that and pretty much only that is what goes on the poster ... diagrams, examples, main results ... things they can point to help them explain verbally what the work is about.  Then we'd sketch out a poster and try make it visually appealing ... try to tell a visual story with it ... try to make it attractive for people to come over and ask what it's about.  Not that the end result is always perfect, but the approach does lead to a better result in terms of a communication tool than the wall-of-text approach that seems so bizarre to me in the world of scientific posters.  ",3,important first,2,tell a story,[],important first,[]
softwareengineering.stackexchange,104361,Is Razor or XSLT better for my project?,"I HAVE successfully used XSLT as a web presentation tier...  in 1999.  In the last 12 years, much better options have come along.  Do yourself a big favor, and use Razor.  It's a pleasure.  ",2,Razor,2,Razor,"[[164, 169]]",XSLT,"[[25, 29]]"
yahoo,1281837,1281837,1281837,2,to leave a disel engine running,2,to leave a disel engine running,"[[35, 67], [192, 208]]",shut it off in a stop and go situation,[]
softwareengineering.stackexchange,17427,What keymap do you prefer in ReSharper?,"I think it's mostly going to depend on what background you're from. Personally I found going from Visual Studio to Visual Studio + Resharper very easy using the Visual Studio key map (not suprisingly). Someone coming from an IntelliJ background is going to find the IntelliJ mapping easier.  If you're new to both Visual Studio and IntelliJ I would suggest going with the Visual Studio mappings in case you find yourself in the horrible, horrible situation of having to use VS without R#er in the future.  Most people will supplement the default bindings with a few of their too - so if you're really missing something from one the just add it to the other.  ",2,the Visual Studio key map,2,the Visual Studio key map,"[[157, 182], [368, 394]]",the IntelliJ mapping easier,"[[262, 289]]"
yahoo,1799772,1799772,1799772,2,lil bowwow,2,lil bowwow,"[[21, 28]]",lil romeo,[]
cooking.stackexchange,8965,Which torch to buy for finishing sous vide meat? Butane or propane?,"I use Propane all the time.  There are several factors as to why:    It is cheap, about 1/4 the price of butane.    It‚Äôs more readily available.  You can buy a propane torch at many different stores for very cheap.    The torches typically put out a lot more heat.  I‚Äôve used both propane and butane, mostly for cr√®me brulee, but other food as well.  The butane torches put out such a focused small area of heat, that it would get uneven burning.  Whereas with Propane, they often put out a much larger area of heat, making it easier to caramelize across the surface evenly.    As for the concern of it imparting propane flavor, I have had that happen, once, but I‚Äôve also had that happen with butane.  It‚Äôs all about flow control.  If you have the dial turned up too high and it‚Äôs spewing out massive amounts of propane, plus hold the flame too close to the food, you MIGHT get then hint of propane.  But if you have the torched dialed in to the proper settings, you really can‚Äôt beat the ease and convenience of ‚Äúenergy-efficient clean-burning propane gas‚Äù  ",3,propane,2,Butane,"[[105, 111], [293, 299], [355, 361], [694, 700]]",propane,"[[6, 13], [160, 167], [281, 288], [461, 468], [613, 620], [813, 820], [892, 899], [1046, 1053]]"
yahoo,1656818,1656818,1656818,1,Neutral,2,prices,"[[4, 9], [129, 134]]",the quality,"[[13, 24]]"
softwareengineering.stackexchange,19893,ASP.Net or WPF(C#)?,"It certainly sounds to me like a WPF app, with lot's of user interaction and potentially interacting with hardware.  You can deliver the app via Click-Once so deployment is mostly a non-issue.  Your WPF app can access a WCF service and deliver the data as binary so the performace will be excellent.  I would start reading up on WPF and getting familiar with it as soon as possible.  ",3,WPF(C#),2,ASP.Net,[],WPF(C#),"[[31, 36], [199, 202]]"
travel.stackexchange,12826,Weekend in Turin or Genova?,"Both Turin and Genova are two big cities able to provide you a lot of attractions, the choice of the best one really depends on what you are interested in and what kind of cities you prefer in general.  As a personal point of view I consider Turin far more elegant than Genova: nice streets with elegant buildings, the possibility to climb (by car or by a little old train) on the hill of Superga close to the city and have a wonderful view on the city and the Alps in the background, a lot of history related mostly with the period of the wars that brought to the formation of Italy as a single state (but also big roman ruins), the biggest egyptian museum in the world outside Egypt and a vibrant night-life.  Genova has a strong connection with the sea: the wonderful acquarium is considered its main attraction and its internal streets (Carrugi) are quite peculiar too. Even Genova has a rich history and has been one of the major european cities in term of power, so you can find several nice buildings reflecting this. I don't know about the night-life there but I never heard anybody praising it like I did with the Turin one.  Regarding the food, both have particular regional dishes (pesto from Genova for example) but I guess that Turin with the wonderful wines from Piemonte and the ""fassona"" meat could be considered better even from this point of view.  ",2,Turin,2,Turin,"[[5, 10], [242, 247], [1123, 1128], [1241, 1246]]",Genova,"[[15, 21], [270, 276], [712, 718], [879, 885], [1204, 1210]]"
yahoo,1269700,1269700,1269700,3,AMD,2,intel,[],AMD,[]
superuser.stackexchange,38561,Noticeable difference between i7 920 and 940 processors in real-life use?,"""don't bother, not worth the extra cash"".  If coming off of anything less than two years old, you will notice that when you start up and run things, it will generally be quicker. Anything older than two years and everything will be noticeably quicker.  Between the 920 - 940, I cannot say that you will see any big performance gains. I use many CPUs on a daily basis, and for .5GHZ (within same generations) you really cannot tell many differences  ",1,Neutral,2,i7 920,"[[265, 268]]",940 processors,"[[271, 274]]"
cooking.stackexchange,23641,To refreeze or to refrigerate?,"TLDR; If you defrosted the chicken in the fridge, go ahead and refreeze it.  If you thawed it on the counter, cook it, then freeze it.  I was always taught: DO NOT REFREEZE uncooked meat!  But, I did a search and found this somewhat contradictory statement from a reliable source:   ""Refreezing  Once food is thawed in the refrigerator, it is safe to refreeze it without cooking, although there may be a loss of quality due to the moisture lost through thawing. After cooking raw foods which were previously frozen, it is safe to freeze the cooked foods. If previously cooked foods are thawed in the refrigerator, you may refreeze the unused portion. Freeze leftovers within 3-4 days. Do not refreeze any foods left outside the refrigerator longer than 2 hours; 1 hour in temperatures above 90 ¬∞F.  If you purchase previously frozen meat, poultry or fish at a retail store, you can refreeze if it has been handled properly.""  [REF]    There's also this: How long will uncooked chicken keep in the fridge?  Which says 1-2 days for raw chicken in the fridge.  ",0,,2,To refreeze,"[[63, 74], [124, 133], [164, 172], [284, 294], [348, 359], [527, 536], [622, 630], [651, 657], [692, 700], [882, 890]]",to refrigerate,"[[593, 612], [724, 740]]"
travel.stackexchange,2474,Is it best for Canadians to get an Egyptian visa in advance or at the Cairo airport?,"Normally it is not required to have Visa tourist in advance for USA, Canada and most of Europe.  But this is only for Tourist visa, any other visa (work, businesses, diplomatic, ...) should be arranged in advance. Also this is for normal passports, official or diplomatic passports need advance visa.  Tourist visa can be stamped in all main airports for:    UK citizens: ¬£15  US citizens: US$15  Australian citizens: A$45  Canadian citizens: C$25  other countries: $15     Lately there are talks in Egypt about needing arranged Visa for solo-travelers. Which means that people travel in tourist groups will not require arranged visa.  To be sure, I think it is better to give a call to Egyptian embassy in Canada.  ",1,Neutral,2,to get an Egyptian visa in advance,"[[28, 59]]",at the Cairo airport,[]
gardening.stackexchange,1396,What is a good ground cover for street frontage instead of lawn?,"I found it difficult to mark just one answer as correct because all are. I am providing my own answer for this question, but it's only more correct than earlier answers in that it's the best groundcover for my specific situation and location.  What I eventually went with (on professional advice) was creeping boobialla (Myoporum parvifolium) for its outstanding suitability for the climate, soil type and hardiness zone in which it will be planted.    ",2,a good ground cover,2,a good ground cover,"[[301, 342]]",lawn,[]
cs.stackexchange,32163,What's the difference between Adaptive Control and Hierarchical Reinforcement Learning?,"The difference between the two tasks really comes down to the level of continuity assumed in the models of the problem.  In adaptive control, continuity is assumed at all levels; the problem space and the actions to be executed are all continuous.  In hierarchical reinforcement learning, although the problem space is continuous, the actions to execute upon the space are discrete.  A good analogy for this is the robot arm trying to move to a certain goal. Adaptive control would work with Jacobian to find a continuous solution to this problem. Reinforcement learning would select actions (up, down, left, right) to learn the problem space and find a solution.   Hierarchical reinforcement learning and adaptive control are really complements of each other. When the problem gets too complex to compute with Adaptive Control, hierarchical learning steps in to make it discrete and more scalable.  For another perspective, especially since my explanation breaks down when you consider continuous HRL (which does exist), consider this explanation from my personal correspondence with Daniel Rasumussan:    Practically, there are many differences between how they [Adaptive Control and HRL in a continuous space] are    implemented; they use different algorithms, different learning rules,    different representations, etc.  For example, adaptive control is not    typically hierarchical.  You could arguably call it a hierarchy with a    depth of 1 (with e.g. the ""high level"" being control in the x,y space    and ""low level"" being control in the motor space).  But there's no    temporal abstraction in that hierarchy; the high level isn't trying to    encapsulate low level decisions, the problem is how to find a nice    reliable one-to-one mapping between those two spaces.  Of course you    could make adaptive control hierarchical, as you can make pretty much    anything hierarchical, but that isn't typically what they're    interested in.  Perhaps a more critical difference is that in motor    control typically it is assumed that the transition and reward    functions are known to the agent.  There may be some unknown    variability in the case of adaptive control, but by and large the    agent has a pretty good idea what the effects of its actions will be,    and what the goal is that it is trying to achieve.  It's one of the    key principle of reinforcement learning that that information is not    known, and must be figured out by the agent by exploring the    environment.  Now again here, you could come up with a motor control    problem where the agent doesn't assume that information is known, but    that just isn't the kind of problem those techniques are designed for,    in general.  So, to sum up, there certainly is a gradient between HRL    and adaptive control, and by tweaking various assumptions you can    bring them closer together or farther apart.  But just implementing    continuous actions in HRL would still leave you quite a ways from    adaptive control.    As for an example combination this, one might imagine using hierarchical reinforcement learning to play a video game like Pong and then changing the physics of the game (Pong on slippery ice!) so that Adaptive Control might step in.  ",1,Neutral,2,Adaptive Control,"[[124, 140], [459, 475], [706, 722], [811, 827], [1165, 1181], [1339, 1355], [1810, 1826], [2164, 2180], [2782, 2798], [2987, 3003], [3209, 3225]]",Hierarchical Reinforcement Learning,"[[252, 287], [548, 570], [666, 701], [829, 850], [998, 1001], [1186, 1189], [2367, 2389], [2771, 2774], [2940, 2943], [3068, 3103]]"
yahoo,1443968,1443968,1443968,3,Mini Cooper S,2,a Mini Cooper,"[[89, 102]]",Mini Cooper S,"[[106, 121], [151, 156], [182, 187], [297, 314]]"
cs.stackexchange,669,Are Turing machines more powerful than pushdown automata?,"If you only consider that 'Turing machines can always be made to behave like a stack' you can only conclude that they are at least as powerful as pushdown automata.  But in general, yes it is true, Turing machines are more powerful than PDAs. The easiest example would be to show that Turing machines can describe Context Sensitive Languages.  ",2,Turing machines,2,Turing machines,"[[26, 42], [198, 213], [285, 300]]",pushdown automata,"[[146, 163], [237, 241]]"
yahoo,75099,75099,75099,2,league.Larry johnson,2,league.Larry johnson,"[[6, 13]]",santana moss,[]
yahoo,402458,402458,402458,3,an iPod Nano,2,an iPod Shuffle,"[[171, 180]]",an iPod Nano,"[[266, 281]]"
yahoo,2126495,2126495,2126495,3,Java,2,C#,"[[685, 687], [745, 747]]",Java,"[[57, 61]]"
yahoo,3936613,3936613,3936613,3,egg,2,Chicken,"[[719, 730], [799, 810], [844, 855], [863, 872], [1035, 1044], [1168, 1179]]",egg,"[[57, 64], [186, 190], [1099, 1105], [1128, 1135], [1225, 1231], [1363, 1370]]"
superuser.stackexchange,35110,Windows 7 RTM 32Bit vs 64Bit (with 4GB RAM),"Stick with the 64bit. 32bit is a dying breed. There is no doubt in my mind that Logitech supports 64bit. Make sure you have their latest official drivers installed.  That .5gb of ram may not seem like much now, but you will be kicking yourself later for reverting to 32bit.  ",3,64Bit,2,Windows 7 RTM 32Bit,"[[22, 27], [267, 272]]",64Bit,"[[15, 20], [98, 103]]"
yahoo,2624418,2624418,2624418,1,Neutral,2,Macintosh,"[[155, 159], [436, 441], [563, 571]]",Windows,"[[70, 77], [375, 384], [576, 583]]"
cs.stackexchange,28388,Advantages and disadvantages of microcoded vs hardcoded architectures,"The distinction between ""microcoded"" and ""hardcoded"" multi-cycle control units is a relatively small implementation detail.  The distinction was more important in the 1950s when people were inventing new implementation techniques for state machines.  In modern processor design there are much more important implementation distinctions, like how much pipelining and instruction overlap you are going to try to achieve, whether you are going to speculatively execute instructions, and whether you are going to try to schedule instructions out-of-order.  That said, here's the distinction:  We divide the design into datapath and control.  Here's the picture of the MIC-1 from Tanenbaum's Computer Organization book.  (The image is by Suyog.karnawat, from Wikimedia commons.)  Everything in the design is the datapath except the box in the upper right hand side that says ""Instruction decoder and control logic.""    The ""Insruction decoder and control logic"" box is a finite state machine.  The datapath in this example is very simple, with only a single bus, so even an instruction to add two registers and put the result in a third register takes multiple cycles (each of which corresponds to a state in the state machine.)  Each instruction goes through the following steps/states (each of which takes a cycle)    move the PC (Program Counter) to the MAR (Memory Address Register)  assert the controls to perform a load from the memory bus  eventually the memory will return the requested data (which corresponds to the next instruction) and put it in the MDR (Memory Data Register)  move the instruction from the MDR to the IR (Instruction Register).  At this point the instruction gets decoded and we figure out what to do with it.  In this case it's an add operation so we know we need to:  move Ra to the X register  put Rb on the bus (so that it will go to the B input of the ALU) assert the ALU control lines and Mux select appropriately to do an add operation, the result of which will get saved in register Y  Move Y to the Rc register, and then every non-branch instruction ends by incrementing the program counter:  Put the PC on the bus, set up the ALU to increment (Select the MUX to put constant 1 on the A input and set up the ALU to Add) so that PC+1 will get saved in the Y register  Move the Y register back to PC    So 9 state transitions to perform a simple add instruction.  So the ""Instruction decoder and control logic"" is a finite state machine with inputs from the IR register, outputs are the control signals, and there must be some flip-flops inside to represent the state of the state machine.  But there are lots and lots of ways to implement a state machine.    $\lceil \log_2 N \rceil$ flip-flops (where $N$ is the number of states) and a lot of combinational logic (to calculate the control signals and next state).  $N$ flip-flops with one-hot encoding and a bunch of combinational logic (usually less than with option A, but a lot.)  Somewhere between $\lceil \log_2 N \rceil$ and $N$ flip-flops with some combinational logic of intermediate complexity.    And the combinational logic for the control signals and next state functions can be implemented any number of ways:    As NAND gates reduced (using Quine-McCluskey, or whatever) to sum-of-products form.  As NAND gates reduced to some relatively efficient multiple-level circuit.  (This is probably what people think they mean when they talk about ""hardwired control."")  A design using Multiplexers for the combinational logic  A design using Programmable logic arrays (although I don't know if you can even buy these anymore.)  A design where the combinational logic is implemented with a ROM.  (This is probably what people think they mean when they talk about ""microcoded control."")  The ROM might be a EEPROM so that it is somewhat easier to modify if you find a bug.    ROMs can get really huge if you're not careful.  For example a ROM-based design would almost always use $\lceil \log_2 N \rceil$ flip-flops, because making the state wider also makes it sparser, which is sometimes good for gates but not for ROMs.  Also, you would only use the opcode bits as part of the address to the ROM, not the register specifiers and such.  Finally with ROMs you might choose to make the microcode word wide (the microcode word produces the entire set of bits for the control signals) or narrow (the microcode word chooses one of a smaller number of possible control signal combinations and then there's a second ROM that translates from that smaller number to the actual required control signals.  So the distinction between ""hardcoded"" and ""microcoded"" is only one very small decision that needs to be made among hundreds of design decisions.  And it's certainly not the most important one.  (For example, you could choose to put a second bus on the datapath, which would enable you to perform some instructions with a lot less cycles.)  ",1,Neutral,2,microcoded,"[[25, 35], [3754, 3772], [4275, 4284], [4300, 4309], [4387, 4396], [4630, 4640]]",hardcoded architectures,"[[42, 51], [4614, 4623]]"
yahoo,2281895,2281895,2281895,3,coke,2,pepsi,[],coke,"[[31, 35]]"
gardening.stackexchange,14528,Is a potted grapevine better put under or outside a roof?,"I don't think it'll make much difference - you live in an area where there's good rainfall, which is good for plants in the ground, but plants in containers still need watering, regardless. Marginally, a plant in a pot outside the roof will remain damper in winter than one under the roof, but during the growing season, you will need to water regularly whether the pots are in or outside. If they are under the roof, you will need to check them during winter to see whether they need water or not.  ",1,Neutral,2,under,"[[274, 288], [402, 416]]",outside a roof,"[[219, 235], [381, 388]]"
travel.stackexchange,4796,Self-drive vs. guided safari in Southern Africa,"I can show you my experience in guided and self-drive safaris. That's my experience and it could be different depending on the parks, the weather and other conditions. My experience is limited to Uganda, Kenya and Tanzania, which are on the East side of Africa, and Senegal, which is at the north; and there are not too many game parks. I have in mind a travel to Namibia-Botswana; according my research (asking people that have made safaris in east Africa and south Africa), all African parks are similar, except Kenyan ones (which are very crowded).  Ok, after this preamble, this is my experience:  When you buy a guided tour you have 3 options:    Buy an exclusive safari package in a big 4x4 car (very expensive option)  Buy a ""normal"" safari package (may be in a 4x4 or in a safari van)  Buy a budget safari package (sharing a safari van with more people)    In these videos you can see what a ""safari van"" is like inside and outside (sorry, the video is in Spanish). As you can imagine, it is not the most comfortable option.    If you are thinking of an ""exclusive safari,"" I think this is a great option, but if you don't want to waste a lot of money, or if you would like to feel the (partial) adventure of driving surrounded by game, I recommend you rent a small 4x4. It is better than a safari package. Why?    Drivers have to rest, you do not. As you know, drivers are workers and they have a timetable. They are working, not relaxing. Also, they have gone hundreds of times to the park, have seen thousands elephants, and are not as excited as you when they see a leopard. This means they probably won't make the most of the day as you will do.  Drivers tend to protect the car. In Africa a car is a luxury, and it is very expensive to repair, so drivers rarely try to do things like cross a river or go up a hill. If the driver owns a van, that likelihood of avoiding rough terrain is increased.  Drivers tend to save fuel. There is a speed limit in the parks of about 30-40 kilometers per hour, theoretically. Hired drivers typically won't go more than about 20 km/h; self-drivers usually go 50 km/h. This is because you pay in advance, so they will try to get you to see all animals, but in a limited part of the parks. If you pay an extra fee, a driver won't have any problem to take you where you want.  Driving is fun! And driving in Africa is double-fun! And don't worry about getting stranded; you are in a touristy area. Sooner or later somebody will come to help you. We always could use our mobile phones, and we had really difficulties staying alone for more than 30 minutes anyway.    If you can read Spanish, I point you to some interesting articles in my blog (like this and this).  A common criticism against self-driving is that the driver-guides know where the animals are. That's not my experience. The animals are free to move, and the only advantage a driver has is their knowledge about the areas where animals ""normally"" are. For instance, you never expect to find a leopard in the middle of the savannah, but rather, in a tree. You can adquire this knowledge, believe me, in less than a week: animals are spectacular, but predictable. A common-sense rule that you have to follow (and car drivers do) is to go anywhere where you see a lot of cars stopped. Also, you can ask other drivers (self-drivers or not) about what they have found. Finding animals is not so difficult, except for some of the rare animals (rhinos) or those with uncommon behaviours (tree-climbing lions).  ",2,Self-drive,2,Self-drive,"[[43, 61], [2084, 2096], [2739, 2751], [3326, 3338]]",guided safari,"[[32, 38], [2026, 2039], [2760, 2777], [3342, 3345]]"
softwareengineering.stackexchange,25596,Should I use a single platform for common services or modularize them?,"Platform  I like the idea of the platform approach, but there are a couple of points you mention that give me cause for concern.   Why not make the back-end entirely stateless and RESTful? You know, have a bunch of web services that provide the necessary JSON or XML to drive the front end clients. These clients could be written in any language you like, so long as they can consume/produce the necessary intermediate representation. Implementing RESTful web services these days is trivial with JAX-RS implementations like RESTEasy just a Maven dependency away.  Having the platform abstract the database away is good practice simply because you want your client and your services to be as independent of each other as possible.   You mention that updates to the platform would mean taking down the whole system. Why? If you're serious about it, you'll have your live and fail-over clusters running in parallel. You upgrade your fail-over cluster and run your verification test suite on it to ensure it's up to scratch. Then you switch your load balancer to use the fail-over cluster instead of the live one (the live becoming fail-over). If your platform is truly stateless your clients operations will be uninterrupted since the DNS of your services remains the same.  I'd caution against using Java object serialization (e.g. RMI) just because of the binary API restrictions you may encounter if you decide to update the objects.   Modules  Sharing common code between modules is trivial with a build system like Maven (or Ivy if you can't leave Ant). Having a common back-end language will also reduce the learning curve for new developers. Also you'd doubtless have a large collection of template base classes to support common functions in the different back-end layers (DAOs, DTOs, BOs etc). (This is also true of the platform approach).  Given that each module is separate and independent of each other you may find that if developers don't communicate effectively, code duplication will likely occur within modules. Also, bugs will be fixed in one module, but missed in another. This is especially true if you're creating multiple variations of a module to look after different clients.   Obviously, dependency injection and good design will go a long way to mitigate this, but you may find the solution more complex than if you go the platform route.  ",2,a single platform for common services,2,a single platform for common services,"[[29, 50], [571, 583], [760, 772], [1822, 1843], [2342, 2354]]",modularize them,"[[1436, 1443]]"
yahoo,903027,903027,903027,2,"a kind-hearted, encouraging fellow with a lot ofproblems at home",2,"a kind-hearted, encouraging fellow with a lot ofproblems at home","[[7, 73]]",...,[]
academia.stackexchange,57834,Should I be a visiting student rather than a non-degree seeking graduate student?,"Enrolling as a non-degree-seeking graduate student in a U.S. mathematics graduate program is almost never a good idea, and this is in no way a mainstream option.  (I'm talking about not seeking a degree anywhere.  For comparison, it's not uncommon to be officially seeking a degree at University X but visiting University Y while your advisor visits there.)  It's easy to get the wrong impression from course catalogs, since they give short descriptions of options that may not reflect how they are used in practice.  For example, I doubt the Princeton math department ever admits anyone as a qualifying student; if it happens at all, it is exceptionally rare.  I can imagine it might happen for a clearly brilliant student from a deprived background, but not for the vast majority of applicants.  There's just too much competition for admission.  If you are accepted as a non-degree-seeking graduate student:    You won't be treated in any way like an ordinary graduate student.  To the extent anyone in the department is aware of you, you'll be in a special category of ""person who wasn't admitted to the graduate program but is paying a lot of money to take courses anyway"", which is not a flattering description.  In particular, you should not expect faculty to supervise your research or interact with you any more or differently than they treat the undergraduates in these classes.  (It could happen, but I'd guess it probably won't.)  It won't help with admission, compared with doing equally well in similar courses elsewhere.  Specifically, any admissions committee will have members who want to make sure this isn't used as an easier back door to admission, and they will be sure to enforce strict standards.      I can graduate this year (as a junior) and become a ""qualifying student"", or become a ""visiting student"" and I can graduate a year later.    Are you sure you're interpreting these programs right?  In this listing of the categories, visiting students are enrolled in graduate programs elsewhere, while qualifying students are non-degree-seeking students who are trying to make up for weak backgrounds in the hope of future admission.  I'm not aware of any option for undergraduates to spend a year at Princeton, except for some international exchange programs.  However, I might well be missing some possibility.  ",2,visiting student,2,visiting student,"[[302, 310], [1811, 1827], [1956, 1973]]",a non-degree seeking graduate student,"[[13, 50], [265, 281], [871, 908], [2049, 2076]]"
travel.stackexchange,14648,Is it cheaper to book Dutch train tickets online in advance compared to paying on the day?,"With regular NS trains (intercity's, sprinter's and stoptrains) booking in advance does not give you any discount. If you would travel with a NS HiSpeed train this could be the case, but there's no direct HiSpeed connection between Eindhoven and Amsterdam, so it's irrelevant to your journey.  There's a direct train between Eindhoven and Amsterdam Central Station which would cost you ‚Ç¨17.90 one way. If you buy the ticket at the counter, instead of at the machine, you'll have to pay an additional ‚Ç¨0.5.  If you're really tight on money you could look for someone who looks like a student and ask politely if you can travel ""together"". 90% off all students has a card which gives them and 3 fellow travellers a 40% reduction on any train journey. Fellow travellers can make use of this system after 09:00 on weekdays, the whole day during weekends and also the whole day during the months July and August.  When I was a student I've had this question asked several times. When a conductor asked the other person why he had a ticket with 40% discount, I would just say that we travelled together, making the discounted ticket valid.  ",1,Neutral,2,to book Dutch train tickets online in advance,"[[64, 82]]",to paying on the day,[]
academia.stackexchange,71447,Is it better to focus on relearning mathematics fundamentals or learn material as needed to understand research papers?,"Why not both?   If you aren't explicitly a mathematician but there is a lot of math used as a tool in your field to solve problems (this is often the case with my field), it is understood that some people are stronger in the math than others. The whole point of having a field where people of different educational backgrounds work together is that you don't have to be an expert at every sub-skill and sub-task - you can have your own unique strengths without starting over at the fundamentals for every subject in play.   A strategy that I've found works very well is read some literature to see what techniques are used by others in their related research. If a technique comes up a few times (like, say, applying Dynamic Time Warping to analyze a time series), read into that bit to get a better high-level understanding of it - how it is used, it's strength and weakness, when it's not appropriate, etc.   At this point you may find that the technique just isn't relevant to your research - so you can probably skip it for now and move on. Sure, you don't understand it from top to bottom - but you just don't have time to learn everything in infinite detail! However, what if the technique seems really useful? Well, some people don't bother to understand it at all and just blindly apply it, because well other researchers have so it's probably fine. I'm not at all fond of this, and I would humbly suggest it leads to bad science, unreliable findings, and missed opportunities.   So if a technique seems useful to you, learn some more about it. Try to delve a little more deeply and find out just what the technique seems to actually do. What do some of the variables mean? How is the calculation performed overall - how does it behave based on some inputs compared to others, and why? Again, you probably have limited time, so don't feel you have to prove everything from first principles.   Next, you still have some time to advance your understanding of the fundamentals. So especially as you read through the literature and useful techniques, what area is really hard for you? Is probability stumping you, or calculus, or dynamic programming, or are the notations and implicit variable meanings alien to you? Reserve a little of your time - perhaps a few hours a week at most - to strengthen yourself on the most fundamental issues. Perform a trivial calculation by hand, or read a textbook explanation of the notations used.   I've found the biggest pitfall is thinking you have to understand everything from square one right at the very beginning, and I have to fight the tendency to get sucked in to minutiae. But then often as little as a few days pass and suddenly I realize I have a far better understanding of something than I thought I did, and it wasn't really as hard as it seemed at first.   Now this works for me, and for plenty of other people I know, but I cannot say it will be the best for you, in your field, with your personality and own unique traits and talents. As always YMMV - find what works best for you!  ",1,Neutral,2,to focus on relearning mathematics fundamentals,"[[1948, 1981]]",learn material as needed,[]
academia.stackexchange,32274,"Is it better to submit a paper to a journal ""normal"" issue, or wait 4 months and send it to a more focused ""special section"" of the same journal?","There's another alternative. You can submit to the special issue early.  Usually journals don't have ""easier"" submission to a special issue or section. Most journals try to have the same review and editing criteria for such contributions as they do for other articles. (Consider that having different criteria makes it harder for them to process and track such articles.) I can attest - I had a manuscript that was asked for significant revision and it didn't make the ""special issue"" by the time we'd revised it.  But you can submit the article and ask for inclusion in the special issue and explain that you have the manuscript done now. They will probably send it for review, etc. but it won't be published until the remainder of the special section is finished as well.  I've done this. It gets the paper off your desk and lets you move on to other things.  What are the pros and cons?:    Pro: Usually a special section or special issue gets added attention and publicity. I haven't seen analysis, but one would hope that articles in this section or issue would have more readers and potentially more citations than in a normal issue.  Con: You will have to wait for the special issue to finalize, while if you submit to the ""regular"" journal, publication will probably happen sooner. On the other hand, if the journal publishes accepted articles before publication, or you can put the manuscript on a pre-print server, there's little downside.    Personally, I'd submit early, indicate in the submission letter (and online forms) that the article is for the special section and be done with it.  ",0,,2,"to submit a paper to a journal ""normal"" issue",[],"send it to a more focused ""special section"" of the same journal",[]
yahoo,3932285,3932285,3932285,2,sirius,2,sirius,[],XM satellite radio,[]
softwareengineering.stackexchange,61270,"Which is better design: Determining if a function should execute from outside of it, or inside of it?","The important bit is who owns bar? If it's unclear, consider if B can live up to it's method name considering the value of Bar. If so, then make it part of B. If not, then make it part of A.  In a real world scenario, you'll generally find methods that fulfill a design responsibility, and helper methods that fulfill implementation steps. Generally, the decision of whether to call an implementation method resides with the API method - which is generally the public method.  public class Control {      public bool IsVisible;      public void Render() {         if (this.IsVisible) {            this.PrepareForRender();         }      }      private void PrepareForRender() {         // just do it. Don't check IsVisible      }   }    It's possible that you have two different API methods calling each other. In that case, I'd suggest falling back on the semantics of why doesn't B run when Bar is false? Is it because B is unnecessary - then B should decide.    public class List {      public int Count;      public void SetTo(object[] values) {         this.Clear(); // need to clear values; don't really care how      }      public void Clear() {         // Count = 0 is just a shortcut to fulfilling Clear's responsibility         if (this.Count == 0) return;       }   }    Is it because B is incorrect? Then A should decide.   public class File {      public bool IsBinary;      public void Write() {         if (this.IsBinary) {            this.OpenBinaryStream();         } else {            this.OpenTextStream();         }           }      private void OpenBinaryStream() {      }      private void OpenTextStream() {      }   }    Because it's actively harmful? A should decide, and B should throw an exception:  public class File {      public bool UseSecureDelete;      public void Delete() {         if (this.UseSecureDelete) {            this.ZeroBytes();         }      }      private void ZeroBytes() {         if (!this.UseSecureDelete) throw new InvalidOperationException();      }   }    ",1,Neutral,2,a function should execute from outside of it,"[[375, 407]]",inside of it,[]
yahoo,1386639,1386639,1386639,1,Neutral,2,being in love,"[[17, 30]]",losing your love,"[[298, 309], [337, 353]]"
yahoo,2751569,2751569,2751569,1,Neutral,2,Windows,"[[159, 171], [241, 248], [261, 268], [345, 352], [441, 448], [816, 823], [868, 875], [1682, 1689]]",Linex,"[[97, 102], [254, 259], [620, 625], [779, 784], [825, 830], [1037, 1042], [1060, 1065], [1132, 1137], [1181, 1186], [1519, 1524]]"
yahoo,2921442,2921442,2921442,3,Gaim,2,Miranda,[],Gaim,"[[6, 10]]"
softwareengineering.stackexchange,1090,Do you prefer conciseness or readability in your code?,"Both.  Your first example is certainly more verbose, and arguably more explicit... but it also requires me to scan five lines instead of one. Worse, it deemphasizes its purpose - assigning a value to newGuy.Boss.  Your second example may cost me a second if I'm unfamiliar with the null coalescing operator, but there can be no doubt as to its purpose, and if I'm scanning through a larger routine looking for the source of a value, it will be much easier for me to pick this one out.  Now, contrast this:  if (boss == null) {      newGuy.Boss = GetDefaultBoss();      newGuy.IsTemp = true;      newGuy.AddTask(""orientation"");  } else {      newGuy.Boss = boss;      newGuy.IsTemp = false;  }    ...with:  newGuy.Boss = boss ?? GetDefaultBoss();  newGuy.IsTemp = boss == null;  if ( boss == null ) newGuy.AddTask(""orientation"");    The latter example is again much shorter, but now it obscures its purpose by making tasks triggered by the same test appear to be distinct. Here, I feel the verbosity of the former is justified.  ",1,Neutral,2,conciseness,"[[865, 872]]",readability,"[[44, 51], [985, 998]]"
cooking.stackexchange,19547,In what way is kosher chicken different from brined chicken in terms of salt absorbtion?,"I explained several of the differences in my answer to Brining a kosher bird and also discussed some issues relating to salt consistency in a much earlier answer to Chicken comes out salty... occasionally.  To make a long story short, kashering is a long process with many steps, but the part you're concerned with is similar to the ""dry brining"" technique some people are fond of using for Thanksgiving turkeys. The meat is salted directly - no water is used - and it is left to rest for a much shorter period, about 1 hour, before finally being rinsed and packed.  Kosher meat isn't ""juicy"" like brined meat at all; in fact, all other things being equal, it will come out much drier and tougher than unkosher meat, because in the process of drawing out blood (the reason for salting in kashering), a good deal of moisture is drawn out as well. Brining adds moisture to the tune of about 10%; kashering takes moisture away by a similar amount.  Aside from drying out, the only culinary differences you'll find with kosher birds (or other meat) are (a) less blood, uric acid, and other ""undesirable"" components, and (b) they are naturally saltier than unkosher birds. However, because the kashering process has nothing to do with flavouring, you can't expect any kind of consistency, and it's not uncommon to find that some parts are much saltier than other parts coming from the same bird.  Kosher birds are going to absorb roughly the same amount of salt and water from a brine. The difference is that because they've already been salted, you run the risk of over-brining to the point of being inedibly salty. That's the whole story.  If you want flavourful and moist then get a regular bird and brine it. If you care more about flavour and want to save some time (at a significant cost premium) then go ahead and use a kosher bird, no brine. You can brine a kosher bird (see first link in this answer) but you're going to have to do a little experimenting to get it right - and if you're going to brine anyway, then why bother spending the extra money on kosher meat?  Don't pay any mind to the oft-repeated claims that kosher birds are ""pre-brined"" or similar nonsense. The inherent saltiness of a kosher bird is significant but also incidental and thus inherently unreliable.  (Please also note: Assuming this is a follow-up to your previous question, none of this is going to make the slightest bit of difference if you're just going to plop the chicken parts into a pot of boiling or poaching water. If you're making broth, then you flavour the broth, not the meat.)  ",3,brined chicken,2,kosher chicken,"[[63, 76], [235, 244], [567, 578], [788, 797], [894, 903], [1016, 1028], [1185, 1206], [1392, 1404], [1820, 1833], [1859, 1872], [2058, 2069], [2123, 2135], [2200, 2213]]",brined chicken,"[[598, 609], [702, 715], [846, 853], [1472, 1479], [1679, 1693]]"
travel.stackexchange,25441,Ferrying Icelandic rental car vs renting on Faroe Islands,"Although all comments were helpful it seems this question is a bit specific to the situation, so here's the answer I found with research.   After contacting a few rental companies in Iceland and talking to the Smyril ferry lines, only one rental company, Reykjavik Cars, will allow the car to go off the island, whereas Smyril said it was ok on their side. Even within Europe, it still counts as taking the car to a different country so it's not without complications. (For comparison, rental agreements here in Canada allow you to drive the car across the border to a contiguous US state)  The Smyril fare for a car is the same for any model as long as the car fits their maximum dimensions. It's about 828 euros return with a car vs 370 without one. A quick search for a week's rent on the Faroes comes down to about 460 euros, it's actually about the same in expense but probably more practical to go on with the same car.  Flying return from KEF is about 1000$ when I checked. Keep in mind these prices are all for high season, June-July.  So the answer:  Cheapest seems to be flying actually, although rental fees are lower there is still gas to take into account. Most practical would be to ferry the Icelandic rental car across. And for anyone looking to ferry any rental car between countries, I'd recommend checking first with rental companies before the ferry lines.  ",1,Neutral,2,Ferrying Icelandic rental car,"[[1194, 1234], [1262, 1282]]",renting on Faroe Islands,"[[780, 798]]"
yahoo,579993,579993,579993,2,m&ms,2,m&ms,"[[1, 9]]",skittles,[]
yahoo,2127442,2127442,2127442,3,the nokia 6111,2,Nokia 6230i,"[[79, 84], [125, 130], [191, 200], [290, 299]]",the nokia 6111,"[[8, 16]]"
yahoo,2477784,2477784,2477784,1,Neutral,2,Run stright,"[[44, 60]]",run zig-zag,"[[64, 75]]"
yahoo,2531001,2531001,2531001,2,wool clothing,2,wool clothing,"[[89, 93], [163, 167]]",cotton,"[[15, 21], [201, 207]]"
yahoo,4115326,4115326,4115326,2,ARROGANCE,2,ARROGANCE,"[[227, 236]]",IGNORANCE,"[[32, 41], [133, 142], [257, 266], [305, 314], [439, 448]]"
yahoo,2519453,2519453,2519453,3,internal hard drive,2,external hard drive,"[[53, 68], [329, 343], [445, 460]]",internal hard drive,"[[145, 159], [427, 435]]"
yahoo,1925488,1925488,1925488,2,Nintendo DS,2,Nintendo DS,"[[30, 36], [932, 934], [1087, 1093], [1344, 1350]]",PSP,"[[525, 528], [760, 763], [967, 970], [1203, 1210]]"
yahoo,2528705,2528705,2528705,2,Aniston,2,Aniston,"[[134, 141], [269, 276]]",Jolie,"[[69, 74], [186, 191]]"
yahoo,3330566,3330566,3330566,1,Neutral,2,chiropractic therapy,"[[327, 341], [1006, 1020], [1075, 1100]]",physical therapy,"[[1135, 1151]]"
yahoo,3138263,3138263,3138263,2,an iPod,2,an iPod,"[[46, 54], [207, 212], [303, 311]]",a Dell DJ,"[[13, 20], [273, 280]]"
softwareengineering.stackexchange,119488,Which is better : Storing/retrieving images on/from SQL server or in a directory on server,"I prefer to put binary in the database, but that's primarily because    I know where it is, and I don't need a systems guy to set up a network share or webserver.  I can control who can retrieve the data through my application, rather than rely on permissions on the file system. I can do it on a very granular level very easily.  I get much simpler transactional integrity when inserting files than I would with a file system.    The best argument against database storage are around size - the database might become unmanageable. Much more difficult to do database backups & maintenance; the database is one huge file, whereas if the files are external then you can have some over here and some over there.  If you're using Microsoft, perhaps the best compromise is the FileStream type. It stores the filepath in the database and the files in a folder, but the folder is essentially controlled by SQL. You 'insert' files to the database and they're saved in the folder, and when you 'select' from the database the server will retrieve them from the folder and serve through through the database. In this way you get the best of both worlds - transactions and control, plus the size efficiency of keeping the database small.  ",2,Storing/retrieving images on/from SQL server,2,Storing/retrieving images on/from SQL server,"[[9, 38], [457, 473], [492, 504], [594, 606]]",in a directory on server,"[[133, 148], [263, 278], [413, 426]]"
yahoo,3127622,3127622,3127622,1,Neutral,2,Linux,"[[69, 74], [127, 132], [204, 223], [570, 575], [766, 771], [984, 989], [996, 1001]]",Microsoft,"[[29, 38], [78, 85], [304, 311], [386, 393], [432, 439], [457, 467], [498, 511], [558, 565], [584, 591], [1019, 1026]]"
yahoo,353840,353840,353840,1,Neutral,2,Ipod,"[[106, 114], [353, 361], [520, 528], [723, 727], [780, 788], [942, 950]]",Creative MP3 Player,"[[258, 266], [288, 300], [364, 380], [648, 656], [767, 775], [838, 854], [888, 904]]"
travel.stackexchange,47542,"Internal train travel in France - cheaper on day, or when pre-booked from UK?","Between Paris and Tours you can either take a TGV (highspeed train) or an ""Intercit√©s"" (classical train). Both are cheaper when booked in advance. The full fare for a 2nd class TGV ticket is 65 EUR. Booked in advance it can be as cheap as 25 EUR. For Intercit√©s the range goes from 15 EUR to 36.20 EUR.   You should also know that TGVs can sell out. If you are really unlucky and show up at a very busy day, there may be no more seats available.  ",3,pre-booked from UK,2,cheaper on day,"[[147, 160]]",pre-booked from UK,"[[128, 145], [199, 216]]"
academia.stackexchange,9299,What factors should I consider when deciding between a general MBA vs. a specialized MBA?,"Because you already have real world experience in IT but are unsure it is where you want to stay, a general MBA should be fine.   If you want to stay in IT, what most companies care about is actual experience - and it seems you have that. Having an MBA and experience in IT is a great combination and having experience in IT is far more useful than having a specialist MBA in IT.  Another issue is that IT management is usually not a challenging place to get to if you are interested. I've worked with quite a few people in IT and it was the rare one who wanted to be in management. Most wanted to keep their hands in the technology. For this reason, IT management is different from many other fields in business.  ",2,a general MBA,2,a general MBA,"[[98, 111]]",a specialized MBA,"[[356, 372]]"
yahoo,2752239,2752239,2752239,3,with a home charger,2,Charging your IPOD video w/ usb2.0,"[[4, 11], [140, 151]]",with a home charger,[]
softwareengineering.stackexchange,85691,"Building websites, which is the better approach MVP or MVC?","I guess you're asking in the context of the Microsoft world?  It was my understanding that MVP was mainly employed for unit testing the controllers of the application. I think another term for the MVP pattern is Supervising Presenter.  The view in this case would be the ASP Page, which would have an instance of the Presenter, and any events in the page (click handler's for example) would delegate their work to the Presenter. The Presenter would have a reference to the View (although, through an IView interface that the Page would implement). The Presenter would then respond to actions from the View, do something, update the model and pass it back to the view or perform actions on the View via the interface.   This aids unit testing, because the Presenter (where any presentation logic should be) can have the view mocked out. Typically a Presenter would also have references to other services, which should rely on dependency injection (via constructor injection IMO) to also allow for the Presenter to be tested in isolation (a proper unit test).  The main reason I think to use MVP in ASP.NET WebForms is because the Page class is tied to the ASP.NET runtime, whereas because ASP.NET MVC has abstractions on things like the HttpRequest, and the controller and ActionResult classes can be tested in isolation, you don't need to employ MVP - it's unit testable by default.  So to answer (I think): I'd use MVP if I was using WebForms, to aid testability. Otherwise I'd use MVC.  Also check out the Web Client Software Factory, which offers a framework for a starter point for implementing the MVP pattern.  ",1,Neutral,2,MVP,"[[91, 94], [193, 200], [212, 233], [1090, 1093], [1346, 1349], [1416, 1419], [1603, 1614]]",MVC,"[[1196, 1199], [1483, 1486]]"
yahoo,3401223,3401223,3401223,2,to get a SATA adapter,2,to get a SATA adapter,"[[21, 32]]",a IDE/PCI card,[]
yahoo,2641369,2641369,2641369,3,be a millionaire,2,travel to space,"[[120, 128]]",be a millionaire,"[[23, 39], [65, 78]]"
yahoo,507441,507441,507441,3,Direct Tv,2,DishNetwork,"[[59, 71], [437, 449]]",Direct Tv,"[[7, 9], [96, 105], [292, 301]]"
cooking.stackexchange,10961,Carrot Pie: custard or stew?,"I can see this as being similar to a sweet potato pie.  Best bet in that case would be to cook the carrots, then puree and mix with eggs, milk, etc. just as if it were a sweet potato or pumpkin pie.  Two alternatives that come to mind would be to treat it like a fruit pie, as you say.  Because of the texture of the carrots, I would grate them with the large holes on a box grater, toss with sugar, raisins, some tapioca and whatever spices your heart leads you toward.  An alternative would be to make a molded gelatin like pie, similar to a refrigerator lime pie.  Lots of gelatin and grated carrots.  I, personally, wouldn't like it, but I am not fond of jello with carrots in it either.  Happy experimenting.  ",0,,2,custard,[],stew,[]
academia.stackexchange,20130,How to decide between sending paper to a specialized journal or to a journal with broader audience?,"I tend to think that in most cases, the specialized/broad dichotomy is not very relevant. The most important point is to send it to an interested editor; if the most relevant editor for a paper happens to be at a general journal, you will often be better of sending your paper there.  I would consider two exceptions to this principle. First, top specialized journals are usually less reputed than top generalist journals, so if you get a truly impressive result, you may want to get the best of it by sending it to a top generalized journal. Second, some generalist journals will turn back papers that seems much more specialized than the average math paper (e.g. when the basic objects you study are unheard of by most mathematicians).  ",1,Neutral,2,sending paper to a specialized journal,"[[40, 51], [347, 367], [619, 630]]",to a journal with broader audience,"[[52, 57], [211, 228], [402, 421], [522, 541], [556, 575]]"
yahoo,1048357,1048357,1048357,1,Neutral,2,a job,"[[67, 72]]",bussines,"[[33, 41]]"
yahoo,1393471,1393471,1393471,2,LOVE,2,LOVE,"[[569, 573], [579, 583], [819, 823], [852, 856], [1728, 1732], [1803, 1807]]",INFATUATION,"[[91, 102], [1817, 1828]]"
yahoo,2134587,2134587,2134587,3,google,2,yahoo,"[[330, 335], [337, 343], [429, 434], [1023, 1028], [1576, 1581]]",google,"[[13, 19], [58, 64], [88, 94], [285, 291], [395, 401], [785, 791], [888, 894], [926, 932], [1048, 1054], [1268, 1274], [1368, 1374], [1417, 1423]]"
cooking.stackexchange,14405,"What would the drawbacks/benfits be to making French toast with egg alternatives (Egg Beaters, etc)","There's not a lot of difference between egg substitute (e.g., Egg Beaters), and egg whites. So the options you mention, they are roughly equivalent to one another.  The obvious thing both of these substitutes are missing is the yolk. An egg yolk adds a LOT of flavor to this sort of cooked egg dish.   In a french toast, whereas egg white is soaked up by the bread and creates a fairly unique texture, the egg yolk is the key to the flavor and it is what makes it rich. I think the egg white french toast is doable[1] but I don't think it will taste wonderful.  In other news, may I quote Thomas Keller in relation to a recipe of cheesecake (again, paraphrased by me) - If you are worried about the fat, have a smaller portion, and don't do my recipe with low fat alternatives.   I think it applies to cholesterol too.   [1] I certainly haven't tried this since I'm already way too fat to eat any french toast anyways...   ",3,egg whites,2,to making French toast with egg alternatives,"[[40, 54], [191, 208]]",egg whites,"[[80, 90]]"
softwareengineering.stackexchange,47076,Is Flash really superior to Java applets?,"Flash provides a more seamless experience for the user. Java applets are pretty slow, since the Java VM needs to be fired up before they can run. As a website visitor, I hate it when things freeze for a few moments while the Java VM figures itself out. If I'm not mistaken, it also doesn't unload once I navigate away from the website that used it, leaving it hanging around when I didn't really want it to run in the first place.  My (admittedly limited) experience with Flash and applet development also tells me that developing an animation in Flash is easier.  And then there's history. Microsoft didn't do Java applets any favours by developing their own JVM and making it behave differently from Sun's. As a result, the same applet could work in one browser and not another, which made creating Java applets less viable.  Java does have free tools that can be used as opposed to proprietary Flash editors required to make Flash videos, but ultimately its heavy-handed approach makes it inferior.   ",2,Flash,2,Flash,"[[472, 477], [547, 552], [897, 902], [928, 933]]",Java applets,"[[56, 68], [611, 623], [801, 813], [828, 832]]"
yahoo,3649095,3649095,3649095,1,Neutral,2,men,[],woman,"[[8, 13]]"
yahoo,1023490,1023490,1023490,2,sprint ppc 6700,2,sprint ppc 6700,"[[269, 277], [369, 377]]",palmone treo 650,"[[73, 81], [213, 221]]"
yahoo,3893725,3893725,3893725,2,ARNOLD(TERMINATER),2,ARNOLD(TERMINATER),"[[88, 94]]",SYLVESTER STALONE (RAMBO),"[[52, 55]]"
yahoo,2372914,2372914,2372914,3,an optical lan,2,a Gigabit lan,[],an optical lan,"[[3, 14]]"
yahoo,2990521,2990521,2990521,2,Seahawks,2,Seahawks,"[[4, 12], [111, 123]]",Packers,"[[72, 83]]"
superuser.stackexchange,38221,Install software: choose .msi or .exe?,"Usually msi packages are provided for system administrators who would have the need to deploy the software to several terminals over a network.  The results are no different from using an executable, but msi packages sometimes do have additional options such as doing silent or pre-configured installs.  If you are not a system administrator, use the executable.  ",1,Neutral,2,.msi,"[[8, 20], [204, 216]]",.exe,"[[185, 198], [347, 361]]"
yahoo,4195727,4195727,4195727,2,dream liner,2,dream liner,"[[141, 174]]",double decker airbus,"[[20, 30]]"
yahoo,3069404,3069404,3069404,2,JSP,2,JSP,"[[1017, 1020], [1158, 1161], [1514, 1517], [1615, 1618], [1711, 1714], [1929, 1932], [2006, 2023], [2066, 2069], [3088, 3091], [3692, 3695]]",PHP,"[[273, 276], [543, 546], [636, 639], [706, 709], [3910, 3913]]"
yahoo,4443719,4443719,4443719,2,the corleone's,2,the corleone's,"[[4, 13], [259, 271], [348, 357]]",the soprano's,"[[75, 87], [368, 376]]"
yahoo,2722756,2722756,2722756,1,Neutral,2,shonen manga,"[[29, 35], [47, 53], [336, 342], [522, 528]]",shojo manga,"[[40, 45], [140, 145], [395, 400], [534, 545]]"
superuser.stackexchange,44798,Should I use NUMA or SMP with Vista 64-bit?,"Last question first: Yes, Vista does support NUMA (XP professional already did)   In most cases it is beneficial to use the hardwares' native memory mode. 'Optimal' memory bandwidth and latentcy is the result.    The modes access policies can be descibed as follows:  NUMA: use local memory first (fast), if full use foreign (slow)  SMP: map every other memory page to the other CPU, this averages out fast and slow memory access   There are only rare cases where the application access foreign memory in a way that SMP modes averaging out the memory access is beneficial for the overall performance.  Example: Database, that doesn't exceed the memory capabilities of the system but still using significantly more than locally available memory.  If you don't care about memory performance you could have saved the money for the expensive i7 and buy a much cheaper (old style) SMP system and spend the extra money for a team dinner ;-)  ",2,NUMA,2,NUMA,"[[45, 49], [268, 272]]",SMP,"[[333, 336], [516, 519], [876, 879]]"
yahoo,1515017,1515017,1515017,2,yahoo,2,yahoo,[],google,[]
superuser.stackexchange,39480,"Which should I install first, Windows XP or Windows 7?","Although the recommended method is to install XP and then Windows 7, there is no need to reinstall in your case.  Follow this guide (edited below) using a free tool called EasyBCD.      Download and install EasyBCD. Click I Agree to the license agreement,    click Next to install in the default    location, and the installation wizard    will do the rest.  Click View Settings.  Change the Default OS to Windows 7. The operating system to    associate the settings with should be    Windows 7 too. Select the drive on    which Windows 7 is installed under    Drive. Type Windows 7 in the    Name box and press Save Settings.  Click Add/Remove Entries.  Under Add an Entry, choose the Windows tab. Select the drive on    which Windows 7 is installed. Type    Windows 7 in the Name box and    press Add Entry.  Under Add an Entry, choose the Windows tab. Select the drive on    which Windows XP is installed. Type    Windows XP in the Name box and press    Add Entry.  Exit EasyBCD and restart your computer to be presented with a    multi-boot option screen for Windows    XP and Windows 7.      ",1,Neutral,2,Windows XP,"[[35, 67]]",Windows 7,[]
travel.stackexchange,454,Is it cheaper and/or easier to buy a cheap tent and sleeping bag in Turkey or Bulgaria?,"I live in Turkey and travel to Bulgaria regularly. (~20 times now). My general idea would be that this might be easier to find in Bulgaria as long as you were in one of the major cities. Turkey doesn't seem to have this stuff just anywhere.  That being said, it's cheap-ish generic gear can be found at some major markets in Turkey, so I'd be inclined to hit up a few stores and pick something up before I hit the road.  ",3,Bulgaria,2,Turkey,"[[10, 16], [187, 193]]",Bulgaria,"[[31, 39], [130, 138], [325, 331]]"
superuser.stackexchange,38861,"SSD raid array, should I pick 0 or 5?","Advantages of RAID 5 in your setup:    You can add disks to increase the storage without having to reinstall the operating system or recover data.  RAID 5 is fault tolerant.  You are very very unlikely to have more than one disk fail at the same time (although I did just see this for the first time at a client - gulp), so there is much less chance of having to rebuild your system from scratch  If a disk fails with RAID 5, you can simply replace the disk and rebuild/resync the array.  If a single disk fails with RAID 0, bye bye data on both disks.  If you were to stick with RAID 0 and a daily backup, restoring from the backup would result in data loss between when the last backup was taken and when the disks failed.    Disadvantages of RAID 5 in your setup:    There is a performance hit when writing, over a RAID 0 striped array.  You need at least 3 disks.  You effectively lose the capacity of one of the disks (although the parity data is spread across all disks).    RAID 5 is common for business servers that hold mission critical data and require maximum uptime.  Otherwise, if speed is the dominating requirement in your setup and a loss of maybe a few hours work is acceptable, then go for RAID 0.  ",1,Neutral,2,0,"[[517, 523], [580, 586], [818, 824], [1208, 1214]]",5,"[[14, 20], [148, 154], [418, 424], [745, 751], [981, 987]]"
yahoo,3104710,3104710,3104710,3,Palm T5,2,Palm X,"[[318, 320]]",Palm T5,"[[9, 13], [412, 418], [521, 523]]"
travel.stackexchange,10170,Which Shanghai airport is convenient for city center? Hongqiao or Pudong?,"With the help of Google maps, using the public transport option, it seems that Hongqiao aiport is closer and needs less time and less subway stops (cheaper?).  Using subway, Hongqiao Airport to People's Square is 51 minutes away with 11 stops while from Pudong Airport you will need 1h25m with 17 stops.  ",2,Hongqiao,2,Hongqiao,"[[79, 94], [174, 190]]",Pudong,"[[254, 268]]"
yahoo,107406,107406,107406,3,an artist,2,a model,"[[137, 144], [304, 312]]",an artist,"[[44, 53], [56, 65], [285, 294]]"
softwareengineering.stackexchange,73047,"When designing a protocol, is it better for a method to accept a single object of a specific type, or an array?","There is no general answer to your question, but let me provide one to your example to point out some principles that generally apply.  Note: I shall henceforth speak of ""interfaces"" instead of ""protocols"", not only because it is arguably more common name for it in other languages, but also because I really mean interfaces in a more abstract way, as in ""the definition of how something can be interfaced with"".  When designing an interface, you should design it, as if you had no means to implement it yourself, but rather had to rely on somebody else, whom you will only be able to communicate your needs to through your definition.  If you assume this scenario, you see that you want an interface to be very clear (otherwise the implementation may not be designed to do what you expect) and very easy to implement (otherwise the implementation may fail to do what you expect).   Now in the context where you depend on the service abstracted to the interface you design, you should have been able to make several important decisions, that you shouldn't forward to the implementor to not force them to overstep the single responsibility principle, nor provoke code duplication. Instead, you need to make those decisions and convey them in your method invocation.  In this example, you might have:    figured out, whether some items can be processed in batch - assuming you expect any advantages in doing so   been able to filter out duplicates - assuming your system can produce any in the first place    And thus (under both assumptions) your contract with the implementor should be ""you must be able to process a batch of unique URLs"".   You can hardly transport this contract unambiguously without documentation, but you can try, for example by method names. IMHO receiveDroppedItems is not very expressive, because item is really ambiguous and receive also is in a language based on message passing.  I would call it processDroppedURLs. It's not longer, but it really says what's expected to happen. If I am asked to implement such a method, I think ""Oh, ok, so I am expected to process a collection of dropped URLs"" (assuming I know what dropped means in that context, I know all I need). Even though the collection's type might be defined to something as vague as NSFastEnumeration, I would expect for...in to yield NSURLs. As for the uniqueness information, I would probably rather put that into the documentation, rather than the method name, because it's not that vital.  So to summarize: You want clean, concise, almost minimalistic interfaces with expressive method names, that create abstraction barriers between the current client scope and the abstracted service scope, which are clear and simple from both sides.  ",1,Neutral,2,to accept a single object of a specific type,[],an array,[]
softwareengineering.stackexchange,61039,Smart Pointers inside class vs Normal Pointers with Destructor,"No, it's not enough to deal with the raw pointer in the destructor.  You also have to deal with it in the copy constructor and assignment operator functions.  It's usually not enough to simply copy the pointer (which the compiler will happily do for you); you probably really want to make a copy of the resource it points to.  And you have to remember to gracefully handle self-assignment without leaking the resource.  Maybe you don't want to support copying at all, so you have to remember to explicitly disable those functions.  Maybe you want to give out handles to that resource, so you have to keep track of when it's safe to be freed.  What if an exception is thrown in the middle of your constructor?  What if you aren't the one throwing it?  Maybe there's another edge case I haven't thought of.  (Note: I've debugged more than enough of this kind of code that gets it wrong, hence my somewhat harsh tone.)  If you want to get it right on the first try, then yes, you should go with a smart pointer type such as boost::scoped_ptr or std::tr1::shared_ptr.  ",2,Smart Pointers inside class,2,Smart Pointers inside class,"[[992, 1012]]",Normal Pointers with Destructor,"[[33, 66]]"
yahoo,2766747,2766747,2766747,2,Limewire,2,Limewire,[],Bearshare,[]
academia.stackexchange,7399,Should you choose your committee members or should your advisor?,"There are many ways to build PhD committee, which depend on the local system (country, etc.) and your field. But, here are some general principles that should apply broadly. You need to bring a mix of highly competent yet diverse evaluators, with not too much proximity to yourself or your advisor lest it be thought that you are cherry-picking a partial (friendly) jury for your work.  Regarding your questions:      Is it more important that your advisor already know your committee members or that you do    I don't think it's a very important part of the decision-making. Certainly, you don't want the advisor's best friend (or yours!), that could make people think you're scared of unbiased questioning.    Is it better to get someone in your discipline or someone doing more related work    Here's one of the factors that play a very important part, for me, in picking committee members. First, all members need to be able to have a good understanding of your work. However, it is good that not all of them are precisely expert in particular field of expertise. It helps to have people from other (related) fields, because they will bring a different perspective, and give you the opportunity to highlight not only the very technical details of your work but also its significance for other fields.    is the dissertation process supposed to be a chance for you to win people over to your side?    No. It's good to bring people who don't necessarily agree with you on everything, but you should also avoid as committee members anyone overly critical of your approach of things, unless you know them well and they can keep it under control and agree to disagree. Otherwise, you risk that person actually coming to your defense to win you over. I have seen defenses being ‚Äúderailed‚Äù (though all ended well) by a committee member who was overly argumentative, and it wasn't a nice experience for anybody involved.    ",1,Neutral,2,you choose your committee members,"[[501, 507]]",your advisor,"[[444, 492]]"
yahoo,4408743,4408743,4408743,1,Neutral,2,to mix 87 octane with 92,[],straight up 92,[]
yahoo,2831974,2831974,2831974,3,A.I.,2,kobe bryant,"[[17, 21], [66, 70]]",A.I.,"[[38, 40], [224, 226]]"
yahoo,2227085,2227085,2227085,2,Dr.,2,Dr.,"[[12, 21], [142, 150]]",Oprah,"[[71, 76]]"
cooking.stackexchange,18431,What is more difficult to make: beer or wine?,"I haven't done it myself, but I guess making beer is more difficult for one good reason: safety!  Grapes will ferment by themselves and will produce either wine or vinegar. The fermentation process is violent, so there's no risk. Added meat will be fermented as well!  Beer needs to be sterilized before a yeast is added and there's a risk for butulism.  Now, making a good wine is something else. I guess that making a good wine is far more complicated then making a decent beer, once you overcome the safety issues, as there are a great number of steps involved in making good wine. For instance: aging in oak.  Commercial wines start by sterilizing the grapes and afterwards adding a certain yeast strain, but hey...  ",3,wine,2,beer,"[[45, 49], [269, 273], [475, 479]]",wine,"[[156, 160], [374, 378], [425, 429], [579, 583], [625, 630]]"
yahoo,2622288,2622288,2622288,2,Green Day,2,Green Day,"[[6, 9], [86, 97], [134, 145], [162, 171]]",AC/DC,[]
academia.stackexchange,70896,Is co-first author or co-corresponding author better for a postdoc's job prospects?,"I would say co-first author:    First authorship is more important: if a professor both led the work and made the biggest contribution to the paper, they will generally choose first authorship rather than last authorship.  Early in your career, making a big contribution to the research itself is likely to be most important, and first authorship shows that.  The ""last author"" signifying the leader of the work is less widespread (one discussion here).  Even in fields that use this convention, it is not always used.  Thus, your last authorship might not mean as much.  Especially if someone knows you are not a professor leading your own lab, they might not give you much credit for this.  ""co-first authorship"" is a clear idea: you are one of two people who equally made the largest contributions to the work.  But ""co-last authorship"" is not so clear.  What does it mean?  Especially if the other last author is the professor who runs the lab?  It's not clear what this would say about your contribution.    Of course this is referring to fields where authorship ranking by contribution is used; this isn't universal.  ",2,co-first author,2,co-first author,"[[12, 27], [32, 48], [330, 346], [694, 713]]",co-corresponding author,[]
academia.stackexchange,16339,Is job experience more valuable than taking more courses?,"If the ""job experience provider"" would write a good recommendation for you afterwards (surely you must also deserve it), this may matter more.   Unless you skip some very basic course that your future company sees as very useful for your work. For example, if the future company focuses on C++ development, a course with good marks in C++ programming may matter more than work in some company that required HTML/CSS only.   I would say, take that job but think well which course deserves dropping most of all.  ",2,job experience,2,job experience,"[[8, 22], [372, 420], [447, 450]]",taking more courses,"[[307, 350], [472, 478]]"
gardening.stackexchange,17864,What are the pros and cons of bagged mulch versus city mulch?,"Dark color is not necessarily a sign of healthy compost/mulch. If it's dyed, the color is from chemicals, not humus. Not so healthy. Bagged mulch must tell you if it's dyed or not, so read the bag. If there's no mention of dye, you're good.   Now, because the (undyed) color doesn't affect the health of the product, using the city mulch is still a good idea, unless you want color for aesthetic purposes. So:    Bagged mulch if dyed will retain it's color much longer, and if undyed, most likely still a good bit longer, because bagged mulch is a much higher quality product than free city mulch. But remember, for soil health, it's not all about the color.  Yes, undyed bagged mulch will be at least as good for the soil as the city stuff. If dyed, you will be adding that much chemical dye to your soil.  Yes. Here are a few:    Bagged Mulch (undyed)    (+) is much more consistent in texture and quality  (+) is not going to contain as many possible contaminates like chipped black walnut limbs (a common issue with city mulch)  (+) the color usually lasts fairly well, even when not dyed, because of proper 'cooking' methods and a more decomposed state  (-) is much more expensive (obviously), which tends to limit the amount applied, which can (in some cases) decrease the rate at which your soil is improved    City Mulch    (+) It's available in bulk, so you can supply your garden with as much as necessary without running up a big bill  (+) Usually, the stuff is good enough for use in garden beds, some cities are more careful than others, though  (-) The texture can be extremely uneven, and will break down irregularly, because of the many various species that went into it.  (-) color fades fast, especially if the mulch hasn't decomposed for long. This is only aesthetic.        ",2,bagged mulch,2,bagged mulch,"[[133, 145], [413, 425], [530, 542], [672, 684], [832, 853]]",city mulch,"[[323, 337], [586, 596], [726, 740], [1020, 1030], [1318, 1328]]"
gardening.stackexchange,13763,Is Clopyralid or Dicamba more effective in the control of clover in lawns?,"It depends to some extent what you mean by 'clover'. White clover or Dutch clover (Trifolium repens) and red clover (Trifolium pratense) are very susceptible to treatments containing dicamba, dichlorprop-P and mecoprop-P, or 2,4-D and mecoprop-P. Other, clover like lawn weeds are more susceptible to formulations containing fluroxpyr, MCPA and clopyralid, although these will also have some impact on Trifolium varieties. You'll note that the most effective treatments contain more than one ingredient. Any and all chemical treatments aimed at killing or lessening clovers work better in early to mid summer, and are less effective from August (or late summer/early fall) onwards.  ",1,Neutral,2,Clopyralid,"[[345, 355]]",Dicamba,"[[183, 190]]"
cs.stackexchange,9389,Can we say DFA is more efficient than NFA?,"There are two answers, depending on how you define efficient.  Compactness of representation  Telling more with less: NFAs are more efficient.   Converting a DFA to an NFA is straightforward and does not increase the size of the representation.   However, there are regular languages for which the smallest DFA is exponentially bigger than the smallest NFA. A typical example is $(a|b)^*b(a|b)^k$ for $k$ fixed.  Computation  Running it fast: DFAs are more efficient.  The computers we use today are deterministic in nature. That makes them bad at dealing with non-determinism. There are two common ways of dealing deterministically with NFAs: backtracking on one side, which is rather costly, or keeping track of the active states, which means each transition will take up to $N$ times longer (where $N$ is the size of the NFA).  ",1,Neutral,2,DFA,"[[156, 161], [307, 310], [443, 447]]",NFA,"[[118, 122], [165, 171], [353, 356], [824, 827]]"
travel.stackexchange,47531,From Brussels to Rotterdam: Intercity or Thalys?,"The main advantage of Thalys over Intercity trains is speed: 1h10 for a Thalys vs 2h10 for an Intercity on that route. And you have a reserved seat. Regarding ticketing, the point goes to the Intercity, as you say correctly.   On the other hand, if you board the Intercity in Brussels you will be sure to have a seat. I have traveled several times on that route and never had an issue with seats. Trains can be packed in the morning rush hours (into Brussels) and in the evening rush hours (out of Brussels). Traveling in Summer (July-August) is an advantage in that respect, as there will be less traffic due to the Summer holidays.   Between Rotterdam and Amsterdam you can also opt for an Intercity Direct or a Sprinter train. The former is faster and more expensive (+ 2.30 EUR) than an IC train, whereas the latter is slower and costs the same as the IC train  ",1,Neutral,2,Intercity,"[[34, 50], [94, 103], [192, 201], [259, 272], [692, 701], [788, 799], [852, 864]]",Thalys,"[[22, 28], [72, 78]]"
softwareengineering.stackexchange,111706,"Is it better to use pre-existing bad practices, or good practices that don't fit well with old code?","You should choose better design if:    You are going to be taking over a large part of future coding  Better design isn't more expensive to the client in the long run. For instance, I have witnessed multi-month ""refactorings"" for projects that were discontinued by the end of the year.    You should choose ""same bad style"" if:    You're just helping out. It's unrealistic to think you can take an existing group and will them to higher design standards if you're just a part-time fill-in on the project.  Better design is subjective and almost always has a learning curve. If that new design isn't learned by the rest of the team then the project will end up with a mish-mash of styles, and your better designed code may end up in the pile of stuff that nobody changes because they can't understand it. In your example above, what happens if there are updates to the third party software?  Sacrificing ""better"" design will get you a tangible business advantage. Like adding feature X badly will get you a large contract, but missing the deadline causes you to end up with nothing. This is where the historic conflict between mgmt and the technical team come in. Like renovating a house, someone has to decide when to pay. You can pay down the debt initially by living with no electricity or plumbing for a year. Or you can pay 3x as much with the benefit of having those utilities.    ",1,Neutral,2,to use pre-existing bad practices,"[[307, 323]]",good practices that don't fit well with old code,"[[18, 31], [102, 115], [506, 519], [582, 592], [904, 918]]"
music.stackexchange,14027,"7/6 no 3 or 13 no 3, 9, 11; which chord name is more correct (if any)?","I wouldn't go with either of the names you suggested. When you use ""no"" chord notation typically you are changing the intended harmony of a chord to something the chord symbol was not ment to represent.   Let's look at what we have:   C G A Bb   I'm assuming the C is the bass note. It would  be a stretch to call this any type of C chord because not only is there no 3rd, but there is also no 2nd or 4th. There is very rarely a chord with an omitted 3rd that is not suspend.(Besides a power chord which this is not.)  If we look at this chord as some kind of A chord it makes much more sense because we can stack the chord in thirds now and have it make sense:  A C _ G Bb  We still have no 5th, but the 5th is commonly omitted in larger chords.  A to C makes a minor 3rd, the G is a minor 7th and the Bb is a b9. Because the C is in the bass, we will have to notate the chord in slash notation so we get:  Am7b9/C  Still a lengthy name, but it describes the function of the chord better than C13 no 3, 9, 11 where it is very odd to omit 3 notes in a chord.   Another thing to note is it is typical in a 13th chord to omit the 9th and 11th as they are optional. So the suggested name could be reduced to C13 no 3, but still it is odd to omit a 3rd without some kind of sus.  ",1,Neutral,2,7/6 no 3,[],"13 no 3, 9, 11",[]
yahoo,2785939,2785939,2785939,2,better adapted to extreme hot,2,better adapted to extreme hot,"[[10, 22]]",extreme cold,[]
academia.stackexchange,59187,"Is it more common to refer to subplots as a ""frame"" or a ""panel""?","I can't recall having seen the word frame or panel used to refer to a subplot. More commonly:  In the text, e.g.,    Figure 1(a) shows [...]; figure 1(b), instead, shows [...].    In the caption, e.g.,    Figure 1. Comparison among blah blah: (a) function f [...]; (b) function g [...]    ",0,,2,"to refer to subplots as a ""frame""","[[36, 41]]","a ""panel""","[[45, 50]]"
yahoo,3568770,3568770,3568770,1,Neutral,2,a laptop,"[[106, 112], [276, 282], [321, 327], [386, 392]]",a desktop,"[[348, 357]]"
yahoo,3858095,3858095,3858095,3,an old car with character,2,a new car,[],an old car with character,"[[12, 22]]"
yahoo,4001383,4001383,4001383,3,Sirius,2,XMradio,[],Sirius,"[[39, 45]]"
yahoo,1607148,1607148,1607148,2,Windows XP Pro,2,Windows XP Pro,"[[108, 122]]",Home Ed,"[[3, 18], [188, 203], [211, 226]]"
yahoo,2244010,2244010,2244010,0,,2,to lease a car,"[[17, 30], [112, 123], [294, 300], [413, 419], [547, 554], [705, 712]]",buy it out right,"[[382, 393]]"
yahoo,2550039,2550039,2550039,1,Neutral,2,The Cobert Report,"[[4, 18], [379, 397], [617, 631], [676, 694]]",Today Show with Jon Stewart,"[[136, 167], [171, 202], [552, 566], [929, 939]]"
cs.stackexchange,3310,"Which Is a Better Way of Obtaining Scales, Gaussian Blur or Down Sampling?","Down sampling may discard relevant features, while blurring should not.  As a toy example, a down sample may remove a pixel which is a local maxima, while a blur operation will preserve the maxima by increasing the values of nearby pixels. If the local maxima corresponds to an interesting feature, it may still be discernible by the human eye after blurring.  From a computational sense, Laplacian pyramids are able to reconstruct an image precisely because a blur-subtract operation preserves the ""information"" in the scene.  ",2,Gaussian Blur,2,Gaussian Blur,"[[51, 59], [155, 171], [350, 358], [459, 484]]",Down Sampling,"[[5, 13], [91, 104]]"
yahoo,1213851,1213851,1213851,2,y!,2,y!,"[[6, 15]]",skype,"[[103, 108]]"
cs.stackexchange,12714,"What's better for an algorithm complexity, O(log n) or amortized O(log n)?","$O(\log n)$ in the worst case implies $O(\lg n)$ amortized.  Basically, given two data structures supporting the same operator, one in $O(\lg n)$ time in the worst case and the other one in $O(\lg n)$ amortized time, the first one is considered to be superior asymptotically: being $O(\lg n)$ time in the worst case means that each call of the operator will be supported in this time, while having an amortized complexity of $O(\lg n)$ means that some (very few) operator calls can take $O(n)$ time. Usually, the concept of amortized analysis is used for data-structures which amortized complexity is better than their worst case complexity.  As an illustration, consider a data-structure for integers, storing each such integer $x$ as a string of bits (e.g. $x=8$ represented by $(1,0,0,0)$), and the operator $x.inc()$ which increments $x$ by $1$.     In the worst case (e.g. on $x=7$ represented by $(1,1,1)$), the operator $x.inc()$ corresponds to $\log(x)+1$ binary write (e.g. to write $(1,0,0,0)$ corresponding to $8$).   In the best case (e.g. on $x=8$), the operator $x.inc()$ corresponds to exactly one binary write (e.g. to change the last bit of $(1,0,0,0)$ to $1$, giving $(1,0,0,1)$).    In a sequence of increments of the same integer object (e.g. enumerating all integers from $0$), the ""best case"" described above happens half of the time, and the worst case one every $n$ increment (i.e. after $1,2,4,8,16,...$ increments). A case requiring $i$ bits write happens $1/2^i$ of the time. Summing all those costs gives an amortized cost of $\sum_i i/2^i \in O(1)$. Hence the operator $inc()$ has a worst case complexity of $O(\lg n)$ but an amortized complexity of $O(1)$.  The notion of amortized analysis is well explained on wikipedia. You might want to see the page on the Potential method for more details.  Hope it helps!  ",2,O(log n),2,O(log n),"[[1, 10], [135, 150], [282, 297], [1637, 1647]]",amortized O(log n),"[[38, 58], [190, 215], [398, 435]]"
yahoo,3785254,3785254,3785254,3,being compassionate,2,being right,"[[8, 30], [95, 103], [217, 231]]",being compassionate,"[[112, 134]]"
softwareengineering.stackexchange,142075,creative & complex vs simple and readable,"Your second version IS far more simple and readable, and much better in every way. It's not creative or complex, but perfectly normal, straightforward code.  The only way in which it might confuse newbies is that it requires them to understand that complex boolean expressions are A) still expressions like any other and B) can be used wherever a boolean value is required, rather than just inside an if clause.  But this is something newbies really need to understand, so you should never let the possibility of someone not yet understanding it influence your code.  ",1,Neutral,2,creative & complex,"[[92, 111]]",simple and readable,"[[32, 51]]"
yahoo,1431602,1431602,1431602,3,a used one,2,a new PS2,[],a used one,"[[98, 108]]"
softwareengineering.stackexchange,14956,Which is best for learning how to do a certain thing: writing your own or looking at someone else's?,First try to write your own.  Then look at someone else's solution.  ,1,Neutral,2,writing your own,"[[10, 27]]",looking at someone else's,"[[35, 66]]"
yahoo,4178522,4178522,4178522,1,Neutral,2,egg,"[[624, 631], [740, 748], [791, 798]]",hen,"[[246, 257], [645, 652], [700, 711], [811, 822]]"
yahoo,4413933,4413933,4413933,2,Rock,2,Rock,"[[10, 14], [472, 476], [500, 504]]",Rap,"[[23, 34], [572, 575]]"
travel.stackexchange,8334,What's the difference between VIP and normal sleeper-bus from Vientiane to Pakse?,"I was in SEA at the beginning of the year. Firstly, good on you for not flying south. It's a very expensive and unnecessary flight for a trip that can very easily be made on land.  When it comes to VIP buses in South East Asia, there isn't usually a big difference, but it does depend on the price. Sometimes a VIP bus may give you better seating, A/C, only other tourists/foreigners on the bus and/or it could be faster, as some of the normal sleepers pick up a lot of locals along the way who sit in the aisles.  However, that being said, the VIP buses can be exactly the same. With the trip from Vientiance to Pakse I would probably just get the normal sleeper-bus unless there is a major price difference, which, in that case, probably means the normal is full of locals and will be a less comfortable ride.  ",3,normal sleeper-bus,2,VIP,"[[198, 207], [309, 318], [541, 554]]",normal sleeper-bus,"[[444, 452], [645, 667], [746, 756]]"
yahoo,409790,409790,409790,1,Neutral,2,to run a pellet stove,"[[305, 323], [574, 593]]",2 small electric 10 watt heaters,"[[15, 30], [82, 100], [231, 237], [363, 379], [631, 647]]"
cooking.stackexchange,24561,"What is the difference between ""vanilla"" and ""Mexican vanilla""","There are several distinct species of the vanilla orchid used for food flavouring, the most common being vanilla planifolia, vanilla tahitiensis and vanilla pompona (in that order).  Vanilla planifolia is usually marketed as ""Bourbon vanilla"", most of which is grown in Indonesia and Madagascar. The same species is also grown in Mexico, but they have decided to call it ""Mexican vanilla"", which is purely a marketing designation. At least the Mexicans claim their vanilla to be of superior quality, but the vanilla extracts sold in Mexico are often stretched with tonka bean extract, which has a similar taste and aroma to vanilla, but contains coumarin, which is banned as a food additive by the US Food & Drug Administration. Other countries have less strict regulations, often only regulating a maximum coumarin content.  ",0,,2,vanilla,[],Mexican vanilla,"[[372, 387]]"
yahoo,3674065,3674065,3674065,1,Neutral,2,A hunting rifle,[],an Xbox,[]
