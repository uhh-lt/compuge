sentence,label,predictions
"simple but more expensive [SEP] complicated but cheaper [SEP] Like all good questions, the answer depends. It depends on your application: Is it something you are likely going to be using periodically? A lot on some days of every month and very little the rest of the month? Once a year? Then a pay-as-you-go model would be 'nicer'.  It also depends on the sophistication of your users. Will they bother to do the mental arithmetic if you explain the PAYG model to them? Will they care?  How much will your users be spending? $5? $10? They might simple not care for that amount of money to optimize their experience and would probably rather go for something that is simple or easy.   Could the two models make a differences as large as $1000? Then you might find people are more than willing to have a look at the PAYG terms...  ",0,1
"Haskell AND Lisp [SEP] Haskell OR Lisp [SEP] I suggest learning both, Haskell first, then Common Lisp. My experience with Haskell was that the static typing seemed to be a restricting annoyance at first, but once I got used to it, I noticed that most of my type errors had logic errors hiding behind them. When you get to this point, and the next milestone, which is learning to think in types and define your own types as a means of expressing your solution, you'll be ready for Common Lisp.   With Common Lisp, you can add monads, currying, and everything you liked from Haskell, but you also get multiple inheritance like Frank Shearar mentioned, and generic functions with multiple dispatch, and an advanced exception handling system.   So why not just learn Common Lisp first? Coming from a procedural and OOP background, my experience has been that I didn't really understand functional programming until I had to use it exclusively. Once functional programming is comfortable, you can add the rest of the tools that Common Lisp makes available, and use whatever tool is best at the task at hand.   ",0,0
"to specialize in a single field I like [SEP] expand into other fields to broaden my horizons [SEP] Specialise if you enjoy it  As you are aware, if you specialise you are automatically incurring an opportunity cost in that you won't be immediably eligible for other technologies (e.g. Java programmers don't often immediately get accepted for compiler optimisation jobs). However, you have to balance this with your love of the complexity inherent in your chosen discipline.   You say you want to be an expert - well go ahead and take the time to learn your chosen discipline. We as a community always need new experts. However, my advice is to follow the pragmatic programmer recommendation of ""Learn a new language every year"". That way, while you're engaging in deep lexical analysis of algorithmic encoding, you can also be churning out a little iPhone app that interests you on the side. You never know, the cross pollenation of different paradigms may cause you some insight that will extend your specialisation into new areas.  ",0,0
"my solution [SEP] my boss's [SEP] Having been ""the boss"" and, as it turned out, actually better than my staff in all cases bar one - yes, he will be mad - or annoyed or frustrated and in any case, quite possibly, right in the first place.  If you're genuinely better than him then you should be able to understand his proposed solution and to see why yours is better and then to explain why.   But you state:    because his idea was not clear enough to me    In which case you need to go back and understand what he wants and why and whether - as has been the case both in me making suggestions to my staff and my staff proposing solutions to me - you or he has missed something. But don't assume that he's wrong and you're right unless and until you understand what he's asking for and whether he's covering something you haven't thought of (yet).    Oh and in the one case - he's a better programmer but he's not so good a couple of steps back from the problem where I'm better and we had great fun working together for that very reason.  ",0,1
"comfort [SEP] teamwork [SEP]   Get some chat software installed    Aside from that you may find some of the other developers find verbal communication breaks them out of the productive 'zone', regardless of how work related the talk is.  Also of note is that by having everyone in the same location, while work talk between Dev A and Dev B may be productive, it is most likely nothing but distracting noise to Dev C, Dev D, ...  ",0,0
"to load up a class with methods [SEP] extend member functionality in a local subclass [SEP] As always, these things are a matter of taste. In this case, I'm not crazy about the second solution for a few reasons:    There's always a small intellectual burden when defining classes and their relationships. It's not clear what benefit the nested class provides aside from partitioning code. The one class approach is simple and clear.  I'm not crazy about nested public classes. This implies I should be able to instantiate it outside of the SearchClass context which doesn't make a lot of sense.  Inheriting generic collections isn't my favorite. When I run into this class, it's not immediately clear that it's just a plain old ReadOnlyCollection<LocalFile>. I don't like the extra step of remembering what's behind the curtain.    Additionally, you may want some sort of static method to create your SearchClass. In your example, the class runs processing in the constructor which doesn't allow it to gracefully fail. The only option is to throw an exception. If you use a static method, you have the option of returning null on failure (or some other alternative failure scheme).  ",0,0
"Ph.D. adviser [SEP] Ph.D. advisor [SEP] According to the New Oxford American Dictionary (that I have by default on my Mac :)):     The spellings adviser and advisor are both correct. Adviser is more common, but advisor is also widely used, especially in North America. Adviser may be seen as less formal, while advisor often suggests an official position.    Since it's an official position, I'd rather go for Ph.D. advisor  ",0,1
"job experience [SEP] taking more courses [SEP] If the ""job experience provider"" would write a good recommendation for you afterwards (surely you must also deserve it), this may matter more.   Unless you skip some very basic course that your future company sees as very useful for your work. For example, if the future company focuses on C++ development, a course with good marks in C++ programming may matter more than work in some company that required HTML/CSS only.   I would say, take that job but think well which course deserves dropping most of all.  ",0,1
"recommendation letter from young professor I worked with [SEP] well-known professor I met in class [SEP] Your REU evidence that X wrote you a weak letter is not very strong.  I run an REU, and we accept less than 3% of our applicants.  Our target participants are either legendary at small colleges (best in a decade), or excellent at top universities (top 25% this year at Harvard).  Plenty of excellent people get turned away for essentially random reasons.  Maybe one of your letters was submitted late.  Maybe you forgot to list a course on your application that was considered essential that year.  Maybe I had a bad burrito for lunch and hated your essay when I read it.  Maybe there were just lots of really good applicants that year.  And yes, maybe professor X (or professor Z, the other letter-writer) said or implied something negative about you.  In addition, Professor Y offering to write on your behalf after a one month course says more about her than it does about you.  This does not guarantee that she will write a strong letter, and if she does she may write strong letters for a lot of people, which might be known by the people reading her letters.  Here is my advice.  Go to Professor Y and tell her that you did research with Professor X and published a paper together.  Then, ask her whether you should ask for X's recommendation or hers.  If she really feels that you are spectacular, she will insist on writing the letter herself.    ",2,0
"Popular proprietary program [SEP] obscure open source substitute [SEP] I think there are two kinds of reproducibility:    The ability of someone else to run your code and obtain the same output.  The ability of someone else to write their own code that does the same thing as yours based on your description and on examination of your code (reproduction from scratch).    The second kind of reproducibility is much more convincing, since the main point of scientific reproducibility is to verify correctness of the result.  For science that relies on code, it is usually impossible to include every detail of the code in the paper, so verification requires examination of the code.  If you use proprietary software, your code probably makes use of closed source code, and therefore it cannot be verified or reproduced from scratch.  If you use open source software, then all of the code that your code calls is probably open source, so it can all be verified or reproduced by someone else from scratch.  At present, it is probably true that the first kind of reproducibility is more achievable with proprietary, widely-used software.  I am optimistic that the current trend will lead to open-source software catching up in terms of wide use (consider SAGE, for example).    Addendum, in light of Epigrad's answer below, which I mainly agree with:  The problem with relying on closed-source code isn't that someone else won't know what that closed-source code is expected to do.  The problem is that if you have two closed-source implementations of the same algorithm and they give different results (trust me, they usually will), then you have no way of determining which (if either) is correct.  In other words, closed-source code would be fine for reproducibility if it were bug-free.  But it's not.  ",0,1
"choosing maths [SEP] stats PhD programme [SEP]   Provided one can find a supervisor who has the background and research interestes that would allow one to keep extending ones pure mathematical toolbox are there any major risks in going for a PhD in stats?    There's a small risk, but it can be managed.  The first issue is that you need to make the mathematical content of your work very clear, for example by publishing in journals that could be considered both math journals and statistics journals (e.g., IMS journals).  However, if you're interested in math departments I assume you'd be doing that anyway.  The slightly more subtle issue is how mathematicians view statisticians.  There's sometimes a mild prejudice that people in mathematical statistics are overly specialized and outside of the mainstream of mathematics.  For example, it's possible to get a Ph.D. in mathematical statistics while having considerably less breadth of mathematical background than would be considered acceptable for a math grad student.  (Of course, the flip side is that you are expected to know other things instead.)  There's sometimes a fear that a statistician would be unlikely to talk much with other math department members, or might be unwilling or unable to teach anything but statistics.  Plenty of statisticians have found jobs in math departments, so I don't want to be discouraging.  However, I'd recommend focusing on mathematical breadth.  For example, if you work with people in combinatorics or algebra, then it will be clear to everyone why a math department is a natural fit.  If you talk only to statisticians, it will be less clear.  It can still work out even then, but generally when the department either has a thriving statistics group or has decided they really need a statistician (and either way this cuts down on the flexibility of your job search).  ",0,0
"electric stoves [SEP] gas stoves [SEP] Can I convince you that electric is better? No, I can't, because I don't think it is. The issue I have is related to how long it takes to warm up (and cool down). Electric cook tops just don't respond quickly. Little too hot? Too bad, nothing you can do about it (in time to save a dish that's starting to burn anyway). Not hot enough? Check back in 2 or 3 minutes. I find this particularly irritating when a recipe requires varying heats while cooking. Sorry I don't have better news for you.  ",0,0
"temperature [SEP] humidity [SEP] You ned to get your hands on a computer fan (they are designed to run 24hrs a day).  I simply mounted one of these inside wall of my curing chamber (down low - as wet air drops), cut a hole in the wall of the fridge with a hole saw - which allows the fan to exhaust the moist air from within the curing chamber.  I also cut a similar sized hole at the top of the curing chamber on the opposite side which allows dry air to enter the chamber as the wet air is exhausted.  I have it rigged up to a cheap humidity controller I purchased off ebay, so when the controller detects high humidity (whatever you set it at), it exhausts the humid air.  ",0,0
"Gas [SEP] charcoal grille [SEP] There are many advantages to gas: better heat control, easier to clean, less potentially carcinogenic soot.  In my experience, the flavor that can be imparted by charcoal is superior, especially with good charcoal like that sold at Trader Joes.  However, I have not tried any of the wood slabs that are meant for use with grilling. Perhaps these have some effect on the difference.   ",0,2
"European white truffles [SEP] those from North America [SEP] I think the truffles that are exported are of better quality on average than what you'll find on the european market. I've never tried the american ones consciously (they're not imported to Europe as far as I know).  You could also take into account that the fresher the truffles are the better the quality, so in theory it would be better to eat american truffles in the USA and european truffles in Europe.  Given the mind boggling price differences and the supposed high quality of the stuff found in the forests in Oregon, you're likely going to be well off picking the local stuff.  ",0,0
"Realtime hardware/software [SEP] PC software/hardware [SEP] In general, the difference between ""normal"" and ""real-time"" is some sort of guarantee on the time it takes to complete job. In a normal system, usually you have no guarantees at all. Programs can get interrupted by other programs, the OS scheduler might not be completely fair, the processor does complicated things that alter the runtime between executions of the same code...  For most applications this does not matter.  Real-time systems are built such that one can guarantee that job X is always completed after at most Y seconds. This is important for example for the chip that decides when to deploy air bags--if that takes longer than expected, you're dead. To be able to give these guarantees you have to use special operating systems (or no operating system at all) that guarantees appropriate scheduling. It is also necessary to know a lot of details about the hardware you're using. Does your chip have a cache? What kind of replacement policy does it use? How many cycles does an addition take? Is that always the same number? What's the branch prediction algorithm? etc.  Many people confuse real-time systems with very powerful processors that can churn through data ""in real time"". But that's not (always) the case. The important thing is not how long it takes in absolute time, the important part is that it never takes longer than expected. There are trade-offs both in hard- and software between throughput (expected computation speed) and predictability (worst-case speed).  ",0,1
"microcoded [SEP] hardcoded architectures [SEP] The distinction between ""microcoded"" and ""hardcoded"" multi-cycle control units is a relatively small implementation detail.  The distinction was more important in the 1950s when people were inventing new implementation techniques for state machines.  In modern processor design there are much more important implementation distinctions, like how much pipelining and instruction overlap you are going to try to achieve, whether you are going to speculatively execute instructions, and whether you are going to try to schedule instructions out-of-order.  That said, here's the distinction:  We divide the design into datapath and control.  Here's the picture of the MIC-1 from Tanenbaum's Computer Organization book.  (The image is by Suyog.karnawat, from Wikimedia commons.)  Everything in the design is the datapath except the box in the upper right hand side that says ""Instruction decoder and control logic.""    The ""Insruction decoder and control logic"" box is a finite state machine.  The datapath in this example is very simple, with only a single bus, so even an instruction to add two registers and put the result in a third register takes multiple cycles (each of which corresponds to a state in the state machine.)  Each instruction goes through the following steps/states (each of which takes a cycle)    move the PC (Program Counter) to the MAR (Memory Address Register)  assert the controls to perform a load from the memory bus  eventually the memory will return the requested data (which corresponds to the next instruction) and put it in the MDR (Memory Data Register)  move the instruction from the MDR to the IR (Instruction Register).  At this point the instruction gets decoded and we figure out what to do with it.  In this case it's an add operation so we know we need to:  move Ra to the X register  put Rb on the bus (so that it will go to the B input of the ALU) assert the ALU control lines and Mux select appropriately to do an add operation, the result of which will get saved in register Y  Move Y to the Rc register, and then every non-branch instruction ends by incrementing the program counter:  Put the PC on the bus, set up the ALU to increment (Select the MUX to put constant 1 on the A input and set up the ALU to Add) so that PC+1 will get saved in the Y register  Move the Y register back to PC    So 9 state transitions to perform a simple add instruction.  So the ""Instruction decoder and control logic"" is a finite state machine with inputs from the IR register, outputs are the control signals, and there must be some flip-flops inside to represent the state of the state machine.  But there are lots and lots of ways to implement a state machine.    $\lceil \log_2 N \rceil$ flip-flops (where $N$ is the number of states) and a lot of combinational logic (to calculate the control signals and next state).  $N$ flip-flops with one-hot encoding and a bunch of combinational logic (usually less than with option A, but a lot.)  Somewhere between $\lceil \log_2 N \rceil$ and $N$ flip-flops with some combinational logic of intermediate complexity.    And the combinational logic for the control signals and next state functions can be implemented any number of ways:    As NAND gates reduced (using Quine-McCluskey, or whatever) to sum-of-products form.  As NAND gates reduced to some relatively efficient multiple-level circuit.  (This is probably what people think they mean when they talk about ""hardwired control."")  A design using Multiplexers for the combinational logic  A design using Programmable logic arrays (although I don't know if you can even buy these anymore.)  A design where the combinational logic is implemented with a ROM.  (This is probably what people think they mean when they talk about ""microcoded control."")  The ROM might be a EEPROM so that it is somewhat easier to modify if you find a bug.    ROMs can get really huge if you're not careful.  For example a ROM-based design would almost always use $\lceil \log_2 N \rceil$ flip-flops, because making the state wider also makes it sparser, which is sometimes good for gates but not for ROMs.  Also, you would only use the opcode bits as part of the address to the ROM, not the register specifiers and such.  Finally with ROMs you might choose to make the microcode word wide (the microcode word produces the entire set of bits for the control signals) or narrow (the microcode word chooses one of a smaller number of possible control signal combinations and then there's a second ROM that translates from that smaller number to the actual required control signals.  So the distinction between ""hardcoded"" and ""microcoded"" is only one very small decision that needs to be made among hundreds of design decisions.  And it's certainly not the most important one.  (For example, you could choose to put a second bus on the datapath, which would enable you to perform some instructions with a lot less cycles.)  ",1,1
"Amdahl's law [SEP] gustafson's law [SEP] I finally found the solution and I want to share it with you,  The solution is that you have to use Amdahl's Law.  Iff 30% of time is sequential you should use Gustafson's Law.  ",0,1
"a LBA with stack [SEP] a LBA without [SEP] Theorem The following are equivalent.    $L$ is accepted by a deterministic LBA with stack  $L$ is accepted by a nondeterministic LBA with stack  $L$ is in $\operatorname{DTIME}(c^n)$ for some constant $c$.    So the computational power of a LBA with stack for decision problems is well understood. The exponential runtime limits the usefulness of this knowledge in practice. But the notion of an LBA with stack can be generalized to an $S(n)$ auxiliary pushdown automaton ($S(n)$-AuxPDA). It consists of    a read-only input tape, surrounded by endmarkers,  a finite state control,  a read-write storage tape of length $S(n)$, where $n$ is the length of the input string, and  a stack    In ""Hopcroft/Ullman (1979) Introduction to Automata Theory, Languages, and Computation (1st ed.) we find:  Theorem 14.1 The following are equivalent for $S(n)\geq\log n$.    $L$ is accepted by a deterministic $S(n)$-AuxPDA  $L$ is accepted by a nondeterministic $S(n)$-AuxPDA  $L$ is in $\operatorname{DTIME}(c^{S(n)})$ for some constant $c$.    with the surprising:  Corollary $L$ is in $\mathsf P$ if and only if $L$ is accepted by a $\log n$-AuxPDA.  The proof consists of three parts: (1) If L is accepted by a nondeterministic $S(n)$-AuxPDA with $S(n)\geq \log n$, then $L$ is in $\operatorname{DTIME}(c^{S(n)})$ for some constant $c$. (2) If $L$ is in $\operatorname{DTIME}(T(n))$, then $L$ is accepted in time $T^4(n)$ by a deterministic one-tape TM with a very simple forward-backward head scan pattern (independent of the input). (3) If $L$ is accepted in time $T(n)$ by a deterministic one-tape TM with a very simple forward-backward head scan pattern (independent of the input), then $L$ is accepted by a deterministic $\log T(n)$-AuxPDA.  Part (1) is basically a rigorous proof that the ""halting problem is decidable"", where the number of operations was counted thoroughly. Part (2) is the creative idea that prepares the stage for part (3). Part (3) uses the auxiliary storage for tracking the time step, which allows to reconstruct the head position due to the very simple forward-backward head scan pattern, and the stack for recursive backtracking. (So this proof also contains the two observations which I wanted to make more rigorous. This answer is already long enough anyway, so I won't go into more detail here.)    This leads to the following answer for the initial question Is a LBA with stack more powerful than a LBA without?: The question is equivalent to a well know open problem, and the expectation is that it is indeed more powerful.  ",0,0
"Item lookaheads [SEP] dot lookaheads [SEP] I think you are mistaken, they are needed but the dot look-ahead there is so obvious that you have not paid attention to the fact it is used.  First, let's remark that there are three kinds of items:    those in which the dot is just before a non-terminal. They never participate in an ambiguous situation: when a non-terminal has been produced, it is shifted.  those in which the dot is at the end. They have the item look-ahead and the dot look-ahead which are equal (what may follow the dot is what may follow the produced non-terminal when the production is reduced as the dot is at the end of the item).  those in which the dot is just before a terminal.  They have the item look-ahead and the dot look-ahead which are different.  The item look-ahead is what may follow the non-terminal when the production is reduced, the dot look-ahead start by the terminal which follow the dot and continue with what can be generated after that terminal.    Now, with a look-ahead of 1 or less, the dot look-ahead is trivial: either it is the item look-ahead or the terminal which is just after the dot and that's what you are using to solve a conflict (or decide that there is no way with the limited look-ahead you have).  With a look-ahead of 2 or more, you have to compute the dot look-head or you may not know if you have to shift or to reduce as in the example provided by Grune and Jacobs:  $$\begin{array}{l}  S \rightarrow Aa \; | \; Bb \;| \;Cec \;|\; Ded \\  A \rightarrow qE \\  B \rightarrow qE \\  C \rightarrow q \\  D \rightarrow q \\  E \rightarrow e \\  \end{array}$$  which has the state:  $$\begin{array}{lcc}  &\textrm{item look-ahead}&\textrm{dot look-ahead}\\  A \rightarrow q \cdot E & a\#  & ea\\  B \rightarrow q \cdot E & b \# & eb\\  C \rightarrow q \cdot   & ec   & ec\\  D \rightarrow q \cdot   & ed   & ed\\  E \rightarrow \cdot e   & a \# & ea\\  E \rightarrow \cdot e   & b \# & eb\\  \end{array}$$  ",1,0
"Organic [SEP] Traditional lawn fertilizer [SEP] This is a difficult one if you have children. First, let's deal with the two fertilizers you've mentioned - the first one, non organic, has a much higher Nitrogen level, as you've noticed, nearly 3 times the level of the organic one, and is much more suitable for use in Fall. Because its an autumn formulation, it will take longer to break down than the organic one you have, which does not seem to be specifically for autumn use. It also means you need less of it so its usually spread more thinly, and its the one I would choose in these circumstances.  The usual advice where children will be playing on grass after treatment is to use a liquid which, once its dry, is no trouble to either pets or children, and this is particularly useful in summer. However, because its Fall, you do actually need a product in granular or dry formulation because the idea is it breaks down gradually, over a much longer period of time than a liquid would do, which is more or less instant. Regarding the difference between them, in theory, either product could burn skin if the person is in prolonged contact and is particularly sensitive, but I imagine your children won't be lying for hours on the grass with bare skin.   Although the idea of an organic product seems better, in practice, bonemeal can produce dust, attracts various animals who think its something interesting to eat, and isn't any safer from a skin point of view when compared with the non organic product. So, on balance, I'd recommend the non organic version, carefully spread at exactly the right rate and no more, following the instructions to the letter. You should exclude children and pets whilst the treatment is carried out, and it would be better to keep them off the area until its been well watered in over a couple of days or so. I know the instructions say no need to water in, but if your sense of smell is good, after such a treatment is spread, the first couple of times it gets wet you can actually smell the treatment in the air, so I'd water it in regardless.  I do have one caveat though - I would check with Scott's first before using anything, to make sure that any product you choose is suitable for a lawn which has only been down a couple of months. If its like Scotts products here in the UK, there should be a contact phone number on the packaging for queries/customer service. It would also be interesting to find out what product, and its NPK ratio, the installer would use himself...  ",0,0
"rye [SEP] oats [SEP] I think the answer depends on more factors than what you've provided in the question -- especially your specific goals, but I can lay out the considerations I would make in choosing between the two.  According to a UVM factsheet, rye can add 5 tons of organic matter per acre. I like rye because the seed is cheap, it germinates quickly and reliably, you can start it late, it catches reliably, it always survives the winter, and it goes like gangbusters when the snow melts in spring. The only real downsides I can think of are (a) it is so vigorous it can be challenging to till under in the spring, and (b) it is allelopathic so you can't sow seeds for a couple of weeks after tilling.  I have less experience with oats -- and none as a winter cover crop, only spring seeded. According to a SARE document, oats can add 1-2 tons per acre with fall seeding. Locally for me, oat seed is less available than rye. Also for me, oats will reliably winter kill, which means it would need to be started earlier in the fall -- but it also would be easier to incorporate in spring. Oats also have allelopathic properties; I think winterkilled oats won't cause problems in the spring. Because of the allelopathy, you should wait 3 weeks (according to SARE) before planting after tilling the oats under.  Either cover crop makes a good nitrogen trap -- ""soaking up"" excess nitrogen left in the soil following the previous main crop and storing it for the following season. They both do a good job of smothering weeds.  The SARE document on oats linked above mentions in ""Comparative Notes"" at the bottom:    [Compared to Oats,] Rye grows more in fall and early spring, absorbs more N and matures faster, but is harder to establish, to kill and to till than oats.     So I guess if you've got a good rototiller and are willing to work at tilling it under in the spring, rye would be my recommendation.  ",0,2
to plant a single multigrafted tree [SEP] multiple trees in one hole [SEP] The question is where you want the competition for resources to take place. On multi grafted trees some of the grafts may grow faster due to their position or vigour. I have seen trees like this where one of the grafts fails but you are still getting fruit from the others.  By planting three trees in one hole you are putting the competition for nutrients and water at the root level.  If one fails you still have the others.  These are solutions for gardeners with limited space who have the time and interest to work with trees that are higher maintenance.    If you have lots of space plant one tree of each type at the usual spacing.    If space is at a premium and you don't mind the cost of buying three plants then plant them all in the same planting hole.    If you don't have space or enough money to buy three trees then try one multi graft.    Edit: The advantages of multi graft or multi stem apple trees is that the different types can pollinate each other. If you only have room for one tree or one clump and there are no other apple trees around this is real advantage.  Both types of grafted trees require more skill and time to prune.  You have to ensure that all parts are getting enough light.  A clump of different apple types could get a bit tricky to prune but nothing out of the ordinary.  I don't think the yield of fruit or quality will be any different between the two types so it comes down to space available and price.  ,1,1
"worm castings [SEP] worm casting tea [SEP] If you're talking about leachate (worm castings steeped in water), some gardeners say that this tea will have approximately the same benefit to plant growth as the pure composted worm castings themselves.   But studies have shown that, in the long run, using the castings directly in the soil will produce better plant growth, often far better, than does leachate obtained by steeping the castings in water. Some of those studies were carried out by Ohio State University, Mississippi State University, Colorado State University, Cornell and others. (citation needed)  But if your main objective is speed of results, then the teas solution will find their way into the plant’s system more quickly than waiting for the dried casting to be ""watered in"" over time. Castings tea can also be used as a foliar spray/wash for even faster results.  But ""tea"" production methods vary — so consider, if your tea is ""aerobically brewed"", you're also increasing the diversity of beneficial microbes and adding to the soil the environment needed to keep the beneficial organisms alive and multiplying in your soil; more so than can be typically obtained from the castings themselves.  The best solution to this argument is to do both — to receive the full benefits of worm casting, apply it directly to the soil as both as an admendment and an occasional top dressing around the base of the plants. Then give them a good drink of tea however often as you see fit — weekly would be ideal, depending on your supply — neither the tea nor the castings will burn your plants.   ",1,0
"XP mode in Windows 7 [SEP] a regular virtual machine [SEP] Edit: Is it better? Hard to say, it's rather subjective. Does it work? Yes.  Windows 7 has the Microsoft Virtual PC XP Mode      Windows Virtual PC requires a CPU with    the Intel™ Virtualization Technology    or AMD-V® feature turned on. This    feature must be enabled in the system    BIOS. For details on how to enable,    visit the Configure BIOS page or check    with your computer manufacturer.    The great thing is that if you download the Windows XP Mode you only have to fill in a password and the system is good to go (fully licensed as well, though you need a valid Windows 7 or RC installation). I'm not really into VMs, but I know this one has USB support out of the box.   Plus:     Publish and launch applications installed on virtual Windows XP directly from the Windows 7 desktop, as if they were installed on the Windows 7 host itself.  Cut and paste between your Windows 7 host and any virtual machine.  Access your Windows 7 Known Folders: My Documents, Pictures, Desktop, Music, and Video, from inside the virtual Windows environment, such as Windows XP Mode.    Worked very well for me!  Copied from the Running XP as a virtual machine - suggestions wanted question.  ",0,0
"RSA [SEP] DSA [SEP] The GPG maintainers are thinking of changing the default to RSA (source: Dealing with weakness in SHA-1 [LWN.net]). So, it seems they think RSA is currently the better option (and they should know more about it than you or me).  ",0,1
"Vista [SEP] Windows 7 [SEP] According to this blog post by Mike Swanson the following is Microsoft's official statement in this regard. I recall being told about this during Tech-Ed last year as well.    Thanks for your interest in Microsoft Hardware products.    The Fingerprint Reader is no longer being manufactured by Microsoft but we recognize it may still be available from retailers and resellers.  The product runs on 32-bit versions of Windows XP and Windows Vista. Microsoft will not be releasing any updates for the product to run on 64-bit versions of Windows XP or Windows Vista. The product is not supported on Windows 7 (32-bit or 64-bit).  To ensure this is clear to our customers, the product will not install on Windows 7 (the user is warned that the application will not run). If you currently use the Fingerprint Reader and are unable to use your product with 64-bit versions of Windows XP or Windows Vista or the Windows 7 beta release, please visit the following Web site for assistance:     Source Microsoft Support.  ",0,0
"Windows Vista/Windows 7 [SEP] Windows Vista/Ubuntu [SEP] To set up connection sharing between your two computers:    Connect the two computers' RJ-45's with a cross-over Ethernet cable  Open the network and sharing center, find your network connection, right click on it and go to properties  In the ""Advanced"" tab, check the box to Allow other users to connect through this computer..  Select the networks you would like to share with and you should be on your way.    I'm sorry if its not exact, I'm doing this from memory on an XP machine.  I have setup connection sharing on my laptop over WiFi so I can connect to the internet on my iPod Touch through my laptop's EDGE network card.  pretty nice  ",2,0
"VFAT [SEP] ext3 [SEP] Definitely ext3/4 over VFAT.      Ext3/4 are journaling file systems, which means no fragmentation issues.    Read/writes will be significantly faster with Ext.    VFAT has a 4 GB maximum file-size, which can come back to haunt you when you need to store a large file on it after you already have it loaded up with data.    ",0,2
"in my home country [SEP] in the destination country [SEP] This varies very much depending on your country of origin and your destination.  Best exchange rate mean lowest spread, but keep in mind, that some banks apart of the spread, also charge extra commissions.   Keeping that in mind, there are some general tendencies. Exchange rates, from best, to worst:    electronic transactions (i.e. transactions made directly with the credit card). These usually have the lowest spread (or none at all for major currencies) and typically using major credit cards there is no extra commission. This is the preferred option when you're traveling in developed countries.   cash withdrawal (usually ATM, note however, that on rare occasions when paying with card, it'll be actually charged as cash withdrawal). This usually has decent spread, some banks charge commissions, some don't. Your Mileage May Vary. Check availability of ATMs accepting your cards beforehand. In some exotic countries you'll only get them at main airport. (btw. some banks/ATM operators charge fixed or minimum fee per transaction, so it's better to make one bigger withdrawal, than a number of smaller ones).   money exchange at your bank, i.e. withdrawing money from your account in other currency. Problem with that is, that it's impractical to carry around large quantities of cash when you're traveling.   local money exchange, least favorable, but in really exotic countries that might be your only option. Especially when you're in situation, that you've run out of local currency and you're not anywhere close to civilization.     The exception are countries, where the money is not fully and freely interchangeable. In that case most often black-market exchange will give you much more than the official ones at banks. However, using black-market you're exposing yourself to fraud.   ",1,1
"at home [SEP] when in Ecuador [SEP] First off, it's never going to be 'cheap', unfortunately.  There are a few reasons for this.  (*these prices correct as of November 2010)  The Base  If you fly, there's no way around the fixed fare of USD$420 to fly return from Quito or Guayaquil.  Then there's the $100 National Park entrance fee.  And another $10 for taxes.  So we'll ignore all that and just call that the 'base', and focus on the rest being cheaper...  A lot seem to focus on the cruise you'll ""need"" to do.  That's not always the case.  From this site:    The airport beside Santa Cruz is on a small nearby island in the north    side called Baltera, and from here you must get a 50 cent ferry    across, then a $3 bus down south to the town. Once in town, it's very    easy to set yourself up with a $20 private hotel room with A/C and TV,    and even Wifi! Even out here in the middle of the Pacific ocean you    remain connected to your Facebook Wall posts! (or GlobeNotes    obviously!)  The volcanic island of Isabella is about 2 hours by boat from Santa    Cruz, and boats leave daily for only $25-30. Bear in mind that boats    only leave Santa Cruz at 2pm, and then leave Isabella only at 6am, so    an overnight is required.  Many people have told me that, with these two islands (Isabella alone    being 52% of the total Galapagos landmass) you can actually see MOST    of the wildlife that you see on the far off islands that require    cruises, the main exception being red-footed boobies and a few other    bird species which are only found on the remote islands.    Giant-Tortoise, Sea lions, Penguins, and TONS of Iguana. You name it..    you can see them all within about 15 min boat ride from the coast of    either Isabella or Santa Cruz. Score!    It's worth noting that according to Wikitravel:    If you are planning to visit the Galapagos Islands, Guayaquil is the    cheapest place to take a flight from. There are three air carriers    that will take you across the Galapagos Islands as well as the    Ecuadorean mainland, LAN-ECUADOR 3, Aerogal 4 and TAME [5] have    non stop daily flights, departing from Guayaquil is cheaper than    leaving from Quito(Is closer and most of the Quito flights do make an    stop at Guayaquil's airport for Refueling and picking up passengers.  International departure airport tax was just recently increased in    Guayaquil and is exactly $29.75 (January 2010). About 15$ cheaper than    Quito airport.    Now, once you're in Quito or Guayaquil, there are two sides to consider with tours.  One - the travel agents will often claim the  best tours are gone months in advance.  Certainly some will be, but I've NEVER hard of a person disappointed with their tour, no matter when they booked it.  However, I have heard of some FANTASTIC deals bought on the ground in Quito.  When staying at the Secret Garden Hostel in Quito, the Carpedm tour company downstairs was very closely linked with the hostel, offering free city tours and salsa lessons and the like.  In addition, they were able to advise people about Galapagos options.  I heard of people getting final berths on 5-star boats for the equivalent of paying 2 days for 7, others getting discounted meals, and they were all booked in Quito or Guayaquil.  So in conclusion, it's hard to say for certain whether things are cheaper on the ground, but from anecdotal opinions, my experience, and the very reason tour companies exist in these cities, is that it is possible to beat prices when on the ground.  And of course, this will flex with seasonal trends - more likely to get bargains in low season.    ",0,1
"Self-drive [SEP] guided safari [SEP] I can show you my experience in guided and self-drive safaris. That's my experience and it could be different depending on the parks, the weather and other conditions. My experience is limited to Uganda, Kenya and Tanzania, which are on the East side of Africa, and Senegal, which is at the north; and there are not too many game parks. I have in mind a travel to Namibia-Botswana; according my research (asking people that have made safaris in east Africa and south Africa), all African parks are similar, except Kenyan ones (which are very crowded).  Ok, after this preamble, this is my experience:  When you buy a guided tour you have 3 options:    Buy an exclusive safari package in a big 4x4 car (very expensive option)  Buy a ""normal"" safari package (may be in a 4x4 or in a safari van)  Buy a budget safari package (sharing a safari van with more people)    In these videos you can see what a ""safari van"" is like inside and outside (sorry, the video is in Spanish). As you can imagine, it is not the most comfortable option.    If you are thinking of an ""exclusive safari,"" I think this is a great option, but if you don't want to waste a lot of money, or if you would like to feel the (partial) adventure of driving surrounded by game, I recommend you rent a small 4x4. It is better than a safari package. Why?    Drivers have to rest, you do not. As you know, drivers are workers and they have a timetable. They are working, not relaxing. Also, they have gone hundreds of times to the park, have seen thousands elephants, and are not as excited as you when they see a leopard. This means they probably won't make the most of the day as you will do.  Drivers tend to protect the car. In Africa a car is a luxury, and it is very expensive to repair, so drivers rarely try to do things like cross a river or go up a hill. If the driver owns a van, that likelihood of avoiding rough terrain is increased.  Drivers tend to save fuel. There is a speed limit in the parks of about 30-40 kilometers per hour, theoretically. Hired drivers typically won't go more than about 20 km/h; self-drivers usually go 50 km/h. This is because you pay in advance, so they will try to get you to see all animals, but in a limited part of the parks. If you pay an extra fee, a driver won't have any problem to take you where you want.  Driving is fun! And driving in Africa is double-fun! And don't worry about getting stranded; you are in a touristy area. Sooner or later somebody will come to help you. We always could use our mobile phones, and we had really difficulties staying alone for more than 30 minutes anyway.    If you can read Spanish, I point you to some interesting articles in my blog (like this and this).  A common criticism against self-driving is that the driver-guides know where the animals are. That's not my experience. The animals are free to move, and the only advantage a driver has is their knowledge about the areas where animals ""normally"" are. For instance, you never expect to find a leopard in the middle of the savannah, but rather, in a tree. You can adquire this knowledge, believe me, in less than a week: animals are spectacular, but predictable. A common-sense rule that you have to follow (and car drivers do) is to go anywhere where you see a lot of cars stopped. Also, you can ask other drivers (self-drivers or not) about what they have found. Finding animals is not so difficult, except for some of the rare animals (rhinos) or those with uncommon behaviours (tree-climbing lions).  ",0,0
"Australia [SEP] a nearby country [SEP] Depends(tm).  For Star Alliance RTW tickets, which are probably the single most popular choice (but not necessarily the cheapest), prices do vary considerably by country, although this is largely due to currency fluctuations and you need to do a bit of legwork to figure out how much you can actually save.  Here's a thread discussing the prices, including a handy spreadsheet showing the prices equalized into US dollars as of Jan 2011:  [REF]    So a year ago, a YRWSPCL (the cheapest option) would have cost you US$3282 in Australia, but US$2646 from Malawi.  Problem is, it'll cost you a lot more than $600 to get to Malawi and back, and as far as I can see none of the countries you can cheaply reach from Oz have much of an edge: NZ is only marginally cheaper at US$3059 and eg. Malaysia, Singapore and Thailand are all more expensive.  Edit: Here's a nifty tool that shows current prices for a crapload of RTW fares from points around the world:  [REF]  ",0,0
"Homebase in Phoenix [SEP] Scottsdale [SEP] It depends on whether you want relatively flat trails or mountain biking, as you didn't say.  The Scottsdale Green Belt is a paved trail several miles in length that begins just north of Shea Boulevard and ends in Tempe.  There are only a few places on the trail that require crossing a street, as there are lots of tunnels that pass below busy streets.  There would be dozens of hotels located along this path, ranging from simple motel-like accommodations to pricey resorts.  Here is a map of the path and various connections.  For mountain biking, I recommend South Mountain in Phoenix which is the largest city park in the world.  There are more than 10 different trails in South Mountain ranging from 1 mile in length to 14 miles (58 miles total).  Difficulty ranges from moderate to difficult.  There are also several hotels/resorts in the South Mountain area.  You could also check for accommodations in the Ahwatukee area of Phoenix just south of the mountain.  Note that it is just starting to warm up here -- late April and it was over 100 °F (38 °C) here today (I live in Gilbert, just SE of Phoenix).  The forecast for next week is mostly high 90's to low 100's °F (35-40 °C); it's just going to gradually get hotter.  So take LOTS of water with you.  ",1,1
"VIP [SEP] normal sleeper-bus [SEP] I was in SEA at the beginning of the year. Firstly, good on you for not flying south. It's a very expensive and unnecessary flight for a trip that can very easily be made on land.  When it comes to VIP buses in South East Asia, there isn't usually a big difference, but it does depend on the price. Sometimes a VIP bus may give you better seating, A/C, only other tourists/foreigners on the bus and/or it could be faster, as some of the normal sleepers pick up a lot of locals along the way who sit in the aisles.  However, that being said, the VIP buses can be exactly the same. With the trip from Vientiance to Pakse I would probably just get the normal sleeper-bus unless there is a major price difference, which, in that case, probably means the normal is full of locals and will be a less comfortable ride.  ",0,1
"to making French toast with egg alternatives [SEP] egg whites [SEP] There's not a lot of difference between egg substitute (e.g., Egg Beaters), and egg whites. So the options you mention, they are roughly equivalent to one another.  The obvious thing both of these substitutes are missing is the yolk. An egg yolk adds a LOT of flavor to this sort of cooked egg dish.   In a french toast, whereas egg white is soaked up by the bread and creates a fairly unique texture, the egg yolk is the key to the flavor and it is what makes it rich. I think the egg white french toast is doable[1] but I don't think it will taste wonderful.  In other news, may I quote Thomas Keller in relation to a recipe of cheesecake (again, paraphrased by me) - If you are worried about the fat, have a smaller portion, and don't do my recipe with low fat alternatives.   I think it applies to cholesterol too.   [1] I certainly haven't tried this since I'm already way too fat to eat any french toast anyways...   ",0,0
"Pie [SEP] Tart [SEP] Generally speaking, a pie refers to a pastry covered with a lid, like a typical apple pie. A tart is open topped, like a quiche, or a French tartes aux pommes.  However, there are exceptions to this: many pies will be open topped too. Usually this is a matter of depth: the deeper it is, the more likely it is to be called a pie rather than a tart.  Regional variations also apply.  ",2,2
"to using a griddle [SEP] a cast-iron skillet [SEP] Yes, you don't have the edge of a pan in the way when going to flip things, but it also means that you don't have a mass of metal there to add as a heat sink, which can help dramatically when pre-heating your pans, as they'll be evenly heated across their bottom more quickly (at least, compared to something of the same material, such as a cast iron skillet)  More importantly, in my opinion, is that without the sides, you don't hold in moist air, so when cooking things like hash browns, you can get a better crust on 'em without steaming them.  ",0,0
"Mongolian Grill [SEP] Hibachi [SEP] Hibachi are technically a traditional Japanese device used for heating one's house.  They are a basic, heat-proof container that holds charcoal.    The cooking devices that many people refer to as ""hibachi"" are what the Japanese would call ""shichirin"":    I'm guessing that the term ""hibachi"" was popularized in North America because ""shichirin"" can be hard to pronounce for Anglophones.  Somewhere along the way, primarily in North America, the term ""hibachi"" also started to be used to refer to teppanyaki:    I'm not sure when or why this started; perhaps it has something to do with the fact that Banihana confusingly refers to their teppanyaki restaurants as ""hibachi-style"".  Among these, teppanyaki is most similar to Mongolian barbecue, in which meat is cooked on large, round, cast iron griddles:    (Images taken from Wikipedia.)  If you were to actually go to a Japanese restaurant and cook your own food over a shichirin, it would likely be referred to as ""yakiniku"", which is believed to have some origins in Korean barbecue.  Whereas teppanyaki has been a traditional Japanese cooking method for a long time, ""Mongolian barbecue"" was developed in the 1970s in Taipei, Taiwan.  During that time, Japanese Teppanyaki was very popular in Taiwan, so many people speculate that was actually the inspiration for Mongolian barbecue.  There are also some similarities between the Japanese dish ""jingisukan"" and Mongolian barbecue, however, jingisukan predates Mongolian barbecue.  ",2,2
"be stored in the fridge [SEP] the freezer [SEP] This is going to depend on how long you want to keep it for. If you're serving it soon (say, same day, maybe next), then don't refrigerate it at all, though some people seem to think it gives better flavor to refrigerate overnight.  If you've used e.g., buttercream frosting, you'll need to refrigerate or freeze it, unless you're serving immediately after frosting. Some fillings may also require refrigeration.  If you're storing short term, up to maybe a week, refrigerate it.  If you're going to be storing it long-term (more than a few days, up to three months), you'll need to tightly wrap it once its cooled, and freeze it. After more than 3–4 months, flavor will be lost, but it'll still be safe to eat, as long as its stayed at 0°F/-17°C or below.  ",1,0
"kosher chicken [SEP] brined chicken [SEP] I explained several of the differences in my answer to Brining a kosher bird and also discussed some issues relating to salt consistency in a much earlier answer to Chicken comes out salty... occasionally.  To make a long story short, kashering is a long process with many steps, but the part you're concerned with is similar to the ""dry brining"" technique some people are fond of using for Thanksgiving turkeys. The meat is salted directly - no water is used - and it is left to rest for a much shorter period, about 1 hour, before finally being rinsed and packed.  Kosher meat isn't ""juicy"" like brined meat at all; in fact, all other things being equal, it will come out much drier and tougher than unkosher meat, because in the process of drawing out blood (the reason for salting in kashering), a good deal of moisture is drawn out as well. Brining adds moisture to the tune of about 10%; kashering takes moisture away by a similar amount.  Aside from drying out, the only culinary differences you'll find with kosher birds (or other meat) are (a) less blood, uric acid, and other ""undesirable"" components, and (b) they are naturally saltier than unkosher birds. However, because the kashering process has nothing to do with flavouring, you can't expect any kind of consistency, and it's not uncommon to find that some parts are much saltier than other parts coming from the same bird.  Kosher birds are going to absorb roughly the same amount of salt and water from a brine. The difference is that because they've already been salted, you run the risk of over-brining to the point of being inedibly salty. That's the whole story.  If you want flavourful and moist then get a regular bird and brine it. If you care more about flavour and want to save some time (at a significant cost premium) then go ahead and use a kosher bird, no brine. You can brine a kosher bird (see first link in this answer) but you're going to have to do a little experimenting to get it right - and if you're going to brine anyway, then why bother spending the extra money on kosher meat?  Don't pay any mind to the oft-repeated claims that kosher birds are ""pre-brined"" or similar nonsense. The inherent saltiness of a kosher bird is significant but also incidental and thus inherently unreliable.  (Please also note: Assuming this is a follow-up to your previous question, none of this is going to make the slightest bit of difference if you're just going to plop the chicken parts into a pot of boiling or poaching water. If you're making broth, then you flavour the broth, not the meat.)  ",0,1
"grape [SEP] cherry tomatoes [SEP] The difference in their name is - not surprisingly - because of their form. Cherry tomatoes are round, while grape tomatoes are more oblong. Wikipedia mentions that grape tomatoes are 'sweet as cherry tomatoes', so not much difference in flavour according to this. Perhaps grape tomatoes are more similar to small plum tomatoes.  This site claims grape tomatoes to be sweeter, having a thicker skin and a lower water content than cherry tomatoes. Interestingly, it also says that grape tomatoes are a cross between cherry tomatoes and other tomatoes.  The claims of the second site are in agreement with this site (""grape tomatoes have thicker skin, lower water content and intense sweetness""). It also states ""a grape tomato is half the size of a cherry tomato"", so perhaps they are smaller. Due to the lower water content, grape tomatoes have less chance of 'squirting' when being bitten into.  ",1,1
"caramelized onions [SEP] crispy onions [SEP] Both crispy and caramelized onions are cooked for a long time, and will be very brown.  However, they are cooked slightly differently.  Caramelized onions are usually cross-cut on the onion to release its moisture, and then cooked over very low heat in a crowded pan, stirring infrequently, so that they gradually release their sugars and liquid and it turns to caramel.  Depending on the onions and desired result, you may even cover them, an add a little liquid and/or sugar.  The end result is very soft and very sweet.  Arabic-style crispy onions are cut pole-to-pole in order to avoid rupturing cells in the onions.  They are then fried over medium heat in an uncrowded pan, stirring regularly.  This lets them dry out and become brown and crispy, even burning on thin ends.  These onions should be a mix of crispy and chewy, and more savory than sweet.   ",1,0
"good quality chocolate [SEP] cheap chocolate [SEP] The short answer is that good quality chocolate has a high proportion of cocoa constituents with little or no substitution.  What to look for:    High cocoa solids content. Chocolate with less than 50% cocoa solids will have little real chocolate taste and those with more than 70% will have a much more complex and fine chocolate taste.  Cocoa butter content. Chocolate makers tend to substitute vegetable oil in place of cocoa butter to reduce costs. Cocoa butter prices have increased in recent years due to demand in the cosmetics industry.  Smooth texture. This comes from the cocoa spending a longer period being crushed in the concher.    Conversely, these are indications of a poor quality chocolate:    Low proportion of cocoa solids  Use of vegetable oil instead of cocoa butter    Chocolates with low cocoa solids content, such as milk chocolate, are usually inappropriate for baking due to their proportionally low chocolate flavor. Baking cocoa powder itself is in fact just another word for cocoa solids, and this is why it is favored when baking: it is the pure chocolate flavor.  The milk constituents of milk chocolate may also go rancid, giving the chocolate a'bad olive oil' taste as described here.    In this image the cocoa solids go up from 0% in white chocolate to a maximum of 100% in the highest of quality chocolates.  As white chocolate contains no cocoa solids, look instead for cocoa butter and vanilla in place of vegetable oils and vanilla extract.  ",0,1
"baking bread in a loaf pan [SEP] in a Dutch oven [SEP] There's two important distinctions:    The dutch oven is preheated, so the oven conveys a lot of heat, rather quickly.  This causes some steam to be pretty much immediately made.  The dutch oven is covered.  This traps the steam previously made.  This is trying to replicate steam injection and the goal of most methods that cover the loaf.    Steam keeps the crust from hardening and promotes better oven spring and crisper crust.  The steam basically allows the bread to 'swell' more in the oven.  Steam also gelatinizes the starches in the crust and formes a better 'shine' and 'crisp' on the finished product.  The dutch oven is then uncovered after awhile and the crust hardens.  ",0,0
"pizza sauce [SEP] spaghetti sauce [SEP] Red pizza sauce is often (but not always) two things:    Thicker.  Thinner sauce will tend to run in the oven and also steam the pizza crust as it cooks - if loaded with toppings, otherwise thin is fine.  Depending on the crust, the heat of the oven, the toppings above sauce, and how watery it is, this may not be needed.  If you've just got some crushed tomatoes and a few bits of cheese in a super hot oven - the sauce should be fine without reducing beforehand.  If you've loaded up a bucket of sauce and a pound of cheese, precook and reduce the sauce.  It's often simpler.  Many pasta dishes like spaghetti highlight the sauce and hours of simmering happen for the sauce to bring it to perfection.  They're all about the sauce.  Pizza is really about the crust and what highlights it.  Many of the best pizzas are simply topped.  Crushed san marzano tomatoes (sometimes) reduced with a hint of salt is often all I do, and franky, it's enough. I'm not talking about the jarred varieties here, but what you might cook at home.  Jars in the store, the main difference is just how thick it is.    ",2,1
"Milk Chocolate [SEP] Dark Chocolate [SEP] Short answer:  yes, milk chocolate differs from chocolate by the milk its manufacture.  Real chocolate (as opposed to many other confections) is made from chocolate liquer, which despite the name, is not alchoholic, or even liquid at room temperature.  The fruit of the theobroma cacao tree contains seeds, known as beans.  The harvested fruits are allowed to ferment, bringing many flavor and chemical changes to the beans, as well as removing the pulpy fruit.   The beans are then husked for the seeds inside, the nibs.  The nibs are the first true chocolate product, although they are not sweet.  The nibs are roasted, and then ground.  This is chocolate liquer, a solid colloid of cocoa fat and solid particles.  It would be solid at room temperature, but the grinding process melts it.  The cocoa liquer can be pressed to separate out the cocoa butter (as for use in the cosmetics industry), leaving cocoa powder, but that is not the point of your question.  Instead, to manufacture chocolate, the liquer is conched, a mechanical process that makes the suspended particles much smaller, part of what gives chocolate its smooth mouthfeel.   Various products can be made from chocolate liquer, or cocoa butter, including:    baking chocolate - essentially, just chocolate liquer, hardened and tempereded.  May or may not be fully conched, so may not be as smooth as chocolate intended for eating.  chocolate or dark chocolate - Chocolate liquer, possibly extra cocoa butter, and sugar.  Minor optional ingredients often included are vanilla or other flavorings, and lecithen, an emulsifier.  milk chocolate - Same as dark chocolate, with the addition of condensed milk or milk solids, depending on whether it is made via the Swiss method or the Hershey method  white chocolate - cocoa butter, plus sugar and other flavorings  chocolate chips - Another form of chocolate in a particular shape.  Many manufacturers don't make these from true chocolate, but rather substitute another fat which doesn't melt as easily as cocoa butter, for economy, and so the chips hold their shape in the oven  chocolate bunny - Chocolate molded into the shape of a bunny, then tempered and cooled  German's chocolate - A brand name of quite sweet dark chocolate    Chocolate labels which list ""cocoa percentage"" are saying what proportion of the chocolate is cocoa liquer or additional cocoa butter or cocoa solids--that is, stuff from nibs, as opposed to sugar or other flavorings.  The cocoa percentage for milk chocolate tends to be much lower than that of dark chocolates, although not every milk chocolate has a lower percentage than every dark chocolate.  See this question for information on tempering chocolate, which gives its snappy mouthfeel.   Edit:  On dairy products in dark chocolate:  I was very surprised at Lemontwist's comment, so I did some googling and found this article at Go Dairy Free:    A good quality dark or semi-sweet chocolate will only have sweetener /    sugar in some form added, and may also include a touch of soy lecithin    as an emulsifier. These brands are milk-free by ingredients, but keep    in mind that most brands of chocolate are made on shared equipment.    That is, an inherently milk-free dark chocolate may be made on the    same equipment as milk chocolate. See below for my note on    cross-contamination issues.   The complications arrive as some brands of dark and semi-sweet    chocolate do include milk ingredients for a “smoother” end result.    This is particularly true in mainstream brands like Hershey’s. Some    ways that you may see milk listed in the ingredients include milk    solids, milk, milk powder, whey, butter oil or butterfat (see the Ask    Alisa post on butter oil), or even casein. If milk is in the    ingredients, it should be listed in a clearly identifiable manner per    the labeling laws, but still, use caution.    This is still in line with the information I provided, as I did mention ""other flavorings"" in dark chocolate, and it is not a universal or even common practice as far as I know.  For people with strong allergies, the cross-contamination issue may be more of an issue.  Vegans would have more of an issue, as lecithen is a very common ingredient in chocolate of all types, and may be animal sourced.  Vegans would specifically need to reseearch and obtain chocolates that meet that standard.   Googling will find many such products, but I did not find an easy single reference list.  ",2,2
"milk powder [SEP] fresh milk [SEP] Poaching is a gentle process - the milk isn't boiling so there is no risk of it burning or the like. It will of course not spoil in the sense of it going off, that's a totally different process.  Fresh milk is better because, well, it's fresh. Powdered milk would probably work, but if you have fresh, use that.  ",0,0
"reheats better on stove [SEP] in microwave [SEP] I believe it has more to do with HOW a microwave cooks or reheats food vs. the way a conventional stove top does it.  When you put something into a microwave to reheat it, it does not apply heat the way a stove does. Microwaves use their namesakes -microwave radiation- to jostle the molecules contained within the food, causing friction, which in turn causes heat, and heats up the food, from the inside out. This means that food with a higher density, such as meat or veggies, will heat up more quickly than liquids, which are less dense. Also, microwaves don't just heat up the food, but also the container, be it plastic, foam, or the stereotypical white paper boxes. When this happens, the particles within the container (which are being heated) will give off various chemicals, which can alter the taste of food.   When you reheat food on a stove top, you are using a container that is much more resistant to heat (a pan) and you are applying heat evenly, from the outside of the food, regardless of it's density. This means that the pan (90% of the time) will not alter the way your food tastes, and because everything is being heated at the same time and rate, your food tastes more like it did yesterday, or whenever it was that you brought it home.   ",0,1
"a line out [SEP] a close mic system [SEP] The biggest advantage for line out is that you don't have to worry about feedback, and that you can model the tone without worrying about positioning, angles, mics, bleeding, etc; which is a disadvantage of the mic-amp combo, you need to worry about a lot of things to be able to do it correctly.  If you love the sound that comes out of the speakers of the amp, then microphoning the amp has the advantage of capturing the complete tone of the system.  The two deciding factors often are:     Which sound do you like the most, mic-amp or line out?   If you like the mic-amp sound better, will you be able to implement it correctly and successfully? This means no feedbacks, and being able to capture the tone accurately, and making the guitar sound clear in the mix. This also means that you know how to mic an amp: Which mic will you use? In which angle? Pointing to which part of the amp? How close to the amp? You also need to know about feedback, how it's generated, how to avoid it (which also means that you know about PA, monitor, and other sound sources positioning).    The biggest difference between both approaches is the tone. One sounds different than the other. The best guitar amps sound beautiful as a whole (including the speakers) and it's more often than not worth putting a mic on them, but this is not the case for all amps.  So, before anything else, find out which sound you like more with the amps and mics you have available.  Since this has such a big impact in the tone, the guitarist is (normally and ideally) who makes that decision, and if for some reason you can't do what he wants, you do the other option. Seems that you are being able to make that decision, but make sure you take the opinion of the guitarist into consideration. His preference will be reflected in the performance, he will perform better under the conditions he likes the most.  If you liked line out more, just send the out to the mixer (through a DI box and the snake, or directly, depends on your setup).   If you liked the mic sound more, you still have some things to do.   The biggest disadvantage of microphoning an amp live is the danger of generating feedbacks.  You need to be very careful with:     Positioning of both the amp and the mic. Both as isolated as you can from other sound sources (PA, monitoring, other amps). Mic pointing to the amp and away from other sound sources.  Mic type. You need a directional mic (cardioid, supercardioid, hypercardioid) that will reject sound that doesn't come from its front (where the amp is).    Check if you can do these. If you can't, go with line out instead. If the mic will be feedbacking, the mic is just not worth it.  Now check if you can implement the amp microphoning correctly. You will check this during the sound check. Now the whole ensemble will be playing, which will test the positioning of your mic and amp. The mic will now capture other stuff.  Can you hear the guitar clearly in the mix? Maybe there is too much going on acoustically around the mic, and it is affecting the tone (even if there is no feedback). Maybe some things are bleeding into the mic too intensely, and you won't be able to add the guitar comfortably to the mix without affecting other elements. Also, it's easier to generate feedback now than ever. You might be able to solve feedback issues here by EQing the frequencies that are giving problems.  Can the guitar be heard in the mix clearly, without feedback issues, and without negatively affecting other elements in the mix? Then go for it! Otherwise, microphoning an amp will have a negative impact in the performance and sound.   It's not a trivial task, but it's worth the try if you really like the sound of the amp-mic combo. You can always just go line out if you can't pull it off, the important thing is to test first.  ",1,0
"WAV [SEP] MP3 [SEP] The executive summary of Charles' very detailed answer is:    Use WAV for recording and editing.  Use your audio editor's native file format with references to the WAV files to keep disk space under control  use MP3 for distribution. 44.1 and 160kbps is lots, unless your audience has a home stereo that is worth more than their car and ears to match.    ",1,2
"start at low end [SEP] high end [SEP] Interesting question WSkid. Your question got me thinking, so now I'll try to give an answer that, hopefully, will be useful to you.  I can see your point about playing on the higher end. In fact, most exercises would be easier to do at the higher end, because the frets are spaced closer to each other. However, I think there is a reason why most beginner books/methods start at the lower end. The reason is that beginning at the low end allows the student to learn chords quicker. These beginner books/methods usually want to keep the lessons interesting for a beginner. For most people, it is much more satisfying to be able to play a three chord song then to play scales at the 10-12th frets. Also, its easier for a beginner to apply the things learnt on the lower end (open chord, open scales).  As to the correct method of learning, my answer is: probably a mix of both. Learn open chords at the lower end to give you something fun to play, and practice scales at the upper end to build finger strength and independence, and slowly move the scales to the lower end to increase flexibility and reach. When I first started learning the guitar, I started at the lower end, and gradually learned to move up the fretboard. But had I known what I know now, I probably would have done both.  One more thing, have your guitar checked by more experienced guitarist or a repairman, to make sure the the action on your guitar is not too high. If the action is too high, i.e., the strings are too far away from the frets, it would explain why you find it difficult to to press the lower strings. Quick tip: if the action is too high, or you still want learn at the higher end, then a capo would be a great tool. If the action is too high, just put a capo on the 1st or 2nd fret and the strings will be much easier to press down.        ",1,0
"open [SEP] close sourcing niche type products [SEP] An open source project without contributors is really bad.  If the market is small, I doubt you will find any contributor. But I may be wrong. I don't know anything about your market.    You must do a market study.    If you can't afford it, try to release the software first. In free BETA to get more users, but you can do it as a paid edition too already.  As soon as you get users, ask them questions directly (chat with them, don't waste your time with surveys). They will like that very much, and they will always help you to improve your solution.  Ask them if they would contribute if you were open source.  Analyze the results.  Decide.  ",0,0
"Developing With Ruby/Rails [SEP] Developing With PHP/CakePHP [SEP] Either would be perfectly fine for developing web applications.  If your stronger in PHP than Ruby, then likely Cake would be ""faster"" because you wouldn't have to spend the extra time familiarising yourself with Ruby syntax. Obviously the converse is true.  I don't have a huge amount of experience of either but I'd say I prefer Ruby because I find the libraries easier to use and install (rvm/gems etc) and I like having a local development server rather than using Apache and the large and vocal open-source community on github/blogs/twitter is mostly a good thing.  Really, who cares, they're basically the same: Dynamic scripting language, MVC framework... If you're looking to expand your knowledge you might as well look at something very different like node.js or Haskell and Snap.  ",0,0
"functionality [SEP] design [SEP] Functionality  Design can come later, core functionality is key to a deliverable product.  Disregarding design, the key is to get a deliverable functioning product out the door sooner rather then later. Design is a secondary objective. If you can't make it work, then all the flowers and pretty colors won't save you. Having a working product, with minimal design work will.  Perfectly adhering to a pattern or OOP principals are great, but often you will find that for the sake of producing something that works they will have to be ignored in some cases.   ",0,1
"trivial [SEP] non-trivial software [SEP] I'm going to go out on a limb here and say:    A trivial program is one that does not directly impact the business.    A manufacturing firm would consider its accounting software trivial, but the software that controls the robotic arm that moves boiling steel is critical. They can deal with bugs and low support turnaround in the former, but not it the latter. If there's an issue, they need it fixed now.  ",2,0
"Paint.NET [SEP] MS Paint [SEP] There is Paint.NET. It is a free image editing software. It is easy to handle as MS Paint, but contains a lot of advanced features. It supports many different formats. I use it very often to edit images. It is easy to handle and available with translations for different languages.   Paint.NET:    is free  has a modern interface  supports painting on the image  is able to change the size of the paper, the image and crop the image  has vector graphic support, made possible via a plugin  makes it possible to stitch images together How to stitch images in Paint.NET  has support for add-ons      ",0,0
"Ubuntu LTS versions [SEP] regular Ubuntu [SEP] From the Releases page on the wiki:    Ubuntu releases are supported for 18    months. Ubuntu LTS (Long Term Support)    releases are supported for 3 years on    the desktop, and 5 years on the    server.    This means that normal releases are will have bugfix and security updates for 18 months, while LTS releases are maintained for 3 or 5 years (depending on the version).  In other words: if you don't want to upgrade your system at least every 18 months, you'll want to use a LTS release so you'll be able to get security updates for a longer period.  As of the 12.04 LTS release, there is no distinction between server and desktop releases. LTS support is for 5 years despite release type. There is no longer any 3 year support. For a visualization of the support coverage see the Ubuntu wiki page about LTS: [REF]  ",0,0
"5400rpm [SEP] 7200rpm [SEP] I got the 7200RPM fitted into my MBP (it's about 2-3 months old). I use VM Fusion all day long and wanted the best VM performance I could get. My MBP is on all day, 6 days a week, and it's always busy - and I've never had the drive overheat, on battery or mains. There will always be a few bad drives in any batch, but I would say that if you run large, disk intensive applications (virtual machines, photoshops, movie and photo editing) then you should consider the faster drive.   I can't see how a faster drive is going to have a huge impact on games - the graphics card, available memory, processor speed and optical disk speed will all have a bigger impact than the hard drive speed, I would have thought.  ",0,0
"Silverlight [SEP] flash [SEP] Wikipedia on Silverlight:    Microsoft Silverlight is a web application framework with a scope similar to Adobe Flash. Version 2, released in October 2008, brought additional interactivity features and support for .NET languages and development tools.    So basicly, it is a competitor to Flash that uses .NET languages and is more focused on developing interactive web applications, rather than animations and movies.  Currently, Silverlight is only available for Windows and OS X, but there is an open source implementation being developed by the Mono team entitled Moonlight.  ",1,1
"32 [SEP] 64 Bit OS [SEP]   Is there any problems with having 8 GB ram in a 32 bit Windows Vista? As i understand it, i would simply only be able to utiluse ~3,2 GB of them. The rest would just be unsused. Is this correct?    Yes, the extra memory will be physically present, but not usable by a 32-bit OS. It will not cause problems.  ",0,0
"NUMA [SEP] SMP [SEP] Last question first: Yes, Vista does support NUMA (XP professional already did)   In most cases it is beneficial to use the hardwares' native memory mode. 'Optimal' memory bandwidth and latentcy is the result.    The modes access policies can be descibed as follows:  NUMA: use local memory first (fast), if full use foreign (slow)  SMP: map every other memory page to the other CPU, this averages out fast and slow memory access   There are only rare cases where the application access foreign memory in a way that SMP modes averaging out the memory access is beneficial for the overall performance.  Example: Database, that doesn't exceed the memory capabilities of the system but still using significantly more than locally available memory.  If you don't care about memory performance you could have saved the money for the expensive i7 and buy a much cheaper (old style) SMP system and spend the extra money for a team dinner ;-)  ",0,0
"an Intel Celeron [SEP] Intel Pentium processor [SEP] Basically, The Pentium line is the mainstream performance chip, and it has many optimised routines built in that make certain tasks perform fast.  For a Celeron, they heavily cut costs and generally have less on board memory, and the result is a much cheaper chip that performs reasonably well (and generally at less power), but not as good as an equal ghz/mhz Pentium / Core 2 of the same generation.  You can't really compare different generation chips because after the Pentium 4 era, the mhz/ghz no longer really count as a comparison because there are so many other factors that determine speed (front side bus, on board memory, instruction sets e.t.c.)  ",1,0
"Ghost [SEP] Virtualization [SEP] Virtualization is definitely the answer here. If you want multiple OSes at once, you have to go the virtualization route.  It would be very time consuming to have to continually ghost, or even reboot a machine to boot into a new OS.  The only drawback I see is machine resources.  Get a big machine with lots of memory if you plan on using several virtual OSes.  VMWare Server is a nice product that will allow you to setup the VMs and allow users to access them remotely as well (and its free!).  ",0,0
"WiFi [SEP] Wireless [SEP]   Wi-Fi (pronounced /ˈwaɪfaɪ/) is a trademark of the Wi-Fi Alliance for certified products based on the IEEE 802.11 standards. This certification warrants interoperability between different wireless devices.  In some countries (and in this article) the term Wi-Fi[1][2] is often used by the public as a synonym for IEEE 802.11-wireless LAN (WLAN).  Not every IEEE 802.11 compliant device is certified by the Wi-Fi Alliance, which may be because of certification costs that must be paid for each certified device type. The lack of the Wi-Fi logo does not imply that a device is incompatible to certified Wi-Fi-devices.  Wi-Fi is used by most personal computer operating systems, many video game consoles, laptops, smartphones, printers, and other peripherals.    From [REF]  ",2,0
"Sochi [SEP] Khanty-Mansiysk [SEP] First of all, it's definitely Sochi (but sounds more like TCH), this is official transliteration of the Ч.  Secondary, as others mentioned, you must do a stop during your flight at Moscow - unfortunately, in Russia many flights are made with such stop. I suggest you to stop for a day in Moscow, just for another sightseeing there.    Also:  Flight duration from Moscow to Sochi - 2 hours  Flight duration from Moscow to Khanty-Mansiysk - 3 hours, and flight by is made from other airport than you'll land from Frankfurt!, if you choose the UTAir.  You can choose the TransAero, but it's not as cheap as Sochi flight.  And most important part: sightseeing and weather.   Khanty-Mansiysk's average temperature is -9,8 °С, and sometimes there is cold weather,  down to -40.1 °С (March, 1st, 1966).  Sochi's average temperature is +15 °С, with sea temperature up to +9 °С. You can try it out - extreme, but quite fun :) There will be a snow machines for Biathlon in Sochi, but natural snow is in Khanty-Mansiysk.  As for the sightseeing, in Khanty-Mansiysk is all about the World Cup - people there love skiing, and you will be bored there if you are not a fan of it. There are quite small quantity of the sights in Khanty-Mansiysk (in Russian), and even less of them you'll be interested in during cold weather.  As for Sochi, you'll find much more fun there - because it is a very popular touristic center during long time. And because of preparing for the Olympic games, there are much more easier for foreign tourist to get information about city - people started to study languages, and whole touristic situation changed in a good way.  So, make your choice, but if I were you, I'd start with Sochi (plus 1-2 days stop in Moscow) - for start it will be enough. But if you want some extreme - choose the Khanty-Mansiysk, it will be a journey of the year for you.  ",0,0
"to buy the whole trip [SEP] leg by leg [SEP] It can certainly be less expensive to purchase separate tickets for certain segments as opposed to the complete journey, particularly on a mixed itinerary.  I would strongly advise against this unless you are a very experienced international traveler, for a number of reasons:    Checked baggage - Even if the two airlines you are flying have an interlining agreement, the agent may still refuse to check them through if the segments are on separate tickets. Thus, you would need to claim your baggage, get processed by customs and immigration, and then stand in line to have them re-checked to your next destination.  Flight irregularities - Since the two tickets are independent of one another, agents from the first airline will be unable to protect you on your connecting flight in the event of weather, mechanical problems, air traffic conditions, labor actions, or any of the other things that can cause your first flight to be delayed or canceled.  Indeed, airlines adjust their schedules constantly, and you may find that your first flight has been shifted three hours later, making the connection impossible; you would be responsible for contacting the second airline to make arrangements and to pay any associated change fees. This is of particular concern on international flights, where many routes have frequencies of once a day or even less.     If the flights are on the same record (PNR), you avoid the above scenarios, as the agent would have no reason to refuse interlining your bags, and in the event of problems with any segment that causes you to misconnect, the airline you purchased with would be responsible for booking you on alternative flights. Otherwise, in a worst case scenario, you could be forced to pay thousands of dollars for a walk-up fare to continue your journey. Given that, a few hundred dollars seems like cheap insurance.  I will say that these risks are not serious when booking your outbound and return trips on separate tickets, unless you have a very short turnaround time. It is not necessarily cheaper to do it this way, and you may lose some benefits. For example, a United Airlines round trip award ticket allows both a stopover and an open jaw, but not on two one-way awards, even though each requires the same number of miles.  ",0,0
"GSM 850/1900 [SEP] CDMA/IS-95 [SEP] There are many available options as far as prepaid services available in the US:    Simple Mobile  Virgin Mobile  Boost Mobile  AT&T Go Phone  Cricket    Most of these sell GSM phones that are enabled for US and some are even able to be used in Europe but you will need to have a tri-band or quad-band to be able to do that.  Now as far as IS-95 commonly known as CDMA is that outside the US/Canada the coverage is not as common and not as available.  EDIT    Coverage in Mammoth Lake depends on the carrier.  Most major ones are likely to have it covered, smaller ones are likely not to have coverage in more rural areas.  Credit - It expires.  AT&T Go phone will expire in 6 months to a year.  Overall costs: Phone + service vary by phone and by service.  GoPhone Alcatel Phone: $15 + 10c/minute    ",0,1
"Ferrying Icelandic rental car [SEP] renting on Faroe Islands [SEP] Although all comments were helpful it seems this question is a bit specific to the situation, so here's the answer I found with research.   After contacting a few rental companies in Iceland and talking to the Smyril ferry lines, only one rental company, Reykjavik Cars, will allow the car to go off the island, whereas Smyril said it was ok on their side. Even within Europe, it still counts as taking the car to a different country so it's not without complications. (For comparison, rental agreements here in Canada allow you to drive the car across the border to a contiguous US state)  The Smyril fare for a car is the same for any model as long as the car fits their maximum dimensions. It's about 828 euros return with a car vs 370 without one. A quick search for a week's rent on the Faroes comes down to about 460 euros, it's actually about the same in expense but probably more practical to go on with the same car.  Flying return from KEF is about 1000$ when I checked. Keep in mind these prices are all for high season, June-July.  So the answer:  Cheapest seems to be flying actually, although rental fees are lower there is still gas to take into account. Most practical would be to ferry the Icelandic rental car across. And for anyone looking to ferry any rental car between countries, I'd recommend checking first with rental companies before the ferry lines.  ",1,0
"on a week day [SEP] a weekend [SEP] York is a difficult place for the motorist at any time. For the obvious historical reasons the city centre is not geared up for anything but light-to-reasonable traffic but does have a linked series of single-carriageway roads circumnavigating the Roman Walls to help motorists avoid traversing the city centre itself.   A few miles further out you have an outer ring road which is dual carriageway on the South and Eastern sides (A64), and single-lane on the West and Northern sides. Parking is severely restricted in the centre although there are a few small car parks if you wish to gamble on driving to the centre and finding a space. York counteracts this by having 5 or 6 Park and Rides (info here) dotted around the outer ring road, with judicious use of bus lanes to move visitors and workers into the city centre reasonably efficiently and as York isn't a huge city it's a fairly quick journey.  During the week you have office workers and tourists; at weekends you have shoppers and tourists. The differential between traffic levels between the two is minimal, in my experience. York is generally busy traffic-wise whichever day of the week you would choose to go.  ",1,0
"Stroller [SEP] baby sling [SEP] No contest: baby sling.  Wikivoyage has an article about travelling in Japan with children, and the bit about travelling in dense Japanese cities applies to Hong Kong as well:    In a nutshell, leave your giant stroller at home, as they can be a    nightmare to deal with. City sidewalks are busy, temple and shrine    paths are nearly invariably gravel, trains are crowded (impossibly so    in rush hour), and while elevators are slowly being retrofitted    everywhere, there are still many stations where you'll need to use the    stairs or take long detours to use the one elevator available. [...]  Instead, the Japanese prefer baby carriers, often for children as old    as two, and lightweight collapsible umbrella strollers that fit    through normal ticket gates and can be carried up or down a flight of    stairs one-handed in a pinch.    In my own experience, umbrella strollers are handy, but require two adults to comfortably operate: eg. one climbs up stairs with baby, the other carries stroller, diaper bag, suitcase, etc.  A 6-month-old is also a bit borderline to use one for longer periods of time, try it out before you take one along.  And yes, September will be hot.  If you're feeling uncomfortably hot, the baby will be feeling so as well.  Fortunately virtually everything in HK is air-conditioned.  ",0,0
"round-trip car rentals [SEP] one-way car rentals [SEP] There are elements of truth in most of the other answers, but as a 16-year veteran of the rental car industry in the US, I'll toss my take into the mix.  Most of the time when you're searching, the answer is: ""because they can.""  What I mean by that is that the whole ""well, someone has to drive it back to the renting office"" is not actually the case. That's because most rental offices in mid-size and larger cities are corporate-owned, and all three of the big-name rental companies that operate the eight major brands (Avis, Budget, Enterprise, Alamo, National, Hertz, Dollar, and Thrifty) now use a ""floating fleet"" model, which means that the companies maintain a nationwide single fleet and any car can be assigned to and rented from any location at any time.  So if someone rents a car at Avis LAX and returns it at Avis in Austin, the car simply gets washed by the detailing crew at Avis Austin, placed in a parking stall at Avis Austin, and assigned to the next Avis Austin customer who comes in to pick up that size car. The same thing happens if they rent at Avis LAX and return at Avis in downtown Los Angeles or Avis in Midtown Manhattan or Avis at Chicago Midway airport. That's why a large number of license plates on any corporate-owned rental lot tend to be from out of state.  Now, of course, for every person who picks up in LAX and returns elsewhere, there's usually someone renting elsewhere and returning in LAX, so the fleet tends to stay pretty balanced. That's why I say they charge the one-way fee ""because they can""--because there really isn't a hard cost to them. Cars go out, cars come in, and all is good. But the market (supply, demand, and competition) allows them to charge a premium price for one-way rentals, so even though there's no (or a very minimal) direct expense associated with these kinds of one-way rentals, they do it because they can.  Of course, sometimes one-way flows do result in an imbalanced fleet. If LAX loses too many cars and they have fewer cars than they forecast needing to meet demand, then they do have to arrange for cars to be brought back from somewhere else. So sometimes it is necessary to truck a load or ten of cars in from elsewhere, and that does have a cost, so collecting one-way fees allows them to cover those costs.  It's worth mentioning that seasonal demand can have some interesting effects. I've taken advantage of the fall ""Florida Drive-In"" specials, where picking a car up in the Northeast and dropping it off in Florida can net some extremely attractive rates ($5-10 per day or so)--cheaper than a standard round-trip rental! This helps the rental car companies move cars from the colder northern states (where demand slacks off in the winter) to the warmer southern states (where winter is peak season). It's much cheaper to have people drive cars down for you than to pay a car carrier to haul it down by truck or, even worse, to have cars sit idle in the north while offices in the south buy or lease extra cars to meet demand. (There's also the related Florida Drive-Out special that takes place in the spring and some less-lucrative similar offerings out west.) So it's not always true that one-way rentals are more expensive!  As well, there are certain places where one-way fees seem to be very reasonable or even not charged. One answer mentioned rentals in Germany--that's a place where one-way fees seem not to be part of the local rental culture, unless you try to drop the car off outside of Germany. Intra-Florida rentals are often quite cheap (due to a ton of competition--it's the largest rental car market in the world and there are literally dozens of rental car companies that operate at Florida's major airports), and intra-California one-ways are frequently not charged fees, too (that's because the one-way flows between places like Los Angeles and San Francisco are pretty balanced--as many people are interested in driving up Highway 1 as are interested in driving down Highway 1, I suppose), so that, combined with the high volume and competition, lends itself to reasonably-priced one-way rentals.  Now, when it comes to franchised locations, one-way fees are based much more in the realities of rental car logistics. If a car owned by a licensee location (typically found at smaller, more rural airports or in some smaller towns) ends up far away from its base, there are hard costs to deal with that situation. The best option is for the receiving location to rent the car back to its owning location on a paid one-way rental, but there's no guarantee of that happening quickly, and the owning location loses the potential revenue of the car they paid for until it gets back into the fleet. Failing that, the owning location has to pay to have the car transported back home, either by car carrier or by sending an employee to go retrieve the car--not a small cost. And in a worst case situation, the least-bad solution is for the owning location to simply sell the car to the receiving location, but that's obviously not without its own costs and logistical headaches.  In these cases with franchised locations, the one-way fees are actually intended to be punitive and dissuade people from choosing that option, but they also cover the rental agency's costs if someone does require a one-way rental.  I should also address a couple of topics with one-way fees. Most rental car agencies now don't quote an explicit, broken-out one-way drop fee, instead baking the one-way fee into the rate itself. For example, a standard round-trip rental in Portland might run you $40 per day, but if you quote a reservation for a one-way to Seattle, it might balloon up to $100 per day. However, some companies, as well as some booking channels (usually prepaid brokers), still break the fee out (for the hypothetical Portland rental, both the round-trip and one-way rentals would price out at $40 per day, but the one-way would have a $100 drop fee attached).  The former model works best for short rentals, while the latter is more advantageous for longer rentals. In the Portland example, if you can do your one-way drive in a single day, the included one-way is cheaper (a net extra charge of $60). But if you're going to take a week to drive the Washington coastline, the weekly rate would balloon from a couple hundred bucks to north of $500. With a separately-itemized $100 drop fee, you'd pay the same fee even if you kept the car for a month. In any case, the best thing to do is just plug your dates and locations into a search engine that searches all rental companies at once and choose the one that displays the cheapest total price (ignore the base rate and pay attention instead to the total with all taxes and fees).  Mileage fees are sometimes charged, but they're more common with franchises. However, sometimes you'll see them applied at major locations depending on what kind of discount code you use. For example, the USAA discount code with Hertz returns very attractive rates even on long-distance one-ways until you notice the catch: an almost punitive mileage fee that can total hundreds of dollars. Unless you're literally just driving across town, mileage-based one-way fees are rarely the best option.  ",0,0
"Dubai [SEP] Doha [SEP] Doha    Transit Visa: Not required..   Visa On Arrival: You can have VOA if you want to go outside the airport in DOH for $30.  Airport is nice and full facilities are available (duty free, food, place to sleep...etc).  The city is nice with lots of activities. I suggest visiting The Museum of Islamic Art. Doha has many malls and modern shopping centers.    Dubai    Transit Visa: Not required.  Visa On Arrival: You can have VOA if you want to go outside the airport in DXB for   Free.  Airport is huge and one of the best in the world. full facilities are available (duty free, food, place to sleep...etc).  Dubai is the best city in the middle east, you will not find it difficult to find nice places to visit.       UAE and Qatar both are Arab countries so you will see Arabian stuff definitely everywhere you go.   Regarding Friday, no you will not find any problem. In both Qatar and UAE the weekend is Fridays and Saturdays. All places will be open except for government offices.   FYI, the visa information was intended for Italian citizens. For other nationalities please read this for UAE or this for Qatar.  ",1,0
"my institution domain [SEP] a domain of my own [SEP] Why don't you just do both? By both, I mean use both URLs. I ""do both"", so when I graduate, I'll still have my site for others to see. You can do this in many ways, but I had my university student page auto-redirect to my personal home page. The code for that is like a one-liner.  This grants me the opportunity to refer people to different sites depending on the situation. I think myname.com is undoubtedly easier to remember than the nuances in my university student site URL: people.school.org/first.last ... On the other hand, if the situation is more institution-based, perhaps it's better to stick with my college's name. You've got options this way.  ",1,1
"tell a story [SEP] important first [SEP] Posters are hard to get right. They require design skills and knowing what the core message of your paper is. Presenting them requires people skills. Aside from this, different areas seem to have different criteria and norms when it comes to this so if you want to fit in you should try to follow those.    But in general, most scientific posters I've seen are really terrible in terms of tools for communication: they have far too much text and get into far too much technical detail. For example, on this site posted in the comments on the question, there's some nice visuals but all of the posters have, in my opinion, far too much text.   One excuse for a lot of text on a poster I often hear is that people will can read them on their own between sessions or whatever. In my own area and experience, I don't buy this argument: that's what the paper is for and I rarely see anyone reading these literal walls of text in their spare time.  The advice you've gotten from the internet seems to follow that thinking: the thinking of printing a full paper on a poster in bullet form. An A0/A1 wall of text is not the best way to sell your work, nor is a boring traditional narrative of introduction, methodology, results, related work, conclusion or whatever.  I say this from the perspective of someone who's gone to too many poster sessions and gotten trapped at a poster where someone for some reason decided I would be interested in spending 20 minutes silently listening to them recite the slightly abridged version of the paper that they had for some reason decided to printed on their poster. One guy even seemed to expect me to leave after he was done. After he had finished reading the conclusions at me he had a look on his face that said ""who's next?"".  Okay so that's one extreme.    For me, the secret to a good poster presentation is two-fold: the poster and the person in front of it.  In terms of a poster session, people will probably have some food with them, people might even have some drinks, you should not assume to take more than 5 minutes of their time, they're probably not going to get all the technical details and they're definitely not going to read a wall of text. At least one would hope that they wouldn't read it because that would imply that you'd be talking to yourself since they cannot read text and listen to you at the same time (unless you're reading aloud the text that is).  When I was working with students on posters, I would always advise them to dispose of the idea that they can or should communicate the full technical depth of a work on a poster to a passer-by in five minutes.  Their goal should be to motivate and communicate enough of the core ideas of the work to convince people passing by their poster that the paper would be worth taking the time to read and to teach them something cool.  In terms of that goal, I would bring the student to a white-board and tell them to pretend I was a conference-goer who knew nothing of the work but we met at a coffee break and I asked them to tell me about the work. They can use the board or ... if really needed ... they can point to something in the paper. While presenting, they should appear enthusiastic (without overselling) and emphasise why the work is important ... why I should care, and what the main results were.   They should also listen to what I say ... it should be a conversation. They should make sure that the person they're talking to is following them ... that they don't just launch into a 10 minute soliloquy at the first person that looks in their direction but that there's an element of interaction.  After that exercise whatever they were trying to represent on the board or whatever they needed to point at in the paper: that and pretty much only that is what goes on the poster ... diagrams, examples, main results ... things they can point to help them explain verbally what the work is about.  Then we'd sketch out a poster and try make it visually appealing ... try to tell a visual story with it ... try to make it attractive for people to come over and ask what it's about.  Not that the end result is always perfect, but the approach does lead to a better result in terms of a communication tool than the wall-of-text approach that seems so bizarre to me in the world of scientific posters.  ",0,1
"a barely passed grad course [SEP] no grad course at all [SEP] The big question that both your recommenders and the admissions committee will wonder about is what this experience predicts for you in graduate school.  If you do poorly when taking a grad class now, will you be able to do well in grad school?  One factor may be preparation.  Maybe you were enthusiastic but overly ambitious, and in another year you'll have the experience and preparation needed to do well.  This is the reassuring scenario.  Another possibility is that you're just not used to be challenged by courses, since the undergraduate program was not very demanding.  Now that you know what you face, you'll take it more seriously and do better.  It's entirely possible, but this scenario is more worrisome.  Lots of people say ""oh, next time I'll work harder,"" but this is easier said than done.  And there are even more worrisome possibilities.  For example, maybe you just didn't like the material and couldn't bring yourself to engage deeply with it.  This could be a symptom of lack of preparation, or it could be a sign that this field is not a good fit for you.  I'd recommend dropping the course.  In grad school there's no value in barely passing a course: if you need to learn something, then you need to really learn it well, not just avoid failing.  This means a bad grade on a transcript won't impress admissions committees, and it means you're going to have to go back and learn this material properly in the future anyway.  Probably you should take this course in grad school.  If you don't take it, then you'll need to put in some serious effort to master the material on your own.  Meanwhile, you should think about what went wrong and how to explain it to your recommenders, so that you reassure them regarding your future in grad school.  ",0,0
"to submit a paper to a journal ""normal"" issue [SEP] send it to a more focused ""special section"" of the same journal [SEP] There's another alternative. You can submit to the special issue early.  Usually journals don't have ""easier"" submission to a special issue or section. Most journals try to have the same review and editing criteria for such contributions as they do for other articles. (Consider that having different criteria makes it harder for them to process and track such articles.) I can attest - I had a manuscript that was asked for significant revision and it didn't make the ""special issue"" by the time we'd revised it.  But you can submit the article and ask for inclusion in the special issue and explain that you have the manuscript done now. They will probably send it for review, etc. but it won't be published until the remainder of the special section is finished as well.  I've done this. It gets the paper off your desk and lets you move on to other things.  What are the pros and cons?:    Pro: Usually a special section or special issue gets added attention and publicity. I haven't seen analysis, but one would hope that articles in this section or issue would have more readers and potentially more citations than in a normal issue.  Con: You will have to wait for the special issue to finalize, while if you submit to the ""regular"" journal, publication will probably happen sooner. On the other hand, if the journal publishes accepted articles before publication, or you can put the manuscript on a pre-print server, there's little downside.    Personally, I'd submit early, indicate in the submission letter (and online forms) that the article is for the special section and be done with it.  ",2,1
"university teaching [SEP] high school teaching experience [SEP] If there is an option definitely university teaching is more valuable as it is at the same level as the teaching you will experience while doing your degree. However, you should consider that PhD is a research-based degree and teaching obligation is not primary concern. So you might get the position without having any teaching experience and finally get your PhD being a year or so younger.     ",0,0
"to have just two good letters of recommendation [SEP] two good letters and one bad letter [SEP]   Is it better to have 2 good letters or recommendation or 2 good and 1 bad letter?    Definitely, it's better to have two good letters.  A bad letter is a very, very bad thing.  They're not counting -- they're reading for understanding.  ",0,0
"a paper with pedantic vocabularies [SEP] a paper easy to read [SEP] There is a third way:  Be pedantic about your vocabulary in the right way to make your paper more readable.  Using established, clear, and consistent vocabulary and defining it when necessary is the best way to ensure that you are not misunderstood. The main advantage of “simple and easy words” is that they do not need to be explained to the reader, but this also entails that you rely on the reader interpreting these words the same way as you do, which may be not given surprisingly often. Defined vocabulary does not have this disadvantage.   Moreover, you need to at least need to mention the established, “pedantic” vocabulary for context and to avoid the impression of reinventing the wheel. By consistently sticking to it, you avoid switching between different terms for the same thing, which usually impedes intelligibility.  However, you should also bear in mind that readers unfamiliar with this vocabulary may want to read your paper. For these readers, define the more uncommon words and cite papers explaining the basic underlying concepts. Papers are not difficult to read because they contain new words, but because these words are not properly explained or because the reader does not understand the concepts represented by them. For example if you write a paper on theoretical particle physics, readers will have to understand some elementary aspects of quantum theory to follow your thoughts. Using vocabulary that can only appeal to readers without this basic understanding of quantum theory is pointless and only raises false expectations.  Finally, if you get to introduce new concepts, you can try to choose words for them appeal to intuition, but this does not mean that you are relieved from the burden of explaining these words.  ",1,1
"to give a poor/unfinished talk at a conference [SEP] cancel it [SEP] When this happens to me, I just describe it as ""work in progress"" or a ""research attempt"" and present what I can with what I've got.  What's wrong with that?  That's how research works.  ""...hasn't panned out like I hoped it would when I accepted the talk.""  You can say this during your talk, and explain why it didn't pan out, and ask the audience if they can help.  Maybe someone in the audience (your next co-author perhaps?) knows how to proceed, and has the expertise you're lacking.  If nobody can help, maybe that's an indication that there is an obstacle (which is important to know).  You've said you're a PhD student, without expertise in the side-topic.  Feel free to mention it in your talk ""I'm a PhD student in [some subject] at [some university] under [someone].""  You said a post-doc invited you to give a talk (which I expect is not in the sense of an ""invited speaker""), who presumably knows you're an early PhD student, and presumably knows what early PhD student talks are sometimes like.  My suspicion is that this question is more about inexperience and lack of confidence than an inability to give a reasonable talk due to the work being unfinished.  ",0,0
"graduate school [SEP] professional school [SEP] At least in my geographic region (Texas, or the US southern states), a professional school implies a curriculum that targets specific skills for a particular vocation. In effect, this is akin to my awkward bastardization of several concepts:      ""Teach a man to fish and he can become a fisherman ... help him learn    how to think and he can pursue a career in whatever he wants.""    The former refers to a professional/vocational school.  The latter refers to accredited universities with broader range of curriculum missions.  Granted, this reflects my biased perspective: admittedly, vocational schools have a (usually) noble and useful purpose, but proper universities can offer so much more to enrich the whole student, and potentially brighten the intellectual and career outlook for years to come.  ",1,1
"TOEFL [SEP] IELTS [SEP] In most cases, there is no preference. The vast majority of graduate programs in the US accept both IELTS and TOEFL.  A program that does have a preference will say so in its admission instructions. For example, BU engineering prefers TOEFL:    In addition to the required credentials for applications, international students must demonstrate an understanding of English, including the ability to read and write with ease. International students are required to submit scores from or the Test of English as a Foreign Language (TOEFL) that meet our minimum requirements. If the TOEFL is not available, we will accept scores from the International English Language Testing System (IELTS).    and MIT Material Science and Engineering only accepts IELTS:    If your first language is not English, you will need to submit an IELTS test score. Please note: this department does not accept TOEFL scores under any circumstances.    While Stanford only accepts TOEFL:    Stanford does not accept IELTS scores.    (While through Spring 2016 NYU GSAS acccepted TOEFL only, as of Fall 2016 they appear to have moved to the ""no preference"" camp.) and NYU Graduate School of Arts and Sciences only accepts TOEFL:--    Do you accept the IELTS instead of the TOEFL?  No.         So you can check if the specific programs you are interested in have a preference.  ",1,1
"to use a table of tables [SEP] dynamically created tables [SEP] A generic database design limits the proliferation of new tables as the number of forms and data elements grows. On the other hand even the simplest query involved 3 tables, in our case.   Queries indeed got very mind boggling. After 3 years of this I became of the opinion that explicit tables was better. I'd rather deal with more tables that better reflect the business form/model - that I can understand just by looking at them; vice 1/2 the tables but with multitudes of meaningless join tables requiring astonishing long, nested queries to make even the most rudimentary sense out of the data. You actually start memorizing the meaning/context of individual identity column primary keys!  Finally, we had evolved to where we had that one table to rule them all so as to get away from some of the inherent complexities (and bad coding and design decisions of the past) in the existing design and evolving user requirements. Nonetheless, we were certain we'd have problems as the table size went into the million+ row size.  ",0,0
"to use assert [SEP] IllegalArgumentException [SEP] BEWARE!   Assertions are removed at runtime unless you explicitly specify to ""enable assertions"" when compiling your code. Java Assertions are not to be used on production code and should be restricted to private methods (see Exception vs Assertion), since private methods are expected to be known and used only by the developers. Also assert will throw AssertionError which extends Error not Exception, and which normally indicates you have a very abnormal error (like ""OutOfMemoryError"" which is hard to recover from, isn't it?) you are not expected to be able to treat.  Remove the ""enable assertions"" flag, and check with a debugger and you'll see that you will not step on the IllegalArgumentException throw call... since this code has not been compiled (again, when ""ea"" is removed)  It is better to use the second construction for public/protected methods, and if you want something that is done in one line of code, there is at least one way that I know of. I personally use the Spring Framework's Assert class that has a few methods for checking arguments and that throw ""IllegalArgumentException"" on failure. Basically, what you do is:  Assert.notNull(obj, ""object was null"");    ... Which will in fact execute exactly the same code you wrote in your second example. There are a few other useful methods such as hasText, hasLength in there.   I don't like writing more code than necessary, so I'm happy when I reduce the number of written lines by 2 (2 lines > 1 line) :-)  ",0,0
"to build HTML Code string on the server [SEP] on the client side [SEP] Server-side    Pros: More controllable, easier to debug, less dependent on client's browser   Cons: More server load, higher network traffic and latency    Client-side    Cons: Depends on decent JS/DOM implementation in the browser.  Pros: Performance, performance, performance. Less server load (thus faster server response), much less network traffic, and thanks to previous two much less latency.    For example LinkedIn's Engineering Team article   ""Blazing fast node.js: 10 performance tips from LinkedIn Mobile"" as one of the points talks about that issue.   ",1,0
"Save as you go [SEP] Save when you're done [SEP] If you need transactions in your application, you will need to offer some kind of explicit ""Save"" option.   If the applications don't need transactions, using a database (as opposed to, say, a NoSQL technology) may be redundant.  This also means that the ""Save"" operation should not be a method called on the mutated object.   It should be a method on the transaction object, or the session.   ",1,1
"onError handler [SEP] exceptions [SEP] I agree with Paul Equis's answer that exceptions should be preferred, but with a caveat.  One major feature of exceptions is that they break control flow.  This is usually desirable, but if it isn't then some other pattern might be useful for augmenting the exception system.  For example, suppose you're writing a compiler.  Exceptions might not be the best choice here, because throwing an exception stops the compile process.  This means that only that first error would be reported.  If you want to keep reading the source code in order to try and find more errors (as the C# and VB compilers do), then some other system is needed for reporting errors to the outside world.  The easiest way to take care of that would be saving the exceptions to a collection and then returning it. However, using an OnError delegate might be worthwhile if you want to give the caller an opportunity to give advice on how to proceed after each error.  That sounds like an uncommon scenario to me, though.  If you're not asking the caller to really micro-manage error handling, then using some flags to specify error-handling behavior would be less fiddly to work with.  ",0,1
"start learning programming - with imperative [SEP] declarative languages [SEP] I used to teach Prolog as a first language to freshmen (followed by Scheme and Java in the next semesters) . It was great for some of them, and apparently completely impenetrable for many others. Logic programming may be very close to mathematical logic, but many people are not, in fact very good at formal logic - it's very different from the kind of reasoning (largely informal or even unconscious) that people actually use day-to-day.  On the other hand, I have also taught Java first, with much the same ratio of success! These days I believe that it depends way to much on the individual learner to make a blanket suggestion. I still think that starting with near-machine-level languages (to understand what is actually happening in the computer) and then progressing towards more abstract languages was the right way for me personally, but experience has convinced me that this is not the kind of recommendation that can be generalized.  ",1,0
